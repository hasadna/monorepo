{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","core","rxjs","operators","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__values","o","m","Symbol","iterator","next","value","done","__read","e","ar","push","error","__spread","concat","getClosureSafeProperty","objWithPropertyToExtract","Error","fillProperties","source","NG_COMPONENT_DEF","ngComponentDef","NG_DIRECTIVE_DEF","ngDirectiveDef","NG_INJECTABLE_DEF","ngInjectableDef","NG_INJECTOR_DEF","ngInjectorDef","NG_PIPE_DEF","ngPipeDef","NG_MODULE_DEF","ngModuleDef","NG_BASE_DEF","ngBaseDef","NG_ELEMENT_ID","__NG_ELEMENT_ID__","defineInjectable","opts","providedIn","undefined","defineInjector","options","providers","imports","getInjectableDef","type","getInjectorDef","InjectionToken","_desc","ngMetadataName","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","additionalProcessing","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","_a","args","_i","annotationInstance","bind","TypeDecorator","cls","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","Query","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","ContentChildren","selector","data","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ɵChangeDetectorStatus","__window","window","__self","WorkerGlobalScope","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","keys","getOwnPropertyNames","Map","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","isNaN","stringify","token","map","join","overriddenName","res","newLineIndex","indexOf","substring","__forward_ref__","forwardRef","forwardRefFn","resolveForwardRef","ViewEncapsulation","componentResourceResolutionQueue","Set","componentNeedsResolution","component","templateUrl","styleUrls","unwrapResponse","response","text","EMPTY_OBJ","EMPTY_ARRAY","_renderCompCount","defineComponent","componentDefinition","typePrototype","declaredInputs","def","providersResolver","consts","vars","template","hostBindings","contentQueries","contentQueriesRefresh","attributes","inputs","outputs","exportAs","onInit","ngOnInit","doCheck","ngDoCheck","afterContentInit","ngAfterContentInit","afterContentChecked","ngAfterContentChecked","afterViewInit","ngAfterViewInit","afterViewChecked","ngAfterViewChecked","onDestroy","ngOnDestroy","onPush","changeDetection","OnPush","directiveDefs","pipeDefs","selectors","viewQuery","features","encapsulation","Emulated","id","styles","_","noSideEffects","directiveTypes","directives","feature","pipeTypes","pipes","invertObject","forEach","extractDirectiveDef","extractPipeDef","getComponentDef","getDirectiveDef","getPipeDef","defineNgModule","bootstrap","declarations","transitiveCompileScopes","obj","secondary","newLookup","minifiedKey","publicName","declaredName","isArray","defineBase","baseDefinition","defineDirective","definePipe","pipeDef","pure","getNgModuleDef","throwNotFound","NodeInjectorFactory","TVIEW","FLAGS","PARENT","NEXT","QUERIES","HOST","HOST_NODE","BINDING_INDEX","CLEANUP","CONTEXT","INJECTOR","RENDERER_FACTORY","RENDERER","SANITIZER","TAIL","CONTAINER_INDEX","CONTENT_QUERIES","DECLARATION_VIEW","HEADER_OFFSET","ACTIVE_INDEX","VIEWS","NATIVE","RENDER_PARENT","LCONTAINER_LENGTH","MONKEY_PATCH_KEY_NAME","TNODE","PARENT_INJECTOR","INJECTOR_BLOOM_PARENT_SIZE","NO_PARENT_INJECTOR","FactoryPrototype","isViewProvider","injectImplementation","resolving","canSeeViewProviders","injectImpl","stringify$1","loadInternal","view","readElementValue","getNativeByIndex","lView","getNativeByTNode","tNode","hostView","getTNode","getComponentViewByIndex","nodeIndex","slotValue","isContentQueryHost","flags","isComponent","isComponentDef","isLContainer","isRootView","getRootView","readPatchedLView","getRootContext","viewOrComponent","readPatchedData","hasParentInjector","parentLocation","getParentInjectorIndex","getParentInjectorViewOffset","getParentInjectorView","location","startView","viewOffset","parentView","R3ResolvedDependencyType","defaultScheduler","requestAnimationFrame","setTimeout","addAllToArray","items","arr","findComponentView","rootTNode","getCompilerFacade","globalNg","ɵcompilerFacade","InjectFlags","Inject","Optional","Self","SkipSelf","Host","_injectImplementation","elementDepthCount","_currentInjector","setCurrentInjector","injector","former","setInjectImplementation","impl","previous","injectInjectorOnly","Default","injectRootLimpMode","get","inject","notFoundValue","injectableDef","injectArgs","types","arg","j","queueInitHooks","tView","initHooks","checkHooks","queueLifecycleHooks","firstTemplatePass","directiveStart","end","directiveEnd","queueContentHooks","queueViewHooks","queueDestroyHooks","contentHooks","contentCheckHooks","viewHooks","viewCheckHooks","destroyHooks","executeInitHooks","currentView","checkNoChangesMode","executeHooks","allHooks","hooksToCall","callHooks","bindingsEnabled","previousOrParentTNode","isParent","currentDirectiveDef","setCurrentDirectiveDef","enableBindings","disableBindings","getLView","restoreView","viewToRestore","contextLView","getPreviousOrParentTNode","setPreviousOrParentTNode","setTNodeAndViewData","getIsParent","setIsParent","isCreationMode","getCheckNoChangesMode","setCheckNoChangesMode","mode","getFirstTemplatePass","setFirstTemplatePass","bindingRootIndex","getBindingRoot","setBindingRoot","enterView","newView","hostTNode","oldView","bindingStartIndex","nextContextImpl","level","walkUpViews","nestingLevel","leaveView","includeViewProviders","setIncludeViewProviders","v","oldValue","BLOOM_MASK","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjectorForNode","existingInjectorIndex","getInjectorIndex","injectorIndex","insertBloom","blueprint","parentLoc","getParentInjectorLocation","parentIndex","parentLView","parentData","footer","parent","diPublicInInjector","bloomAdd","charCodeAt","bloomBit","mask","b6","b5","tData","injectAttributeImpl","attrNameToInject","attrs","attrName","getOrCreateInjectable","bloomHash","bloomHashBitOrFactory","tokenId","savePreviousOrParentTNode","saveLView","previousTView","hostTElementNode","shouldSearchParent","bloomHasToken","instance","searchTokensOnInjector","NOT_FOUND","moduleInjector","currentTView","injectableIdx","locateDirectiveOrProvider","getNodeInjectable","canAccessViewProviders","isHostSpecialCase","nodeProviderIndexes","providerIndexes","tInjectables","injectablesStart","directivesStart","cptViewProvidersCount","endIndex","providerTokenOrDef","dirDef","lData","isFactory","getPrototypeOf","previousIncludeViewProviders","previousInjectImplementation","injectorView","isFirstHostTNode","NodeInjector","_tNode","_lView","getFactoryOf","typeAny","getInheritedFactory","getLContext","mpValue","isComponentInstance","findViaComponent","isDirectiveInstance","findViaDirective","directiveInstance","firstChild","directiveIndexEnd","traverseNextElement","getDirectivesAtNodeIndex","findViaNativeElement","existingCtx","native","context","createLContext","attachPatchData","rElement","parent_1","parentNode","parentContext","localRefs","getComponentViewByInstance","componentInstance","child","componentIndices","components","elementComponentIndex","includeComponents","directiveStartIndex","slice","getComponent","element","loadLContextFromNode","getComponentAtNodeIndex","getContext","getViewComponent","loadLContext","getRootContext$1","getRootView$1","componentOrView","getRootComponents","getInjector","getDirectives","throwOnNotFound","getHostElement","directive","node","Node","isBrowserEvents","listener","useCapture","getListeners","lCleanup","tCleanup","cleanup","listeners","firstParam","secondParam","name_1","listenerElement","callback","useCaptureOrIndx","sort","sortListeners","CAMEL_CASE_REGEXP","normalizeDebugBindingValue","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","throwMultipleComponentError","tagName","NO_CHANGE","updateBinding","bindingIndex","getBinding","bindingUpdated","isDifferent","bindingUpdated2","exp1","exp2","different","bindingUpdated3","exp3","bindingUpdated4","exp4","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","renderer","domRendererFactory3","createRenderer","hostElement","rendererType","document","getParentNative","getHostNative","getFirstParentNative","getLContainer","embeddedView","containerHostIndex","getContainerRenderParent","tViewNode","container","projectionNodeStack","walkTNodeTree","viewToWalk","action","renderParent","beforeNode","projectionNodeIndex","nextTNode","executeNodeAction","nodeOrContainer","lContainer","componentView","head","projection","insertBefore","removeChild","destroyNode","createTextNode","createText","addRemoveViewFromContainer","insertMode","insertView","containerIndex","views","splice","detachView","removeIndex","detached","viewToDetach","removeView","containerHost","destroyLView","getLViewChild","childIndex","destroyViewTree","rootView","cleanUpView","viewOrContainer","getParentState","state","executeOnDestroys","executePipeOnDestroys","pipeDestroyHooks","removeListeners","useCaptureOrSubIdx","removeEventListener","unsubscribe","cleanupFn","destroy","getRenderParent","canInsertNativeNode","nativeParentNode","tNodeParent","getHighestElementContainer","currentNode","canInsertNativeChildOfView","viewTNode","canInsertNativeChildOfElement","nativeInsertBefore","appendChild","childEl","childTNode","parentEl","parentTNode","getBeforeNodeForView","ngContainer","containerNative","parentNative","appendProjectedNode","projectedTNode","tProjectionNode","projectionView","ngContainerChildTNode","NG_TEMPLATE_SELECTOR","hasTagAndTypeMatch","currentSelector","isProjectionMode","isNodeMatchingSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","nodeAttrs","selectOnlyMarkerIdx","skipToNextSelector","isPositive","attrIndexInNode","findAttrIndexInNode","nodeAttrValue","selectorAttrValue","selectOnlyMode","maybeAttrName","isNodeMatchingSelectorList","matchingSelectorIndex","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","ngProjectAsAttrIdx","BoundPlayerFactory","CorePlayerHandler","_players","flushPlayers","player","play","queuePlayer","ANIMATION_PROP_PREFIX","createEmptyStylingContext","sanitizer","initialStyles","initialClasses","getStylingContext","viewData","storageIndex","wrapper","isStylingContext","stylingTemplate","allocStylingContext","templateStyleContext","isAnimationProp","addPlayerInternal","playerContext","rootContext","playerContextIndex","ref","addEventListener","playerHandler","getPlayerContext","stylingContext","allocPlayerContext","hasClassInput","initializeStaticContext","attr","patchInitialStylingValue","initialStyling","prop","existingValue","renderInitialStylingValues","initialStylingValues","isEntryClassBased","setClass","setStyle","getMatchingBindingIndex","bindingName","start","getProp","_updateSingleStylingValue","offset","input","isClassBased","directiveRef","directiveIndex","getDirectiveIndexFromRegistry","singleIndex","getSinglePropIndexValue","singlePropOffsetRegistryIndex","offsets","currValue","getValue","currFlag","getPointers","currDirective","getDirectiveIndexFromEntry","hasValueChanged","allowValueChange","newValue","currentDirectiveOwner","newDirectiveOwner","isClassBased_1","playerBuilder","ClassAndStylePlayerBuilder","value_1","currPlayerIndex","getPlayerBuilderIndex","playerBuildersAreDirty","playerBuilderIndex","hasPlayerBuilderChanged","newIndex","setPlayerBuilder","setPlayerBuilderIndex","getStyleSanitizer","setSanitizeFlag","sanitizeYes","setValue","indexForMulti","getMultiOrSingleIndex","valueForMulti","multiDirty","singleDirty","valueExists","setDirty","setDirectiveDirty","setContextDirty","setContextPlayersDirty","store","DashCase","setProperty","removeStyle","removeProperty","className","add","addClass","removeClass","remove","isDirtyYes","adjustedIndex","isDirty","isClassBasedValue","isSanitizable","pointers","configFlag","staticIndex","dynamicIndex","getInitialValue","flag","getInitialIndex","getMultiStartIndex","setProp","builder","insertionIndex","directiveOwnerPointers","playerIndex","getPlayerBuilder","setFlag","limitToSingleClasses","findEntryPositionByProp","startIndex","swapMultiContextEntries","indexA","indexB","tmpValue","tmpProp","tmpFlag","tmpPlayerBuilderIndex","flagA","flagB","singleIndexA","_flag","singleIndexB","insertNewMultiProperty","classBased","doShift","updateSinglePointerValues","indexStartPosition","initialIndexForSingle","prepareInitialFlag","entryIsClassBased","initialIndex","getInitialStylingValuesIndexOf","_element","_type","_values","_dirty","_factory","buildPlayer","currentPlayer","isFirstRender","getDirectiveRegistryValuesIndexOf","keyValues","dirs","dirtyYes","getInitialClassNameValue","initialClassValues","_CLEAN_PROMISE","refreshDescendantViews","refreshDynamicEmbeddedViews","container_1","dynamicViewData","renderEmbeddedTemplate","refreshContentQueries","directiveDefIdx","setHostBindings","expandoInstructions","expandoStartIndex","currentDirectiveIndex","currentElementIndex","instruction","providerCount","refreshChildComponents","viewAttached","syncViewWithBlueprint","componentTView","checkView","createLView","rendererFactory","createNodeAtIndex","createTNode","createViewNode","allocExpando","viewToRender","_isParent","_previousOrParentTNode","tickRootContext","namespaceHTML","getRenderFlags","nextContext","renderComponentOrTemplate","templateFn","normalExecutionPath","begin","_currentNamespace","namespaceSVG","namespaceMathML","elementStart","elementEnd","elementContainerStart","createComment","createDirectivesAndLocals","elementContainerEnd","currentQueries","addNode","elementCreate","hasStyling","setUpAttributes","getElementDepthCount","increaseElementDepthCount","inputData","initializeTNodeInputs","renderInitialStylesAndClasses","overriddenRenderer","rendererToUse","createElement","createElementNS","localRefExtractor","getBindingsEnabled","resolveDirectives","exportsMap","","initNodeFlags","generateExpandoInstructionBlock","baseResolveDirective","saveNameToExportMap","cacheMatchingLocalNames","localNames","findDirectiveMatches","registry","directiveRegistry","matches","instantiateAllDirectives","addComponentLogic","postProcessDirective","invokeDirectivesHostBindings","expando","previousExpandoLength","saveResolvedLocalsInData","localIndex","getOrCreateTView","ngPrivateData","createTView","viewIndex","initialViewLength","createViewBlueprint","fill","pipeRegistry","isProc","namespaceURI","attrName_1","attrVal","setAttribute","setAttributeNS","locateHostElement","elementOrSelector","defaultRenderer","selectRootElement","querySelector","eventName","listenerFn","lCleanupIndex","getCleanup","listen","wrappedListener","wrapListenerWithPreventDefault","wrapListenerIn_preventDefault","preventDefault","returnValue","generatePropertyAliases","propsLength","subscription","subscribe","idx","decreaseElementDepthCount","setInputsForProperty","elementAttribute","element_1","removeAttribute","strValue","elementProperty","nativeOnly","elementPropertyInternal","componentHostSyntheticProperty","loadComponentRenderer","loadRendererFn","dataValue","markDirtyIfOnPush","childComponentLView","tViews","tParent","initialInputs","direction","propStore","isInput","defs","directiveDef","propertyAliasMap","internalName","elementStyling","classBindingNames","styleBindingNames","styleSanitizer","updateContextWithBindings","onlyProcessSingleClasses","findOrPatchDirectiveIntoRegistry","directiveRefs","nextOffsetInsertionIndex","detectedIndex","singlePropOffsetValues","totalCurrentClassBindings","totalCurrentStyleBindings","stylesOffset","singleClassesStartIndex","multiStylesStartIndex","multiClassesStartIndex","currentSinglePropsLength","insertionOffset","filteredStyleBindingNames","i_1","singlePropIndex","filteredClassBindingNames","i_2","name_2","totalStyles","totalClasses","totalNewEntries","i_3","isMultiBased","singleOrMultiIndex","i_4","i_5","i_6","multiIndex","initialValuesToLookup","indexForInitial","initialFlag","elementHostAttrs","patchContextWithStaticAttrs","elementStylingApply","renderStyling","rootOrView","classesStore","stylesStore","totalPlayersQueued","targetDirectiveIndex","isContextDirty","isDirectiveDirty","flushPlayerBuilders","multiStartIndex","onlySingleClasses","stillDirty","readInitialValue","valueToApply","playersStartIndex","playerInsertionIndex","oldPlayer","scheduleTick","elementStyleProp","styleIndex","suffix","valueToAdd","updateStyleProp","elementClassProp","classIndex","onOrOffClassValue","updateClassProp","addOrRemove","elementStylingMap","classes","hackImplementationOfElementStylingMap","updateStylingMap","classesInput","stylesInput","classesPlayerBuilder","stylesPlayerBuilder","classesValue","stylesValue","ignoreAllClassUpdates","ignoreAllStyleUpdates","classNames","applyAllClasses","classesPlayerBuilderIndex","stylesPlayerBuilderIndex","split","styleProps","classesStartIndex","dirty","ctxIndex","propIndex","propLimit","adjustedPropIndex","newProp","initialValue","indexOfEntry","valueToCompare","flagToCompare","newFlag","ctxIndex_1","textNative","textBinding","element_2","textContent","directiveCount","elementIndex","postProcessBaseDirective","setInputsFromAttrs","initialInputData","generateInitialInputs","minifiedInputName","attrValue","queueComponentIndexForCheck","numberOfDirectives","directiveFactory","nodeInjectorFactory","addToViewTree","createLContainer","hostNative","isForViewContainerRef","containerInternal","comment","containerRefreshStart","containerRefreshEnd","nextIndex","embeddedViewStart","viewBlockId","containerTNode","scanForView","tContainerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","containerTViews","createView","embeddedViewEnd","viewHost","projectionDef","componentNode","pData","tails","componentChild","bucketIndex","nextNode","projectionNodeStack$1","selectorIndex","nodeToProject","projectedView","currentComponentView","firstProjectedNode","adjustedHostIndex","markViewDirty","res_1","nothingScheduled","clean","scheduler","rootComponent","detectChanges","detectChangesInternal","detectChangesInRootView","hostTView","createViewQuery","updateViewQuery","markDirty","allocHostVars","count","queueHostBindingForCheck","hostVars","getCurrentDirectiveDef","prefillHostVars","totalHostVars","interpolationV","content","interpolation1","prefix","v0","interpolation2","i0","v1","interpolation3","i1","v2","interpolation4","i2","v3","interpolation5","i3","v4","interpolation6","i4","v5","interpolation7","i5","v6","interpolation8","i6","v7","reference","getContextLView","loadQueryList","queryListIdx","load","directiveInject","injectAttribute","registerContentQuery","queryList","savedContentQueriesLength","tViewContentQueries","CLEAN_PROMISE","getCurrentView","getTViewCleanup","getPlayers","getPlayersInternal","players","nonFactoryPlayersStart","GLOBAL_PUBLISH_EXPANDO_KEY","_published","publishGlobalUtil","createRootComponentView","rNode","resetComponentState","createRootComponent","componentDef","hostFeatures","instantiateRootComponent","createRootContext","LifecycleHooksFeature","rootTView","dirIndex","isComponentDef$1","definition","InheritDefinitionFeature","superType","getSuperType","_loop_1","e_1","superDef","baseDef","writeableDef","maybeUnwrapEmpty","prevHostBindings_1","superHostBindings_1","rf","ctx","prevViewQuery_1","superViewQuery_1","prevContentQueries_1","superContentQueries_1","prevContentQueriesRefresh_1","superContentQueriesRefresh_1","queryIndex","features_1","features_1_1","ngInherit","e_1_1","return","superPrototype","PRIVATE_PREFIX","NgOnChangesFeature","publicToDeclaredInputs","publicToMinifiedInputs","proto","declaredKey_1","privateMinKey_1","originalProperty","checkProto","setter_1","set","simpleChanges","writable","currentChange","configurable","onChangesWrapper","delegateHook","ngOnChanges","noop","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR$1","NullInjector","Injector","StaticInjector","NULL","SWITCH_INJECTOR_FACTORY","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","USE_VALUE","provide","String","useValue","NULL_INJECTOR$1","NEW_LINE","NO_NEW_LINE","records","_records","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","annotations","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","tokenPath","message","formatError","tokens","charAt","substr","parts","JSON","replace","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$2","getNullInjector","createInjector","defType","additionalProviders","R3Injector","_this","injectorDefTypes","destroyed","dedupStack","deepForEach","injectorDef","processInjectorType","processProvider","makeRecord","isRootInjector","has","assertNotDestroyed","service","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefOrInjectorDefFactory","hydrate","defOrWrappedDef","parents","ngModule","isDuplicate","imported","defProviders","injectorType_1","ngModuleType","isTypeProvider","providerToRecord","providerToFactory","isValueProvider","existing","multiRecord_1","hasOnDestroy","Function","paramLength","isExistingProvider","isFactoryProvider","classRef_1","ngModuleDetail","hasDeps","resolveProvider$1","lInjectablesBlueprint","isComponent$$1","providerFactory","beginIndex","existingFactoryIndex","existingProvidersFactoryIndex","existingViewProvidersFactoryIndex","doesViewProvidersFactoryExist","multiFactory","factoryFn","f","componentProviders","multiFactoryAdd","multiViewProvidersFactoryResolver","multiProvidersFactoryResolver","isComponentProvider","item","multiResolve","result","factories","componentCount","multiProviders","ProvidersFeature","viewProviders","ComponentRef","ComponentFactory","noComponentFactoryError","ERROR_COMPONENT","R3ElementRef","R3TemplateRef","R3ViewContainerRef","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","_parent","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","ViewRef","_context","_componentIndex","_appRef","_viewContainerRef","_tViewNode","collectNativeNodes","tNodeChild","enumerable","_lookUpContext","detach","storeCleanupFn","markForCheck","reattach","checkNoChanges","attachToViewContainerRef","vcRef","detachFromAppRef","attachToAppRef","appRef","RootViewRef","_view","checkNoChangesInRootView","createElementRef","ElementRefToken","ElementRef_","createTemplateRef","TemplateRefToken","TemplateRef_","_declarationParentView","elementRef","_tView","_renderer","_queries","_injectorIndex","createEmbeddedView","container$$1","createEmbeddedViewAndNode","declarationView","queries","viewRef","hostContainer","createViewRef","componentIndex","hostComponentView","RendererStyleFlags2","ElementRef","nativeElement","SWITCH_ELEMENT_REF_FACTORY","RenderComponentType","slotCount","animations","RenderDebugInfo","Renderer","RootRenderer","RendererFactory2","SecurityContext","Renderer2","SWITCH_RENDERER2_FACTORY","Version","Sanitizer","VERSION","full","major","minor","patch","ComponentFactoryResolver$1","ComponentFactoryResolver$$1","ComponentFactory$1","toRefArray","array","nonMinified","templateName","ROOT_CONTEXT","SCHEDULER","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ComponentFactory$$1","isInternalRootView","rootViewInjector","createChainedInjector","hostRNode","rootFlags","tElementNode","rootLView","oldLView","projection$$1","nodeList","firstTNode","previousTNode","componentRef","ComponentRef$1","ComponentRef$$1","_rootLView","destroyCbs","changeDetectorRef","_devMode","_runModeLocked","isDevMode","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","innerHTML","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","xhr","XMLHttpRequest","responseType","open","send","parseFromString","templateEl","documentMode","stripCustomNsAttrs","el","elAttrs","childNode","nodeType","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","console","warn","sanitizeSrcset","srcset","trim","tagSet","tags","_b","_c","merge","e_2","sets","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","elementValid","startElement","TEXT_NODE","chars","nodeValue","endElement","checkClobberedElement","nodeName","toLowerCase","elAttr","lower","encodeEntities","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","safeHtml","getTemplateContent","isTemplateElement","ELEMENT_MARKER","marker","COMMENT_MARKER","MARKER","ICU_BLOCK_REGEX","SUBTEMPLATE_REGEXP","PH_REGEXP","BINDING_REGEXP","ICU_REGEXP","PP_PLACEHOLDERS","PP_ICU_VARS","PP_ICUS","extractParts","pattern","prevPos","braceStack","results","braces","lastIndex","exec","pos","pop","block","test","parseICUBlock","substring_1","cases","icuType","mainBinding","str","binding","parseInt","blocks","assertGreaterThan","actual","expected","msg","throwError","removeInnerTemplateTranslation","tagMatched","inTemplate","generateBindingUpdateOpCodes","destinationNode","sanitizeFn","updateOpCodes","textParts","textValue","toMaskBit","getBindingMask","icuExpression","valueArr","i18nIndexStack","i18nIndexStackPointer","Math","min","parentIndexStack","i18nStart","subTemplateIndex","i18nStartFirstPass","parentIndexPointer","createOpCodes","icuExpressions","msgParts","getTranslationForTemplate","search","RegExp","phIndex","icuNodeIndex","icuStart","tIcuIndex","hasBinding","update","icus","appendI18nNode","i18nPostprocess","replacements","_match","shift","some","_idx","list","i18nEnd","i18nEndFirstPass","rootIndex","tI18n","visitedPlaceholders","readCreateOpCodes","removeNode","currentTNode","opCode","destinationNodeIndex","destinationTNode","commentValue","commentRNode","activeCaseIndex","tagNameValue","removedPhTNode","i18n","i18nAttributes","i18nAttributesFirstPass","previousElementIndex","Plural","changeMask","shiftsCounter","i18nExp","expression","i18nApply","readUpdateOpCodes","bindingsStartIndex","bypassCheckBit","caseCreated","checkBit","skipCodes","tIcu","icuTNode","removeCodes","k","removeOpCode","activeIndex","caseIndex","getCaseIndex","bindingValue","resolvedCase","getPluralCategory","locale","getPluralCase","nLike","nDecimal","floor","abs","One","Other","Zero","Two","Few","Many","tIcus","createCodes","updateCodes","childIcus","nestedIcus","icuIndex","icuCase","parseIcuCase","worstCaseSize","max","opCodes","parseNodes","nestedIcusToCreate","element$$1","lowerAttrName","COMMENT_NODE","NESTED_ICU","nestedIcuIndex","nestedIcu","nestedIcuNodeIndex","nestTIcuIndex","COMPONENT_FACTORY_RESOLVER","NgModuleRef$1","NgModuleRef$$1","_bootstrapComponents","_r3Injector","injectFlags","NgModuleFactory$1","NgModuleFactory$$1","moduleType","parentInjector","pureFunction0","slotOffset","pureFn","thisArg","pureFunction1","exp","pureFunction2","pureFunction3","pureFunction4","pureFunction5","exp5","pureFunction6","exp6","pureFunction7","exp7","pureFunction8","exp8","pureFunctionV","exps","pipe","pipeName","getPipeDef$1","pipeInstance","pipeBind1","unwrapValue","isPure","transform","pipeBind2","pipeBind3","pipeBind4","pipeBindV","EventEmitter","isAsync","__isAsync","emit","generatorOrNext","complete","schedulerFn","errorFn","err","completeFn","sink","Subscription","Subject","TemplateRef","SWITCH_TEMPLATE_REF_FACTORY","LQueries_","shallow","deep","track","predicate","descend","read","createQuery","clone","shallowResults","copyQueriesToContainer","deepResults","copyQueriesToView","insertView$1","isRootNodeOfQuery","removeView$1","query","containerValues","viewValuesIdx","getIdxOfMatchingSelector","queryByReadToken","matchingIdx","queryByTemplateRef","templateRefToken","templateRefResult","queryRead","queryByTNodeType","addMatch","matchingValue","createPredicate","_valuesTree","QueryList","QueryList_","changes","filter","find","reduce","init","toArray","reset","flatten","notifyOnChanges","memoryIndex","getOrCreateCurrentQueries","QueryType","storeCleanupWithContext","queryRefresh","templateRefExtractor","BRAND","allowSanitizationBypass","bypassSanitizationTrustString","trustedString","trusted","SAFE_STYLE_VALUE","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","sanitizeHtml","getSanitizer","sanitize","HTML","sanitizeStyle","unsafeStyle","STYLE","sanitizeUrl","unsafeUrl","URL","sanitizeResourceUrl","unsafeResourceUrl","RESOURCE_URL","angularCoreEnv","ɵdefineBase","ɵdefineComponent","ɵdefineDirective","ɵdefineNgModule","ɵdefinePipe","ɵdirectiveInject","ɵgetFactoryOf","ɵgetInheritedFactory","ɵinjectAttribute","ɵtemplateRefExtractor","ɵNgOnChangesFeature","ɵProvidersFeature","ɵInheritDefinitionFeature","ɵelementAttribute","ɵbind","ɵcontainer","ɵnextContext","ɵcontainerRefreshStart","ɵcontainerRefreshEnd","ɵloadQueryList","ɵnamespaceHTML","ɵnamespaceMathML","ɵnamespaceSVG","ɵenableBindings","ɵdisableBindings","ɵallocHostVars","ɵelementStart","ɵelementEnd","ɵelement","ɵelementContainerStart","ɵelementContainerEnd","ɵpureFunction0","ɵpureFunction1","ɵpureFunction2","ɵpureFunction3","ɵpureFunction4","ɵpureFunction5","ɵpureFunction6","ɵpureFunction7","ɵpureFunction8","ɵpureFunctionV","ɵgetCurrentView","ɵrestoreView","ɵinterpolation1","ɵinterpolation2","ɵinterpolation3","ɵinterpolation4","ɵinterpolation5","ɵinterpolation6","ɵinterpolation7","ɵinterpolation8","ɵinterpolationV","ɵelementClassProp","ɵlistener","ɵload","ɵprojection","ɵelementProperty","ɵcomponentHostSyntheticProperty","ɵpipeBind1","ɵpipeBind2","ɵpipeBind3","ɵpipeBind4","ɵpipeBindV","ɵprojectionDef","ɵpipe","ɵquery","ɵqueryRefresh","ɵregisterContentQuery","ɵreference","ɵelementStyling","ɵelementHostAttrs","ɵelementStylingMap","ɵelementStyleProp","ɵelementStylingApply","ɵtemplate","ɵtext","ɵtextBinding","ɵembeddedViewStart","ɵembeddedViewEnd","ɵi18n","ɵi18nAttributes","ɵi18nExp","ɵi18nStart","ɵi18nEnd","ɵi18nApply","ɵi18nPostprocess","ɵsanitizeHtml","ɵsanitizeStyle","ɵdefaultStyleSanitizer","ɵsanitizeResourceUrl","ɵsanitizeScript","sanitizeScript","unsafeScript","SCRIPT","ɵsanitizeUrl","NgModuleFactoryLoader","modules","assertNotExisting","getModuleFactory__PRE_R3__","noModuleError","getModuleFactory","Type","isType","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","typeStr","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","getOwnMetadata","getParentCtor","_ownAnnotations","typeOrFunc","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getReflect","reflectDependencies","convertDependencies","compiler","dep","reflectDependency","host","optional","resolved","Token","skipSelf","setTokenAndResolvedType","param","EMPTY_ARRAY$2","moduleQueue","flushingModuleQueue","isResolvedDeclaration","declaration","every","compileNgModule","compileNgModuleDefs","enqueueModuleForDelayedScoping","flatten$1","expandModuleWithProviders","emitInline","registerNgModuleType","compileInjector","setScopeOnDeclaredComponents","transitiveScopes","transitiveScopesFor","patchComponentDefWithScope","ngSelectorScope","from","compilation","dir","isNgModule","scopes","exported","declared","importedTyped","importedScope","entry","exportedTyped","exportedScope","mapFn","out","isModuleWithProviders","compileComponent","maybeQueueResolutionOfComponentResources","directiveMetadata","preserveWhitespaces","viewQueries","extractQueriesMetadata","interpolation","flushModuleScopingQueueAsMuchAsPossible","hasSelectorScope","compileDirective","facade","typeArgumentCount","isContentQuery","lifecycle","usesOnChanges","typeSourceSpan","usesInheritance","extendsDirectlyFromObject","isQueryAnn","queriesMeta","field","ann","convertToR3QueryMetadata","propertyName","convertToR3QueryPredicate","splitByComma","piece","compilePipe","Directive","SWITCH_COMPILE_DIRECTIVE","Component","SWITCH_COMPILE_COMPONENT","Pipe","SWITCH_COMPILE_PIPE","updateBaseDefFromIOProp","inheritedBaseDef","initializeBaseDef","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","SWITCH_COMPILE_COMPONENT__POST_R3__","SWITCH_COMPILE_DIRECTIVE__POST_R3__","SWITCH_COMPILE_PIPE__POST_R3__","USE_VALUE$1","EMPTY_ARRAY$3","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","NgModule","SWITCH_COMPILE_NGMODULE","SWITCH_COMPILE_NGMODULE__POST_R3__","preR3NgModuleCompile","USE_VALUE$2","isUseClassProvider","isUseValueProvider","isUseFactoryProvider","isUseExistingProvider","Injectable","SWITCH_COMPILE_INJECTABLE","render2CompileInjectable","injectableType","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","getOriginalError","defaultErrorLogger","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","injectionError","constructResolvingMessage","errMsg","wrappedError","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","_normalizeProviders","invalidProviderError","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","isPromise","isObservable","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","donePromise","rej","reject","runInitializers","asyncInitPromises","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","ModuleWithComponentFactories","ngModuleFactory","componentFactories","_throwError","trace","events","Compiler_compileModuleSync__POST_R3__","Compiler_compileModuleSync","Compiler_compileModuleAsync","Compiler_compileModuleAndAllComponentsSync__POST_R3__","Compiler_compileModuleAndAllComponentsSync","Compiler_compileModuleAndAllComponentsAsync","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","getModuleId","COMPILER_OPTIONS","CompilerFactory","detectWTF","wtf","createScope","leave","scope","leaveScope","startTimeRange","rangeType","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","wtfStartTimeRange","wtfEndTimeRange","NgZone","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop$1","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","taskTrackingZone","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","updateCb","macroTasks","creationLocation","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","delete","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","ALLOW_MULTIPLE_PLATFORMS","NgProbeToken","createPlatform","PlatformRef","inits","createPlatformFactory","parentPlatformFactory","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","optionsReducer","compileNgModuleFactory__PRE_R3__","createCompiler","compileNgModuleFactory","ApplicationRef","ngDoBootstrap","dst","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","share","ApplicationRef_1","componentOrFactory","componentFactory","compRef","_unloadComponent","_loadComponent","_tickScope","attachView","QueryList$1","_results","flatten$2","flat","flatItem","last","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","path","loadFactory","loadAndCompile","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","ViewContainerRef","SWITCH_VIEW_CONTAINER_REF_FACTORY","ChangeDetectorRef","SWITCH_CHANGE_DETECTOR_REF_FACTORY","ViewRef$1","EmbeddedViewRef","EventListener","DebugNode__PRE_R3__","nativeNode","_debugContext","DebugElement__PRE_R3__","addChild","references","providerTokens","childNodes","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","_queryElementChildren","queryAllNodes","_queryNodeChildren","triggerEventHandler","eventObj","DebugNode__POST_R3__","DebugElement__POST_R3__","getLocalRefs","discoverLocalRefs","getInjectionTokens","eAttrs","lContext","lNode","eClasses","classList","styleName","eStyles","style","getPropertyValue","children","getDebugNode__POST_R3__","_queryNodeChildrenR3","elementsOnly","_nativeNodeToDebugNode","getDebugNode","getDebugNode__PRE_R3__","indexDebugNode","DebugNode","DebugElement","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","currentIndex","getPreviousIndex","adjPreviousIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","APPLICATION_MODULE_PROVIDERS","ApplicationModule","shiftInitState","priorInitState","newInitState","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","DebugContext","Services","setCurrentNode","createRootView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","_renderCompCount$1","checkBinding","bindingIdx","oldValues","checkAndUpdateBinding","checkBindingNoChanges","bindings","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","isEmbeddedView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","lastRenderRootNode","visitSiblingRenderNodes","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","ShadowDom","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","disposables","outputIndex","checkAndUpdateElementValue","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","setElementClass","setElementStyle","unit","setElementProperty","UNDEFINED_VALUE","InjectorRefTokenKey","INJECTORRefTokenKey","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey_1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance","targetsModule","moduleTransitivelyPresent","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_viewRef","_component","_elDef","Injector_","createViewContainerData","ViewContainerRef_","_data","templateRef","insert","createComponent","ngModuleRef","contextInjector","viewRef_","attachEmbeddedView","attachProjectedView","vcElementData","dvcElementData","projectedViews","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","createChangeDetectorRef","rootRenderNodes","renderNodes","fs","createTemplateData","_parentView","createInjector$1","createRendererV1","RendererAdapter","namespaceAndName","createViewRoot","createTemplateAnchor","parentElement","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","propertyValue","attributeValue","setBindingDebugInfo","isAdd","styleValue","invokeElementMethod","methodName","setText","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","checkIndex","depDefs","directChildFlags","childMatchedQueries","createProviderInstance","_createProviderInstance$1","createPipeInstance","createClass","createDirectiveInstance","outputObservable","eventHandlerClosure","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1","tokenKey$$1","searchView","findCompView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","dvc","queryValueType","appendNgContent","_pureExpressionDef","propertyNames","_addInterpolationPart","isNgContainer","validateNode","nodeCount","parentEnd","anchorDef$$1","initView","createViewNodes","compRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","checkAndUpdatePureExpressionInline","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","debugContextFactory","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","preserveContent","NgModuleFactory_","_ngModuleDefFactory","cloneNgModuleDefinition","ɵangular_packages_core_core_s","ɵangular_packages_core_core_p","ɵangular_packages_core_core_q","ɵangular_packages_core_core_r","ɵangular_packages_core_core_g","ɵangular_packages_core_core_n","ɵangular_packages_core_core_o","ɵangular_packages_core_core_m","ɵangular_packages_core_core_l","ɵangular_packages_core_core_c","ɵangular_packages_core_core_d","ɵangular_packages_core_core_e","ɵangular_packages_core_core_f","ɵangular_packages_core_core_k","ɵangular_packages_core_core_t","ɵangular_packages_core_core_v","ɵangular_packages_core_core_u","ɵangular_packages_core_core_y","ɵangular_packages_core_core_w","ɵangular_packages_core_core_x","ɵangular_packages_core_core_bb","ɵangular_packages_core_core_bi","ɵangular_packages_core_core_bc","ɵangular_packages_core_core_bd","ɵangular_packages_core_core_be","ɵangular_packages_core_core_bh","ɵangular_packages_core_core_bl","ɵangular_packages_core_core_h","ɵangular_packages_core_core_i","ɵangular_packages_core_core_j","ɵangular_packages_core_core_a","ɵangular_packages_core_core_b","ɵangular_packages_core_core_bj","ɵangular_packages_core_core_z","ɵangular_packages_core_core_ba","destroyPlatform","enableProdMode","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","ɵinject","ɵNoopNgZone","ɵComponentFactory","ɵALLOW_MULTIPLE_PLATFORMS","ɵAPP_ID_RANDOM_PROVIDER","ɵdefaultIterableDiffers","ɵdefaultKeyValueDiffers","ɵdevModeEqual","ɵisListLikeIterable","ɵisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ɵConsole","ɵgetInjectableDef","ɵsetCurrentInjector","ɵAPP_ROOT","ɵivyEnabled","ɵCodegenComponentFactoryResolver","ɵresolveComponentResources","resolveComponentResources","resourceResolver","urlFetches","urlMap","cachedResourceResolve","resp","styleOffset","styleUrl","ɵReflectionCapabilities","ɵRenderDebugInfo","ɵ_sanitizeHtml","ɵ_sanitizeStyle","ɵ_sanitizeUrl","ɵglobal","ɵlooseIdentical","ɵstringify","ɵmakeDecorator","ɵisObservable","ɵisPromise","ɵclearOverrides","ɵinitServicesIfNeeded","ɵoverrideComponentView","ɵoverrideProvider","ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ɵdetectChanges","ɵrenderComponent","renderComponent","ɵRender3ComponentFactory","ɵRender3ComponentRef","ɵLifecycleHooksFeature","ɵRender3NgModuleRef","ɵmarkDirty","ɵNgModuleFactory","ɵNO_CHANGE","ɵgetHostElement","ɵstore","ɵwhenRendered","whenRendered","getRootContext$2","ɵsetClassMetadata","setClassMetadata","clazz","ɵcompileComponent","ɵcompileDirective","ɵcompileNgModule","ɵcompileNgModuleDefs","ɵpatchComponentDefWithScope","ɵresetCompiledComponents","resetCompiledComponents","ɵcompilePipe","ɵbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ɵbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ɵbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ɵbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ɵbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ɵgetLContext","ɵbindPlayerFactory","bindPlayerFactory","ɵaddPlayer","addPlayer","getOrCreatePlayerContext","ɵgetPlayers","ɵcompileNgModuleFactory__POST_R3__","compileNgModuleFactory__POST_R3__","ɵSWITCH_COMPILE_COMPONENT__POST_R3__","ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__","ɵSWITCH_COMPILE_PIPE__POST_R3__","ɵSWITCH_COMPILE_NGMODULE__POST_R3__","ɵgetDebugNode__POST_R3__","ɵSWITCH_COMPILE_INJECTABLE__POST_R3__","compileInjectable","srcMeta","hasAProvider","compilerMeta","ctorDeps","userDeps","ɵSWITCH_IVY_ENABLED__POST_R3__","ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__","injectChangeDetectorRef","ɵCompiler_compileModuleSync__POST_R3__","ɵCompiler_compileModuleAsync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__","ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__","ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__","injectElementRef","ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__","injectTemplateRef","ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__","injectViewContainerRef","ViewContainerRefToken","createContainerRef","_lContainer","_hostTNode","_hostView","_viewRefs","getParentInjectorTNode","startTNode","parentTNode_1","adjustedIdx","_adjustIndex","commentNode","nativeNextSibling","ɵSWITCH_RENDERER2_FACTORY__POST_R3__","injectRenderer2","getOrCreateRenderer2","ɵgetModuleFactory__POST_R3__","getModuleFactory__POST_R3__","ɵpublishGlobalUtil","ɵpublishDefaultGlobalUtils","publishDefaultGlobalUtils","ɵSWITCH_INJECTOR_FACTORY__POST_R3__","injectInjector","ɵregisterModuleFactory","registerModuleFactory","ɵEMPTY_ARRAY","ɵEMPTY_MAP","ɵand","templateFactory","ɵccf","createComponentFactory","ɵcmf","createNgModuleFactory","defFactory","ɵcrt","createRendererType2","ɵdid","outputDefs","ɵeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","_e","resolveRendererType2","isFilled","None","ɵelementEventFullName","ɵgetComponentViewDefinitionFactory","ɵinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","ɵinterpolate","interpolate","constAndInterp","ɵmod","moduleDef","ɵmpd","moduleProvideDef","ɵncd","ngContentDef","ɵnov","ɵpid","ɵprd","ɵpad","pureArrayDef","argCount","ɵpod","pureObjectDef","propToIndex","nbKeys","ɵppd","purePipeDef","ɵqud","ɵted","textDef","staticText","ɵunv","unwrapValue$1","nodeIdx","globalBindingIdx","ɵvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentParent","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v7.2.1\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/core', ['exports', 'rxjs', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.core = {}), global.rxjs, global.rxjs.operators));\n}(this, function (exports, rxjs, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getClosureSafeProperty(objWithPropertyToExtract) {\n        for (var key in objWithPropertyToExtract) {\n            if (objWithPropertyToExtract[key] === getClosureSafeProperty) {\n                return key;\n            }\n        }\n        throw Error('Could not find renamed property on target object.');\n    }\n    /**\n     * Sets properties on a target object from a source object, but only if\n     * the property doesn't already exist on the target object.\n     * @param target The target to set properties on\n     * @param source The source of the property keys and values to set\n     */\n    function fillProperties(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_COMPONENT_DEF = getClosureSafeProperty({ ngComponentDef: getClosureSafeProperty });\n    var NG_DIRECTIVE_DEF = getClosureSafeProperty({ ngDirectiveDef: getClosureSafeProperty });\n    var NG_INJECTABLE_DEF = getClosureSafeProperty({ ngInjectableDef: getClosureSafeProperty });\n    var NG_INJECTOR_DEF = getClosureSafeProperty({ ngInjectorDef: getClosureSafeProperty });\n    var NG_PIPE_DEF = getClosureSafeProperty({ ngPipeDef: getClosureSafeProperty });\n    var NG_MODULE_DEF = getClosureSafeProperty({ ngModuleDef: getClosureSafeProperty });\n    var NG_BASE_DEF = getClosureSafeProperty({ ngBaseDef: getClosureSafeProperty });\n    /**\n     * If a directive is diPublic, bloomAdd sets a property on the type with this constant as\n     * the key and the directive's unique ID as the value. This allows us to map directives to their\n     * bloom filter bit for DI.\n     */\n    var NG_ELEMENT_ID = getClosureSafeProperty({ __NG_ELEMENT_ID__: getClosureSafeProperty });\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n     * in which injectors (if any) it will be available.\n     *\n     * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n     * `InjectableType`.\n     *\n     * Options:\n     * * `providedIn` determines which injectors will include the injectable, by either associating it\n     *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n     *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n     * * `factory` gives the zero argument function which will create an instance of the injectable.\n     *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n     *\n     * @publicApi\n     */\n    function defineInjectable(opts) {\n        return {\n            providedIn: opts.providedIn || null, factory: opts.factory, value: undefined,\n        };\n    }\n    /**\n     * Construct an `InjectorDef` which configures an injector.\n     *\n     * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n     * `InjectorType`.\n     *\n     * Options:\n     *\n     * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n     *   create the type must be provided. If that factory function needs to inject arguments, it can\n     *   use the `inject` function.\n     * * `providers`: an optional array of providers to add to the injector. Each provider must\n     *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n     *   type must be an `InjectableType`).\n     * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n     *   whose providers will also be added to the injector. Locally provided types will override\n     *   providers from imports.\n     *\n     * @publicApi\n     */\n    function defineInjector(options) {\n        return {\n            factory: options.factory, providers: options.providers || [], imports: options.imports || [],\n        };\n    }\n    /**\n     * Read the `ngInjectableDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectableDef`\n     */\n    function getInjectableDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTABLE_DEF) ? type[NG_INJECTABLE_DEF] : null;\n    }\n    /**\n     * Read the `ngInjectorDef` type in a way which is immune to accidentally reading inherited value.\n     *\n     * @param type type which may have `ngInjectorDef`\n     */\n    function getInjectorDef(type) {\n        return type && type.hasOwnProperty(NG_INJECTOR_DEF) ? type[NG_INJECTOR_DEF] : null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates a token that can be used in a DI Provider.\n     *\n     * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n     * runtime representation) such as when injecting an interface, callable type, array or\n     * parameterized type.\n     *\n     * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n     * the `Injector`. This provides additional level of type safety.\n     *\n     * ```\n     * interface MyInterface {...}\n     * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n     * // myInterface is inferred to be MyInterface.\n     * ```\n     *\n     * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n     * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n     * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n     * application's root injector. If the factory function, which takes zero arguments, needs to inject\n     * dependencies, it can do so using the `inject` function. See below for an example.\n     *\n     * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n     * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n     * mentioned above, `'root'` is the default value for `providedIn`.\n     *\n     * @usageNotes\n     * ### Basic Example\n     *\n     * ### Plain InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n     *\n     * ### Tree-shakable InjectionToken\n     *\n     * {@example core/di/ts/injector_spec.ts region='ShakableInjectionToken'}\n     *\n     *\n     * @publicApi\n     */\n    var InjectionToken = /** @class */ (function () {\n        function InjectionToken(_desc, options) {\n            this._desc = _desc;\n            /** @internal */\n            this.ngMetadataName = 'InjectionToken';\n            if (options !== undefined) {\n                this.ngInjectableDef = defineInjectable({\n                    providedIn: options.providedIn || 'root',\n                    factory: options.factory,\n                });\n            }\n            else {\n                this.ngInjectableDef = undefined;\n            }\n        }\n        InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n        return InjectionToken;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANNOTATIONS = '__annotations__';\n    var PARAMETERS = '__parameters__';\n    var PROP_METADATA = '__prop__metadata__';\n    /**\n     * @suppress {globalThis}\n     */\n    function makeDecorator(name, props, parentClass, additionalProcessing, typeFn) {\n        var metaCtor = makeMetadataCtor(props);\n        function DecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof DecoratorFactory) {\n                metaCtor.call.apply(metaCtor, __spread([this], args));\n                return this;\n            }\n            var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            return function TypeDecorator(cls) {\n                if (typeFn)\n                    typeFn.apply(void 0, __spread([cls], args));\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                    cls[ANNOTATIONS] :\n                    Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n                annotations.push(annotationInstance);\n                if (additionalProcessing)\n                    additionalProcessing(cls);\n                return cls;\n            };\n        }\n        if (parentClass) {\n            DecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        DecoratorFactory.prototype.ngMetadataName = name;\n        DecoratorFactory.annotationCls = DecoratorFactory;\n        return DecoratorFactory;\n    }\n    function makeMetadataCtor(props) {\n        return function ctor() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (props) {\n                var values = props.apply(void 0, __spread(args));\n                for (var propName in values) {\n                    this[propName] = values[propName];\n                }\n            }\n        };\n    }\n    function makeParamDecorator(name, props, parentClass) {\n        var metaCtor = makeMetadataCtor(props);\n        function ParamDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof ParamDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            ParamDecorator.annotation = annotationInstance;\n            return ParamDecorator;\n            function ParamDecorator(cls, unusedKey, index) {\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                    cls[PARAMETERS] :\n                    Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n                // there might be gaps if some in between parameters do not have annotations.\n                // we pad with nulls.\n                while (parameters.length <= index) {\n                    parameters.push(null);\n                }\n                (parameters[index] = parameters[index] || []).push(annotationInstance);\n                return cls;\n            }\n        }\n        if (parentClass) {\n            ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        ParamDecoratorFactory.prototype.ngMetadataName = name;\n        ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n        return ParamDecoratorFactory;\n    }\n    function makePropDecorator(name, props, parentClass, additionalProcessing) {\n        var metaCtor = makeMetadataCtor(props);\n        function PropDecoratorFactory() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _a;\n            if (this instanceof PropDecoratorFactory) {\n                metaCtor.apply(this, args);\n                return this;\n            }\n            var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, __spread([void 0], args)))();\n            function PropDecorator(target, name) {\n                var constructor = target.constructor;\n                // Use of Object.defineProperty is important since it creates non-enumerable property which\n                // prevents the property is copied during subclassing.\n                var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                    constructor[PROP_METADATA] :\n                    Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n                meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n                meta[name].unshift(decoratorInstance);\n                if (additionalProcessing)\n                    additionalProcessing.apply(void 0, __spread([target, name], args));\n            }\n            return PropDecorator;\n        }\n        if (parentClass) {\n            PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n        }\n        PropDecoratorFactory.prototype.ngMetadataName = name;\n        PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n        return PropDecoratorFactory;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This token can be used to create a virtual provider that will populate the\n     * `entryComponents` fields of components and ng modules based on its `useValue`.\n     * All components that are referenced in the `useValue` value (either directly\n     * or in a nested array or map) will be added to the `entryComponents` property.\n     *\n     * @usageNotes\n     * ### Example\n     * The following example shows how the router can populate the `entryComponents`\n     * field of an NgModule based on the router configuration which refers\n     * to components.\n     *\n     * ```typescript\n     * // helper function inside the router\n     * function provideRoutes(routes) {\n     *   return [\n     *     {provide: ROUTES, useValue: routes},\n     *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n     *   ];\n     * }\n     *\n     * // user code\n     * let routes = [\n     *   {path: '/root', component: RootComp},\n     *   {path: '/teams', component: TeamsComp}\n     * ];\n     *\n     * @NgModule({\n     *   providers: [provideRoutes(routes)]\n     * })\n     * class ModuleWithRoutes {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n    /**\n     * Attribute decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n    /**\n     * Base class for query metadata.\n     *\n     * @see `ContentChildren`.\n     * @see `ContentChild`.\n     * @see `ViewChildren`.\n     * @see `ViewChild`.\n     *\n     * @publicApi\n     */\n    var Query = /** @class */ (function () {\n        function Query() {\n        }\n        return Query;\n    }());\n    /**\n     * ContentChildren decorator and metadata.\n     *\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n    }, Query);\n    /**\n     * ContentChild decorator and metadata.\n     *\n     *\n     * @Annotation\n     *\n     * @publicApi\n     */\n    var ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChildren decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n        if (data === void 0) { data = {}; }\n        return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n    }, Query);\n    /**\n     * ViewChild decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n        return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n    }, Query);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ChangeDetectionStrategy) {\n        /**\n         * Use the `CheckOnce` strategy, meaning that automatic change detection is deactivated\n         * until reactivated by setting the strategy to `Default` (`CheckAlways`).\n         * Change detection can still be explicitly invoked.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n        /**\n         * Use the default `CheckAlways` strategy, in which change detection is automatic until\n         * explicitly deactivated.\n         */\n        ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n    })(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n    (function (ChangeDetectorStatus) {\n        /**\n         * A state in which, after calling `detectChanges()`, the change detector\n         * state becomes `Checked`, and must be explicitly invoked or reactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n        /**\n         * A state in which change detection is skipped until the change detector mode\n         * becomes `CheckOnce`.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n        /**\n         * A state in which change detection continues automatically until explicitly\n         * deactivated.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n        /**\n         * A state in which a change detector sub tree is not a part of the main tree and\n         * should be skipped.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n        /**\n         * Indicates that the change detector encountered an error checking a binding\n         * or calling a directive lifecycle method and is now in an inconsistent state. Change\n         * detectors in this state do not detect changes.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n        /**\n         * Indicates that the change detector has been destroyed.\n         */\n        ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n    })(exports.ɵChangeDetectorStatus || (exports.ɵChangeDetectorStatus = {}));\n    /**\n     * Reports whether a given strategy is currently the default for change detection.\n     * @param changeDetectionStrategy The strategy to check.\n     * @returns True if the given strategy is the current default, false otherwise.\n     * @see `ChangeDetectorStatus`\n     * @see `ChangeDetectorRef`\n     */\n    function isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n        return changeDetectionStrategy == null ||\n            changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __window = typeof window !== 'undefined' && window;\n    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n        self instanceof WorkerGlobalScope && self;\n    var __global = typeof global !== 'undefined' && global;\n    // Check __global first, because in Node tests both __global and __window may be defined and _global\n    // should be __global in that case.\n    var _global = __global || __window || __self;\n    var promise = Promise.resolve(0);\n    var _symbolIterator = null;\n    function getSymbolIterator() {\n        if (!_symbolIterator) {\n            var Symbol_1 = _global['Symbol'];\n            if (Symbol_1 && Symbol_1.iterator) {\n                _symbolIterator = Symbol_1.iterator;\n            }\n            else {\n                // es6-shim specific logic\n                var keys = Object.getOwnPropertyNames(Map.prototype);\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (key !== 'entries' && key !== 'size' &&\n                        Map.prototype[key] === Map.prototype['entries']) {\n                        _symbolIterator = key;\n                    }\n                }\n            }\n        }\n        return _symbolIterator;\n    }\n    function scheduleMicroTask(fn) {\n        if (typeof Zone === 'undefined') {\n            // use promise to schedule microTask instead of use Zone\n            promise.then(function () { fn && fn.apply(null, null); });\n        }\n        else {\n            Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n        }\n    }\n    // JS has NaN !== NaN\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    function stringify(token) {\n        if (typeof token === 'string') {\n            return token;\n        }\n        if (token instanceof Array) {\n            return '[' + token.map(stringify).join(', ') + ']';\n        }\n        if (token == null) {\n            return '' + token;\n        }\n        if (token.overriddenName) {\n            return \"\" + token.overriddenName;\n        }\n        if (token.name) {\n            return \"\" + token.name;\n        }\n        var res = token.toString();\n        if (res == null) {\n            return '' + res;\n        }\n        var newLineIndex = res.indexOf('\\n');\n        return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n    }\n    /**\n     * Convince closure compiler that the wrapped function has no side-effects.\n     *\n     * Closure compiler always assumes that `toString` has no side-effects. We use this quirk to\n     * allow us to execute a function but have closure compiler mark the call as no-side-effects.\n     * It is important that the return value for the `noSideEffects` function be assigned\n     * to something which is retained otherwise the call to `noSideEffects` will be removed by closure\n     * compiler.\n     */\n    function noSideEffects(fn) {\n        return '' + { toString: fn };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __forward_ref__ = getClosureSafeProperty({ __forward_ref__: getClosureSafeProperty });\n    /**\n     * Allows to refer to references which are not yet defined.\n     *\n     * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n     * DI is declared, but not yet defined. It is also used when the `token` which we use when creating\n     * a query is not yet defined.\n     *\n     * @usageNotes\n     * ### Example\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n     * @publicApi\n     */\n    function forwardRef(forwardRefFn) {\n        forwardRefFn.__forward_ref__ = forwardRef;\n        forwardRefFn.toString = function () { return stringify(this()); };\n        return forwardRefFn;\n    }\n    /**\n     * Lazily retrieves the reference value from a forwardRef.\n     *\n     * Acts as the identity function when given a non-forward-ref value.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n     *\n     * @see `forwardRef`\n     * @publicApi\n     */\n    function resolveForwardRef(type) {\n        var fn = type;\n        if (typeof fn === 'function' && fn.hasOwnProperty(__forward_ref__) &&\n            fn.__forward_ref__ === forwardRef) {\n            return fn();\n        }\n        else {\n            return type;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to resolve resource URLs on `@Component` when used with JIT compilation.\n     *\n     * Example:\n     * ```\n     * @Component({\n     *   selector: 'my-comp',\n     *   templateUrl: 'my-comp.html', // This requires asynchronous resolution\n     * })\n     * class MyComponnent{\n     * }\n     *\n     * // Calling `renderComponent` will fail because `MyComponent`'s `@Compenent.templateUrl`\n     * // needs to be resolved because `renderComponent` is synchronous process.\n     * // renderComponent(MyComponent);\n     *\n     * // Calling `resolveComponentResources` will resolve `@Compenent.templateUrl` into\n     * // `@Compenent.template`, which would allow `renderComponent` to proceed in synchronous manner.\n     * // Use browser's `fetch` function as the default resource resolution strategy.\n     * resolveComponentResources(fetch).then(() => {\n     *   // After resolution all URLs have been converted into strings.\n     *   renderComponent(MyComponent);\n     * });\n     *\n     * ```\n     *\n     * NOTE: In AOT the resolution happens during compilation, and so there should be no need\n     * to call this method outside JIT mode.\n     *\n     * @param resourceResolver a function which is responsible to returning a `Promise` of the resolved\n     * URL. Browser's `fetch` method is a good default implementation.\n     */\n    function resolveComponentResources(resourceResolver) {\n        // Store all promises which are fetching the resources.\n        var urlFetches = [];\n        // Cache so that we don't fetch the same resource more than once.\n        var urlMap = new Map();\n        function cachedResourceResolve(url) {\n            var promise = urlMap.get(url);\n            if (!promise) {\n                var resp = resourceResolver(url);\n                urlMap.set(url, promise = resp.then(unwrapResponse));\n                urlFetches.push(promise);\n            }\n            return promise;\n        }\n        componentResourceResolutionQueue.forEach(function (component) {\n            if (component.templateUrl) {\n                cachedResourceResolve(component.templateUrl).then(function (template) {\n                    component.template = template;\n                    component.templateUrl = undefined;\n                });\n            }\n            var styleUrls = component.styleUrls;\n            var styles = component.styles || (component.styles = []);\n            var styleOffset = component.styles.length;\n            styleUrls && styleUrls.forEach(function (styleUrl, index) {\n                styles.push(''); // pre-allocate array.\n                cachedResourceResolve(styleUrl).then(function (style) {\n                    styles[styleOffset + index] = style;\n                    styleUrls.splice(styleUrls.indexOf(styleUrl), 1);\n                    if (styleUrls.length == 0) {\n                        component.styleUrls = undefined;\n                    }\n                });\n            });\n        });\n        componentResourceResolutionQueue.clear();\n        return Promise.all(urlFetches).then(function () { return null; });\n    }\n    var componentResourceResolutionQueue = new Set();\n    function maybeQueueResolutionOfComponentResources(metadata) {\n        if (componentNeedsResolution(metadata)) {\n            componentResourceResolutionQueue.add(metadata);\n        }\n    }\n    function componentNeedsResolution(component) {\n        return component.templateUrl || component.styleUrls && component.styleUrls.length;\n    }\n    function unwrapResponse(response) {\n        return typeof response == 'string' ? response : response.text();\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (ViewEncapsulation) {\n        /**\n         * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n         * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n         * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n         * selectors.\n         *\n         * This is the default option.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n        /**\n         * @deprecated v6.1.0 - use {ViewEncapsulation.ShadowDom} instead.\n         * Use the native encapsulation mechanism of the renderer.\n         *\n         * For the DOM this means using the deprecated [Shadow DOM\n         * v0](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n        /**\n         * Don't provide any template or style encapsulation.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n        /**\n         * Use Shadow DOM to encapsulate styles.\n         *\n         * For the DOM this means using modern [Shadow\n         * DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n         * creating a ShadowRoot for Component's Host Element.\n         */\n        ViewEncapsulation[ViewEncapsulation[\"ShadowDom\"] = 3] = \"ShadowDom\";\n    })(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngDevModeResetPerfCounters() {\n        var newCounters = {\n            firstTemplatePass: 0,\n            tNode: 0,\n            tView: 0,\n            rendererCreateTextNode: 0,\n            rendererSetText: 0,\n            rendererCreateElement: 0,\n            rendererAddEventListener: 0,\n            rendererSetAttribute: 0,\n            rendererRemoveAttribute: 0,\n            rendererSetProperty: 0,\n            rendererSetClassName: 0,\n            rendererAddClass: 0,\n            rendererRemoveClass: 0,\n            rendererSetStyle: 0,\n            rendererRemoveStyle: 0,\n            rendererDestroy: 0,\n            rendererDestroyNode: 0,\n            rendererMoveNode: 0,\n            rendererRemoveNode: 0,\n            rendererCreateComment: 0,\n        };\n        // NOTE: Under Ivy we may have both window & global defined in the Node\n        //    environment since ensureDocument() in render3.ts sets global.window.\n        if (typeof window != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            window['ngDevMode'] = newCounters;\n        }\n        if (typeof global != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            global['ngDevMode'] = newCounters;\n        }\n        if (typeof self != 'undefined') {\n            // Make sure to refer to ngDevMode as ['ngDevMode'] for closure.\n            self['ngDevMode'] = newCounters;\n        }\n        return newCounters;\n    }\n    /**\n     * This checks to see if the `ngDevMode` has been set. If yes,\n     * than we honor it, otherwise we default to dev mode with additional checks.\n     *\n     * The idea is that unless we are doing production build where we explicitly\n     * set `ngDevMode == false` we should be helping the developer by providing\n     * as much early warning and errors as possible.\n     */\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        ngDevModeResetPerfCounters();\n    }\n\n    /**\n    * @license\n    * Copyright Google Inc. All Rights Reserved.\n    *\n    * Use of this source code is governed by an MIT-style license that can be\n    * found in the LICENSE file at https://angular.io/license\n    */\n    /**\n     * This file contains reuseable \"empty\" symbols that can be used as default return values\n     * in different parts of the rendering code. Because the same symbols are returned, this\n     * allows for identity checks against these values to be consistently used by the framework\n     * code.\n     */\n    var EMPTY_OBJ = {};\n    var EMPTY_ARRAY = [];\n    // freezing the values prevents any code from accidentally inserting new values in\n    if (typeof ngDevMode !== 'undefined' && ngDevMode) {\n        Object.freeze(EMPTY_OBJ);\n        Object.freeze(EMPTY_ARRAY);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _renderCompCount = 0;\n    /**\n     * Create a component definition object.\n     *\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngComponentDef = defineComponent({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    function defineComponent(componentDefinition) {\n        var type = componentDefinition.type;\n        var typePrototype = type.prototype;\n        var declaredInputs = {};\n        var def = {\n            type: type,\n            providersResolver: null,\n            consts: componentDefinition.consts,\n            vars: componentDefinition.vars,\n            factory: componentDefinition.factory,\n            template: componentDefinition.template || null,\n            hostBindings: componentDefinition.hostBindings || null,\n            contentQueries: componentDefinition.contentQueries || null,\n            contentQueriesRefresh: componentDefinition.contentQueriesRefresh || null,\n            attributes: componentDefinition.attributes || null,\n            declaredInputs: declaredInputs,\n            inputs: null,\n            outputs: null,\n            exportAs: componentDefinition.exportAs || null,\n            onInit: typePrototype.ngOnInit || null,\n            doCheck: typePrototype.ngDoCheck || null,\n            afterContentInit: typePrototype.ngAfterContentInit || null,\n            afterContentChecked: typePrototype.ngAfterContentChecked || null,\n            afterViewInit: typePrototype.ngAfterViewInit || null,\n            afterViewChecked: typePrototype.ngAfterViewChecked || null,\n            onDestroy: typePrototype.ngOnDestroy || null,\n            onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n            directiveDefs: null,\n            pipeDefs: null,\n            selectors: componentDefinition.selectors,\n            viewQuery: componentDefinition.viewQuery || null,\n            features: componentDefinition.features || null,\n            data: componentDefinition.data || {},\n            // TODO(misko): convert ViewEncapsulation into const enum so that it can be used directly in the\n            // next line. Also `None` should be 0 not 2.\n            encapsulation: componentDefinition.encapsulation || exports.ViewEncapsulation.Emulated,\n            id: 'c',\n            styles: componentDefinition.styles || EMPTY_ARRAY,\n            _: null,\n        };\n        def._ = noSideEffects(function () {\n            var directiveTypes = componentDefinition.directives;\n            var feature = componentDefinition.features;\n            var pipeTypes = componentDefinition.pipes;\n            def.id += _renderCompCount++;\n            def.inputs = invertObject(componentDefinition.inputs, declaredInputs),\n                def.outputs = invertObject(componentDefinition.outputs),\n                feature && feature.forEach(function (fn) { return fn(def); });\n            def.directiveDefs = directiveTypes ?\n                function () { return (typeof directiveTypes === 'function' ? directiveTypes() : directiveTypes)\n                    .map(extractDirectiveDef); } :\n                null;\n            def.pipeDefs = pipeTypes ?\n                function () { return (typeof pipeTypes === 'function' ? pipeTypes() : pipeTypes).map(extractPipeDef); } :\n                null;\n        });\n        return def;\n    }\n    function extractDirectiveDef(type) {\n        var def = getComponentDef(type) || getDirectiveDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is neither 'ComponentType' or 'DirectiveType'.\");\n        }\n        return def;\n    }\n    function extractPipeDef(type) {\n        var def = getPipeDef(type);\n        if (ngDevMode && !def) {\n            throw new Error(\"'\" + type.name + \"' is not a 'PipeType'.\");\n        }\n        return def;\n    }\n    function defineNgModule(def) {\n        var res = {\n            type: def.type,\n            bootstrap: def.bootstrap || EMPTY_ARRAY,\n            declarations: def.declarations || EMPTY_ARRAY,\n            imports: def.imports || EMPTY_ARRAY,\n            exports: def.exports || EMPTY_ARRAY,\n            transitiveCompileScopes: null,\n        };\n        return res;\n    }\n    /**\n     * Inverts an inputs or outputs lookup such that the keys, which were the\n     * minified keys, are part of the values, and the values are parsed so that\n     * the publicName of the property is the new key\n     *\n     * e.g. for\n     *\n     * ```\n     * class Comp {\n     *   @Input()\n     *   propName1: string;\n     *\n     *   @Input('publicName2')\n     *   declaredPropName2: number;\n     * }\n     * ```\n     *\n     * will be serialized as\n     *\n     * ```\n     * {\n     *   propName1: 'propName1',\n     *   declaredPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * which is than translated by the minifier as:\n     *\n     * ```\n     * {\n     *   minifiedPropName1: 'propName1',\n     *   minifiedPropName2: ['publicName2', 'declaredPropName2'],\n     * }\n     * ```\n     *\n     * becomes: (public name => minifiedName)\n     *\n     * ```\n     * {\n     *  'propName1': 'minifiedPropName1',\n     *  'publicName2': 'minifiedPropName2',\n     * }\n     * ```\n     *\n     * Optionally the function can take `secondary` which will result in: (public name => declared name)\n     *\n     * ```\n     * {\n     *  'propName1': 'propName1',\n     *  'publicName2': 'declaredPropName2',\n     * }\n     * ```\n     *\n\n     */\n    function invertObject(obj, secondary) {\n        if (obj == null)\n            return EMPTY_OBJ;\n        var newLookup = {};\n        for (var minifiedKey in obj) {\n            if (obj.hasOwnProperty(minifiedKey)) {\n                var publicName = obj[minifiedKey];\n                var declaredName = publicName;\n                if (Array.isArray(publicName)) {\n                    declaredName = publicName[1];\n                    publicName = publicName[0];\n                }\n                newLookup[publicName] = minifiedKey;\n                if (secondary) {\n                    (secondary[publicName] = declaredName);\n                }\n            }\n        }\n        return newLookup;\n    }\n    /**\n     * Create a base definition\n     *\n     * # Example\n     * ```\n     * class ShouldBeInherited {\n     *   static ngBaseDef = defineBase({\n     *      ...\n     *   })\n     * }\n     * @param baseDefinition The base definition parameters\n     */\n    function defineBase(baseDefinition) {\n        var declaredInputs = {};\n        return {\n            inputs: invertObject(baseDefinition.inputs, declaredInputs),\n            declaredInputs: declaredInputs,\n            outputs: invertObject(baseDefinition.outputs),\n        };\n    }\n    /**\n     * Create a directive definition object.\n     *\n     * # Example\n     * ```\n     * class MyDirective {\n     *   // Generated by Angular Template Compiler\n     *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n     *   static ngDirectiveDef = defineDirective({\n     *     ...\n     *   });\n     * }\n     * ```\n     */\n    var defineDirective = defineComponent;\n    /**\n     * Create a pipe definition object.\n     *\n     * # Example\n     * ```\n     * class MyPipe implements PipeTransform {\n     *   // Generated by Angular Template Compiler\n     *   static ngPipeDef = definePipe({\n     *     ...\n     *   });\n     * }\n     * ```\n     * @param pipeDef Pipe definition generated by the compiler\n     */\n    function definePipe(pipeDef) {\n        return {\n            name: pipeDef.name,\n            factory: pipeDef.factory,\n            pure: pipeDef.pure !== false,\n            onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n        };\n    }\n    /**\n     * The following getter methods retrieve the definition form the type. Currently the retrieval\n     * honors inheritance, but in the future we may change the rule to require that definitions are\n     * explicit. This would require some sort of migration strategy.\n     */\n    function getComponentDef(type) {\n        return type[NG_COMPONENT_DEF] || null;\n    }\n    function getDirectiveDef(type) {\n        return type[NG_DIRECTIVE_DEF] || null;\n    }\n    function getPipeDef(type) {\n        return type[NG_PIPE_DEF] || null;\n    }\n    function getNgModuleDef(type, throwNotFound) {\n        var ngModuleDef = type[NG_MODULE_DEF] || null;\n        if (!ngModuleDef && throwNotFound === true) {\n            throw new Error(\"Type \" + stringify(type) + \" does not have 'ngModuleDef' property.\");\n        }\n        return ngModuleDef;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertEqual(actual, expected, msg) {\n        if (actual != expected) {\n            throwError(msg);\n        }\n    }\n    function assertNotEqual(actual, expected, msg) {\n        if (actual == expected) {\n            throwError(msg);\n        }\n    }\n    function assertLessThan(actual, expected, msg) {\n        if (actual >= expected) {\n            throwError(msg);\n        }\n    }\n    function assertGreaterThan(actual, expected, msg) {\n        if (actual <= expected) {\n            throwError(msg);\n        }\n    }\n    function assertDefined(actual, msg) {\n        if (actual == null) {\n            throwError(msg);\n        }\n    }\n    function assertComponentType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n        if (!getComponentDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function assertNgModuleType(actual, msg) {\n        if (msg === void 0) { msg = 'Type passed in is not NgModuleType, it does not have \\'ngModuleDef\\' property.'; }\n        if (!getNgModuleDef(actual)) {\n            throwError(msg);\n        }\n    }\n    function throwError(msg) {\n        // tslint:disable-next-line\n        debugger; // Left intentionally for better debugger experience.\n        throw new Error(\"ASSERTION ERROR: \" + msg);\n    }\n    function assertDomNode(node) {\n        assertEqual(node instanceof Node, true, 'The provided value must be an instance of a DOM Node');\n    }\n    function assertPreviousIsParent(isParent) {\n        assertEqual(isParent, true, 'previousOrParentTNode should be a parent');\n    }\n    function assertHasParent(tNode) {\n        assertDefined(tNode.parent, 'previousOrParentTNode should have a parent');\n    }\n    function assertDataInRange(arr, index) {\n        assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Below are constants for LView indices to help us look up LView members\n    // without having to remember the specific indices.\n    // Uglify will inline these when minifying so there shouldn't be a cost.\n    var TVIEW = 0;\n    var FLAGS = 1;\n    var PARENT = 2;\n    var NEXT = 3;\n    var QUERIES = 4;\n    var HOST = 5;\n    var HOST_NODE = 6; // Rename to `T_HOST`?\n    var BINDING_INDEX = 7;\n    var CLEANUP = 8;\n    var CONTEXT = 9;\n    var INJECTOR = 10;\n    var RENDERER_FACTORY = 11;\n    var RENDERER = 12;\n    var SANITIZER = 13;\n    var TAIL = 14;\n    var CONTAINER_INDEX = 15;\n    var CONTENT_QUERIES = 16;\n    var DECLARATION_VIEW = 17;\n    /** Size of LView's header. Necessary to adjust for it when setting slots.  */\n    var HEADER_OFFSET = 18;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Below are constants for LContainer indices to help us look up LContainer members\n     * without having to remember the specific indices.\n     * Uglify will inline these when minifying so there shouldn't be a cost.\n     */\n    var ACTIVE_INDEX = 0;\n    var VIEWS = 1;\n    // PARENT, NEXT, QUERIES, and HOST are indices 2, 3, 4, and 5.\n    // As we already have these constants in LView, we don't need to re-create them.\n    var NATIVE = 6;\n    var RENDER_PARENT = 7;\n    // Because interfaces in TS/JS cannot be instanceof-checked this means that we\n    // need to rely on predictable characteristics of data-structures to check if they\n    // are what we expect for them to be. The `LContainer` interface code below has a\n    // fixed length and the constant value below references that. Using the length value\n    // below we can predictably gaurantee that we are dealing with an `LContainer` array.\n    // This value MUST be kept up to date with the length of the `LContainer` array\n    // interface below so that runtime type checking can work.\n    var LCONTAINER_LENGTH = 8;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This property will be monkey-patched on elements, components and directives\n     */\n    var MONKEY_PATCH_KEY_NAME = '__ngContext__';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var TNODE = 8;\n    var PARENT_INJECTOR = 8;\n    var INJECTOR_BLOOM_PARENT_SIZE = 9;\n    var NO_PARENT_INJECTOR = -1;\n    /**\n     * Each injector is saved in 9 contiguous slots in `LView` and 9 contiguous slots in\n     * `TView.data`. This allows us to store information about the current node's tokens (which\n     * can be shared in `TView`) as well as the tokens of its ancestor nodes (which cannot be\n     * shared, so they live in `LView`).\n     *\n     * Each of these slots (aside from the last slot) contains a bloom filter. This bloom filter\n     * determines whether a directive is available on the associated node or not. This prevents us\n     * from searching the directives array at this level unless it's probable the directive is in it.\n     *\n     * See: https://en.wikipedia.org/wiki/Bloom_filter for more about bloom filters.\n     *\n     * Because all injectors have been flattened into `LView` and `TViewData`, they cannot typed\n     * using interfaces as they were previously. The start index of each `LInjector` and `TInjector`\n     * will differ based on where it is flattened into the main array, so it's not possible to know\n     * the indices ahead of time and save their types here. The interfaces are still included here\n     * for documentation purposes.\n     *\n     * export interface LInjector extends Array<any> {\n     *\n     *    // Cumulative bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Cumulative bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Cumulative bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Cumulative bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Cumulative bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Cumulative bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Cumulative bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Cumulative bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // We need to store a reference to the injector's parent so DI can keep looking up\n     *    // the injector tree until it finds the dependency it's looking for.\n     *    [PARENT_INJECTOR]: number;\n     * }\n     *\n     * export interface TInjector extends Array<any> {\n     *\n     *    // Shared node bloom for directive IDs 0-31  (IDs are % BLOOM_SIZE)\n     *    [0]: number;\n     *\n     *    // Shared node bloom for directive IDs 32-63\n     *    [1]: number;\n     *\n     *    // Shared node bloom for directive IDs 64-95\n     *    [2]: number;\n     *\n     *    // Shared node bloom for directive IDs 96-127\n     *    [3]: number;\n     *\n     *    // Shared node bloom for directive IDs 128-159\n     *    [4]: number;\n     *\n     *    // Shared node bloom for directive IDs 160 - 191\n     *    [5]: number;\n     *\n     *    // Shared node bloom for directive IDs 192 - 223\n     *    [6]: number;\n     *\n     *    // Shared node bloom for directive IDs 224 - 255\n     *    [7]: number;\n     *\n     *    // Necessary to find directive indices for a particular node.\n     *    [TNODE]: TElementNode|TElementContainerNode|TContainerNode;\n     *  }\n     */\n    /**\n    * Factory for creating instances of injectors in the NodeInjector.\n    *\n    * This factory is complicated by the fact that it can resolve `multi` factories as well.\n    *\n    * NOTE: Some of the fields are optional which means that this class has two hidden classes.\n    * - One without `multi` support (most common)\n    * - One with `multi` values, (rare).\n    *\n    * Since VMs can cache up to 4 inline hidden classes this is OK.\n    *\n    * - Single factory: Only `resolving` and `factory` is defined.\n    * - `providers` factory: `componentProviders` is a number and `index = -1`.\n    * - `viewProviders` factory: `componentProviders` is a number and `index` points to `providers`.\n    */\n    var NodeInjectorFactory = /** @class */ (function () {\n        function NodeInjectorFactory(\n        /**\n         * Factory to invoke in order to create a new instance.\n         */\n        factory, \n        /**\n         * Set to `true` if the token is declared in `viewProviders` (or if it is component).\n         */\n        isViewProvider, injectImplementation) {\n            this.factory = factory;\n            /**\n             * Marker set to true during factory invocation to see if we get into recursive loop.\n             * Recursive loop causes an error to be displayed.\n             */\n            this.resolving = false;\n            this.canSeeViewProviders = isViewProvider;\n            this.injectImpl = injectImplementation;\n        }\n        return NodeInjectorFactory;\n    }());\n    var FactoryPrototype = NodeInjectorFactory.prototype;\n    function isFactory(obj) {\n        // See: https://jsperf.com/instanceof-vs-getprototypeof\n        return obj != null && typeof obj == 'object' && Object.getPrototypeOf(obj) == FactoryPrototype;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns whether the values are different from a change detection stand point.\n     *\n     * Constraints are relaxed in checkNoChanges mode. See `devModeEqual` for details.\n     */\n    function isDifferent(a, b) {\n        // NaN is the only value that is not equal to itself so the first\n        // test checks if both a and b are not NaN\n        return !(a !== a && b !== b) && a !== b;\n    }\n    function stringify$1(value) {\n        if (typeof value == 'function')\n            return value.name || value;\n        if (typeof value == 'string')\n            return value;\n        if (value == null)\n            return '';\n        if (typeof value == 'object' && typeof value.type == 'function')\n            return value.type.name || value.type;\n        return '' + value;\n    }\n    /**\n     * Flattens an array in non-recursive way. Input arrays are not modified.\n     */\n    function flatten(list) {\n        var result = [];\n        var i = 0;\n        while (i < list.length) {\n            var item = list[i];\n            if (Array.isArray(item)) {\n                if (item.length > 0) {\n                    list = item.concat(list.slice(i + 1));\n                    i = 0;\n                }\n                else {\n                    i++;\n                }\n            }\n            else {\n                result.push(item);\n                i++;\n            }\n        }\n        return result;\n    }\n    /** Retrieves a value from any `LView` or `TData`. */\n    function loadInternal(view, index) {\n        ngDevMode && assertDataInRange(view, index + HEADER_OFFSET);\n        return view[index + HEADER_OFFSET];\n    }\n    /**\n     * Takes the value of a slot in `LView` and returns the element node.\n     *\n     * Normally, element nodes are stored flat, but if the node has styles/classes on it,\n     * it might be wrapped in a styling context. Or if that node has a directive that injects\n     * ViewContainerRef, it may be wrapped in an LContainer. Or if that node is a component,\n     * it will be wrapped in LView. It could even have all three, so we keep looping\n     * until we find something that isn't an array.\n     *\n     * @param value The initial value in `LView`\n     */\n    function readElementValue(value) {\n        while (Array.isArray(value)) {\n            value = value[HOST];\n        }\n        return value;\n    }\n    /**\n     * Retrieves an element value from the provided `viewData`, by unwrapping\n     * from any containers, component views, or style contexts.\n     */\n    function getNativeByIndex(index, lView) {\n        return readElementValue(lView[index + HEADER_OFFSET]);\n    }\n    function getNativeByTNode(tNode, hostView) {\n        return readElementValue(hostView[tNode.index]);\n    }\n    function getTNode(index, view) {\n        ngDevMode && assertGreaterThan(index, -1, 'wrong index for TNode');\n        ngDevMode && assertLessThan(index, view[TVIEW].data.length, 'wrong index for TNode');\n        return view[TVIEW].data[index + HEADER_OFFSET];\n    }\n    function getComponentViewByIndex(nodeIndex, hostView) {\n        // Could be an LView or an LContainer. If LContainer, unwrap to find LView.\n        var slotValue = hostView[nodeIndex];\n        return slotValue.length >= HEADER_OFFSET ? slotValue : slotValue[HOST];\n    }\n    function isContentQueryHost(tNode) {\n        return (tNode.flags & 4 /* hasContentQuery */) !== 0;\n    }\n    function isComponent(tNode) {\n        return (tNode.flags & 1 /* isComponent */) === 1 /* isComponent */;\n    }\n    function isComponentDef(def) {\n        return def.template !== null;\n    }\n    function isLContainer(value) {\n        // Styling contexts are also arrays, but their first index contains an element node\n        return Array.isArray(value) && value.length === LCONTAINER_LENGTH;\n    }\n    function isRootView(target) {\n        return (target[FLAGS] & 128 /* IsRoot */) !== 0;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootView(target) {\n        ngDevMode && assertDefined(target, 'component');\n        var lView = Array.isArray(target) ? target : readPatchedLView(target);\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    function getRootContext(viewOrComponent) {\n        var rootView = getRootView(viewOrComponent);\n        ngDevMode &&\n            assertDefined(rootView[CONTEXT], 'RootView has no context. Perhaps it is disconnected?');\n        return rootView[CONTEXT];\n    }\n    /**\n     * Returns the monkey-patch value data present on the target (which could be\n     * a component, directive or a DOM node).\n     */\n    function readPatchedData(target) {\n        ngDevMode && assertDefined(target, 'Target expected');\n        return target[MONKEY_PATCH_KEY_NAME];\n    }\n    function readPatchedLView(target) {\n        var value = readPatchedData(target);\n        if (value) {\n            return Array.isArray(value) ? value : value.lView;\n        }\n        return null;\n    }\n    function hasParentInjector(parentLocation) {\n        return parentLocation !== NO_PARENT_INJECTOR;\n    }\n    function getParentInjectorIndex(parentLocation) {\n        return parentLocation & 32767 /* InjectorIndexMask */;\n    }\n    function getParentInjectorViewOffset(parentLocation) {\n        return parentLocation >> 16 /* ViewOffsetShift */;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the view is found that contains the parent\n     * injector.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @returns The LView instance that contains the parent injector\n     */\n    function getParentInjectorView(location, startView) {\n        var viewOffset = getParentInjectorViewOffset(location);\n        var parentView = startView;\n        // For most cases, the parent injector can be found on the host node (e.g. for component\n        // or container), but we must keep the loop here to support the rarer case of deeply nested\n        // <ng-template> tags or inline views, where the parent injector might live many views\n        // above the child injector.\n        while (viewOffset > 0) {\n            parentView = parentView[DECLARATION_VIEW];\n            viewOffset--;\n        }\n        return parentView;\n    }\n    /**\n     * Unwraps a parent injector location number to find the view offset from the current injector,\n     * then walks up the declaration view tree until the TNode of the parent injector is found.\n     *\n     * @param location The location of the parent injector, which contains the view offset\n     * @param startView The LView instance from which to start walking up the view tree\n     * @param startTNode The TNode instance of the starting element\n     * @returns The TNode of the parent injector\n     */\n    function getParentInjectorTNode(location, startView, startTNode) {\n        if (startTNode.parent && startTNode.parent.injectorIndex !== -1) {\n            // view offset is 0\n            var injectorIndex = startTNode.parent.injectorIndex;\n            var parentTNode_1 = startTNode.parent;\n            while (parentTNode_1.parent != null && injectorIndex == parentTNode_1.injectorIndex) {\n                parentTNode_1 = parentTNode_1.parent;\n            }\n            return parentTNode_1;\n        }\n        var viewOffset = getParentInjectorViewOffset(location);\n        // view offset is 1\n        var parentView = startView;\n        var parentTNode = startView[HOST_NODE];\n        // view offset is superior to 1\n        while (viewOffset > 1) {\n            parentView = parentView[DECLARATION_VIEW];\n            parentTNode = parentView[HOST_NODE];\n            viewOffset--;\n        }\n        return parentTNode;\n    }\n    var defaultScheduler = (typeof requestAnimationFrame !== 'undefined' && requestAnimationFrame || // browser only\n        setTimeout // everything else\n    ).bind(_global);\n    /**\n     * Equivalent to ES6 spread, add each item to an array.\n     *\n     * @param items The items to add\n     * @param arr The array to which you want to add the items\n     */\n    function addAllToArray(items, arr) {\n        for (var i = 0; i < items.length; i++) {\n            arr.push(items[i]);\n        }\n    }\n    /**\n     * Given a current view, finds the nearest component's host (LElement).\n     *\n     * @param lView LView for which we want a host element node\n     * @returns The host node\n     */\n    function findComponentView(lView) {\n        var rootTNode = lView[HOST_NODE];\n        while (rootTNode && rootTNode.type === 2 /* View */) {\n            ngDevMode && assertDefined(lView[DECLARATION_VIEW], 'lView[DECLARATION_VIEW]');\n            lView = lView[DECLARATION_VIEW];\n            rootTNode = lView[HOST_NODE];\n        }\n        return lView;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var R3ResolvedDependencyType;\n    (function (R3ResolvedDependencyType) {\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Token\"] = 0] = \"Token\";\n        R3ResolvedDependencyType[R3ResolvedDependencyType[\"Attribute\"] = 1] = \"Attribute\";\n    })(R3ResolvedDependencyType || (R3ResolvedDependencyType = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function getCompilerFacade() {\n        var globalNg = _global.ng;\n        if (!globalNg || !globalNg.ɵcompilerFacade) {\n            throw new Error(\"Angular JIT compilation failed: '@angular/compiler' not loaded!\\n\" +\n                \"  - JIT compilation is discouraged for production use-cases! Consider AOT mode instead.\\n\" +\n                \"  - Did you bootstrap using '@angular/platform-browser-dynamic' or '@angular/platform-server'?\\n\" +\n                \"  - Alternatively provide the compiler with 'import \\\"@angular/compiler\\\";' before bootstrapping.\");\n        }\n        return globalNg.ɵcompilerFacade;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Inject decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n    /**\n     * Optional decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Optional = makeParamDecorator('Optional');\n    /**\n     * Self decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Self = makeParamDecorator('Self');\n    /**\n     * SkipSelf decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var SkipSelf = makeParamDecorator('SkipSelf');\n    /**\n     * Host decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Host = makeParamDecorator('Host');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (InjectFlags) {\n        // TODO(alxhub): make this 'const' when ngc no longer writes exports of it into ngfactory files.\n        InjectFlags[InjectFlags[\"Default\"] = 0] = \"Default\";\n        /**\n         * Specifies that an injector should retrieve a dependency from any injector until reaching the\n         * host element of the current component. (Only used with Element Injector)\n         */\n        InjectFlags[InjectFlags[\"Host\"] = 1] = \"Host\";\n        /** Don't descend into ancestors of the node requesting injection. */\n        InjectFlags[InjectFlags[\"Self\"] = 2] = \"Self\";\n        /** Skip the node that is requesting injection. */\n        InjectFlags[InjectFlags[\"SkipSelf\"] = 4] = \"SkipSelf\";\n        /** Inject `defaultValue` instead if token not found. */\n        InjectFlags[InjectFlags[\"Optional\"] = 8] = \"Optional\";\n    })(exports.InjectFlags || (exports.InjectFlags = {}));\n    /**\n     * Current injector value used by `inject`.\n     * - `undefined`: it is an error to call `inject`\n     * - `null`: `inject` can be called but there is no injector (limp-mode).\n     * - Injector instance: Use the injector for resolution.\n     */\n    var _currentInjector = undefined;\n    function setCurrentInjector(injector) {\n        var former = _currentInjector;\n        _currentInjector = injector;\n        return former;\n    }\n    /**\n     * Current implementation of inject.\n     *\n     * By default, it is `injectInjectorOnly`, which makes it `Injector`-only aware. It can be changed\n     * to `directiveInject`, which brings in the `NodeInjector` system of ivy. It is designed this\n     * way for two reasons:\n     *  1. `Injector` should not depend on ivy logic.\n     *  2. To maintain tree shake-ability we don't want to bring in unnecessary code.\n     */\n    var _injectImplementation;\n    /**\n     * Sets the current inject implementation.\n     */\n    function setInjectImplementation(impl) {\n        var previous = _injectImplementation;\n        _injectImplementation = impl;\n        return previous;\n    }\n    function injectInjectorOnly(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (_currentInjector === undefined) {\n            throw new Error(\"inject() must be called from an injection context\");\n        }\n        else if (_currentInjector === null) {\n            return injectRootLimpMode(token, undefined, flags);\n        }\n        else {\n            return _currentInjector.get(token, flags & exports.InjectFlags.Optional ? null : undefined, flags);\n        }\n    }\n    function inject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        return (_injectImplementation || injectInjectorOnly)(token, flags);\n    }\n    /**\n     * Injects `root` tokens in limp mode.\n     *\n     * If no injector exists, we can still inject tree-shakable providers which have `providedIn` set to\n     * `\"root\"`. This is known as the limp mode injection. In such case the value is stored in the\n     * `InjectableDef`.\n     */\n    function injectRootLimpMode(token, notFoundValue, flags) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef && injectableDef.providedIn == 'root') {\n            return injectableDef.value === undefined ? injectableDef.value = injectableDef.factory() :\n                injectableDef.value;\n        }\n        if (flags & exports.InjectFlags.Optional)\n            return null;\n        if (notFoundValue !== undefined)\n            return notFoundValue;\n        throw new Error(\"Injector: NOT_FOUND [\" + stringify(token) + \"]\");\n    }\n    function injectArgs(types) {\n        var args = [];\n        for (var i = 0; i < types.length; i++) {\n            var arg = types[i];\n            if (Array.isArray(arg)) {\n                if (arg.length === 0) {\n                    throw new Error('Arguments array must have arguments.');\n                }\n                var type = undefined;\n                var flags = exports.InjectFlags.Default;\n                for (var j = 0; j < arg.length; j++) {\n                    var meta = arg[j];\n                    if (meta instanceof Optional || meta.ngMetadataName === 'Optional') {\n                        flags |= exports.InjectFlags.Optional;\n                    }\n                    else if (meta instanceof SkipSelf || meta.ngMetadataName === 'SkipSelf') {\n                        flags |= exports.InjectFlags.SkipSelf;\n                    }\n                    else if (meta instanceof Self || meta.ngMetadataName === 'Self') {\n                        flags |= exports.InjectFlags.Self;\n                    }\n                    else if (meta instanceof Inject) {\n                        type = meta.token;\n                    }\n                    else {\n                        type = meta;\n                    }\n                }\n                args.push(inject(type, flags));\n            }\n            else {\n                args.push(inject(arg));\n            }\n        }\n        return args;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function assertNodeType(tNode, type) {\n        assertDefined(tNode, 'should be called with a TNode');\n        assertEqual(tNode.type, type, \"should be a \" + typeName(type));\n    }\n    function assertNodeOfPossibleTypes(tNode) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        assertDefined(tNode, 'should be called with a TNode');\n        var found = types.some(function (type) { return tNode.type === type; });\n        assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', ') + \" but got \" + typeName(tNode.type));\n    }\n    function typeName(type) {\n        if (type == 1 /* Projection */)\n            return 'Projection';\n        if (type == 0 /* Container */)\n            return 'Container';\n        if (type == 2 /* View */)\n            return 'View';\n        if (type == 3 /* Element */)\n            return 'Element';\n        if (type == 4 /* ElementContainer */)\n            return 'ElementContainer';\n        return '<unknown>';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n     * TView.initHooks during directiveCreate.\n     *\n     * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n     * directive index), then saved in the even indices of the initHooks array. The odd indices\n     * hold the hook functions themselves.\n     *\n     * @param index The index of the directive in LView\n     * @param hooks The static hooks map on the directive def\n     * @param tView The current TView\n     */\n    function queueInitHooks(index, onInit, doCheck, tView) {\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n        if (onInit) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n        }\n        if (doCheck) {\n            (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n            (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n        }\n    }\n    /**\n     * Loops through the directives on a node and queues all their hooks except ngOnInit\n     * and ngDoCheck, which are queued separately in directiveCreate.\n     */\n    function queueLifecycleHooks(tView, tNode) {\n        if (tView.firstTemplatePass) {\n            // It's necessary to loop through the directives at elementEnd() (rather than processing in\n            // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n            // hooks for projected components and directives must be called *before* their hosts.\n            for (var i = tNode.directiveStart, end = tNode.directiveEnd; i < end; i++) {\n                var def = tView.data[i];\n                queueContentHooks(def, tView, i);\n                queueViewHooks(def, tView, i);\n                queueDestroyHooks(def, tView, i);\n            }\n        }\n    }\n    /** Queues afterContentInit and afterContentChecked hooks on TView */\n    function queueContentHooks(def, tView, i) {\n        if (def.afterContentInit) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n        }\n        if (def.afterContentChecked) {\n            (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n            (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n        }\n    }\n    /** Queues afterViewInit and afterViewChecked hooks on TView */\n    function queueViewHooks(def, tView, i) {\n        if (def.afterViewInit) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n        }\n        if (def.afterViewChecked) {\n            (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n            (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n        }\n    }\n    /** Queues onDestroy hooks on TView */\n    function queueDestroyHooks(def, tView, i) {\n        if (def.onDestroy != null) {\n            (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n        }\n    }\n    /**\n     * Calls onInit and doCheck calls if they haven't already been called.\n     *\n     * @param currentView The current view\n     */\n    function executeInitHooks(currentView, tView, checkNoChangesMode) {\n        if (!checkNoChangesMode && currentView[FLAGS] & 32 /* RunInit */) {\n            executeHooks(currentView, tView.initHooks, tView.checkHooks, checkNoChangesMode);\n            currentView[FLAGS] &= ~32 /* RunInit */;\n        }\n    }\n    /**\n     * Iterates over afterViewInit and afterViewChecked functions and calls them.\n     *\n     * @param currentView The current view\n     */\n    function executeHooks(currentView, allHooks, checkHooks, checkNoChangesMode) {\n        if (checkNoChangesMode)\n            return;\n        var hooksToCall = currentView[FLAGS] & 2 /* FirstLViewPass */ ? allHooks : checkHooks;\n        if (hooksToCall) {\n            callHooks(currentView, hooksToCall);\n        }\n    }\n    /**\n     * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n     * the first LView pass.\n     *\n     * @param currentView The current view\n     * @param arr The array in which the hooks are found\n     */\n    function callHooks(currentView, arr) {\n        for (var i = 0; i < arr.length; i += 2) {\n            arr[i + 1].call(currentView[arr[i]]);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Store the element depth count. This is used to identify the root elements of the template\n     * so that we can than attach `LView` to only those elements.\n     */\n    var elementDepthCount;\n    function getElementDepthCount() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return elementDepthCount;\n    }\n    function increaseElementDepthCount() {\n        elementDepthCount++;\n    }\n    function decreaseElementDepthCount() {\n        elementDepthCount--;\n    }\n    var currentDirectiveDef = null;\n    function getCurrentDirectiveDef() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return currentDirectiveDef;\n    }\n    function setCurrentDirectiveDef(def) {\n        currentDirectiveDef = def;\n    }\n    /**\n     * Stores whether directives should be matched to elements.\n     *\n     * When template contains `ngNonBindable` than we need to prevent the runtime form matching\n     * directives on children of that element.\n     *\n     * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     * </div>\n     * ```\n     */\n    var bindingsEnabled;\n    function getBindingsEnabled() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return bindingsEnabled;\n    }\n    /**\n     * Enables directive matching on elements.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function enableBindings() {\n        bindingsEnabled = true;\n    }\n    /**\n     * Disables directive matching on element.\n     *\n     *  * Example:\n     * ```\n     * <my-comp my-directive>\n     *   Should match component / directive.\n     * </my-comp>\n     * <div ngNonBindable>\n     *   <!-- disabledBindings() -->\n     *   <my-comp my-directive>\n     *     Should not match component / directive because we are in ngNonBindable.\n     *   </my-comp>\n     *   <!-- enableBindings() -->\n     * </div>\n     * ```\n     */\n    function disableBindings() {\n        bindingsEnabled = false;\n    }\n    function getLView() {\n        return lView;\n    }\n    /**\n     * Restores `contextViewData` to the given OpaqueViewState instance.\n     *\n     * Used in conjunction with the getCurrentView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     *\n     * @param viewToRestore The OpaqueViewState instance to restore.\n     */\n    function restoreView(viewToRestore) {\n        contextLView = viewToRestore;\n    }\n    /** Used to set the parent property when nodes are created and track query results. */\n    var previousOrParentTNode;\n    function getPreviousOrParentTNode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return previousOrParentTNode;\n    }\n    function setPreviousOrParentTNode(tNode) {\n        previousOrParentTNode = tNode;\n    }\n    function setTNodeAndViewData(tNode, view) {\n        previousOrParentTNode = tNode;\n        lView = view;\n    }\n    /**\n     * If `isParent` is:\n     *  - `true`: then `previousOrParentTNode` points to a parent node.\n     *  - `false`: then `previousOrParentTNode` points to previous node (sibling).\n     */\n    var isParent;\n    function getIsParent() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return isParent;\n    }\n    function setIsParent(value) {\n        isParent = value;\n    }\n    /**\n     * Query instructions can ask for \"current queries\" in 2 different cases:\n     * - when creating view queries (at the root of a component view, before any node is created - in\n     * this case currentQueries points to view queries)\n     * - when creating content queries (i.e. this previousOrParentTNode points to a node on which we\n     * create content queries).\n     */\n    function getOrCreateCurrentQueries(QueryType) {\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        // if this is the first content query on a node, any existing LQueries needs to be cloned\n        // in subsequent template passes, the cloning occurs before directive instantiation.\n        if (previousOrParentTNode && previousOrParentTNode !== lView[HOST_NODE] &&\n            !isContentQueryHost(previousOrParentTNode)) {\n            currentQueries && (currentQueries = lView[QUERIES] = currentQueries.clone());\n            previousOrParentTNode.flags |= 4 /* hasContentQuery */;\n        }\n        return currentQueries || (lView[QUERIES] = new QueryType(null, null, null));\n    }\n    /** Checks whether a given view is in creation mode */\n    function isCreationMode(view) {\n        if (view === void 0) { view = lView; }\n        return (view[FLAGS] & 1 /* CreationMode */) === 1 /* CreationMode */;\n    }\n    /**\n     * State of the current view being processed.\n     *\n     * An array of nodes (text, element, container, etc), pipes, their bindings, and\n     * any local variables that need to be stored between invocations.\n     */\n    var lView;\n    /**\n     * The last viewData retrieved by nextContext().\n     * Allows building nextContext() and reference() calls.\n     *\n     * e.g. const inner = x().$implicit; const outer = x().$implicit;\n     */\n    var contextLView = null;\n    function getContextLView() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return contextLView;\n    }\n    /**\n     * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n     *\n     * Necessary to support ChangeDetectorRef.checkNoChanges().\n     */\n    var checkNoChangesMode = false;\n    function getCheckNoChangesMode() {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return checkNoChangesMode;\n    }\n    function setCheckNoChangesMode(mode) {\n        checkNoChangesMode = mode;\n    }\n    /** Whether or not this is the first time the current view has been processed. */\n    var firstTemplatePass = true;\n    function getFirstTemplatePass() {\n        return firstTemplatePass;\n    }\n    function setFirstTemplatePass(value) {\n        firstTemplatePass = value;\n    }\n    /**\n     * The root index from which pure function instructions should calculate their binding\n     * indices. In component views, this is TView.bindingStartIndex. In a host binding\n     * context, this is the TView.expandoStartIndex + any dirs/hostVars before the given dir.\n     */\n    var bindingRootIndex = -1;\n    // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n    function getBindingRoot() {\n        return bindingRootIndex;\n    }\n    function setBindingRoot(value) {\n        bindingRootIndex = value;\n    }\n    /**\n     * Swap the current state with a new state.\n     *\n     * For performance reasons we store the state in the top level of the module.\n     * This way we minimize the number of properties to read. Whenever a new view\n     * is entered we have to store the state for later, and when the view is\n     * exited the state has to be restored\n     *\n     * @param newView New state to become active\n     * @param host Element to which the View is a child of\n     * @returns the previous state;\n     */\n    function enterView(newView, hostTNode) {\n        var oldView = lView;\n        if (newView) {\n            var tView = newView[TVIEW];\n            firstTemplatePass = tView.firstTemplatePass;\n            bindingRootIndex = tView.bindingStartIndex;\n        }\n        previousOrParentTNode = hostTNode;\n        isParent = true;\n        lView = contextLView = newView;\n        return oldView;\n    }\n    function nextContextImpl(level) {\n        if (level === void 0) { level = 1; }\n        contextLView = walkUpViews(level, contextLView);\n        return contextLView[CONTEXT];\n    }\n    function walkUpViews(nestingLevel, currentView) {\n        while (nestingLevel > 0) {\n            ngDevMode && assertDefined(currentView[DECLARATION_VIEW], 'Declaration view should be defined if nesting level is greater than 0.');\n            currentView = currentView[DECLARATION_VIEW];\n            nestingLevel--;\n        }\n        return currentView;\n    }\n    /**\n     * Resets the application state.\n     */\n    function resetComponentState() {\n        isParent = false;\n        previousOrParentTNode = null;\n        elementDepthCount = 0;\n        bindingsEnabled = true;\n    }\n    /**\n     * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n     * the direction of traversal (up or down the view tree) a bit clearer.\n     *\n     * @param newView New state to become active\n     */\n    function leaveView(newView) {\n        var tView = lView[TVIEW];\n        if (isCreationMode(lView)) {\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        else {\n            executeHooks(lView, tView.viewHooks, tView.viewCheckHooks, checkNoChangesMode);\n            // Views are clean and in update mode after being checked, so these bits are cleared\n            lView[FLAGS] &= ~(8 /* Dirty */ | 2 /* FirstLViewPass */);\n            lView[FLAGS] |= 32 /* RunInit */;\n            lView[BINDING_INDEX] = tView.bindingStartIndex;\n        }\n        enterView(newView, null);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines if the call to `inject` should include `viewProviders` in its resolution.\n     *\n     * This is set to true when we try to instantiate a component. This value is reset in\n     * `getNodeInjectable` to a value which matches the declaration location of the token about to be\n     * instantiated. This is done so that if we are injecting a token which was declared outside of\n     * `viewProviders` we don't accidentally pull `viewProviders` in.\n     *\n     * Example:\n     *\n     * ```\n     * @Injectable()\n     * class MyService {\n     *   constructor(public value: String) {}\n     * }\n     *\n     * @Component({\n     *   providers: [\n     *     MyService,\n     *     {provide: String, value: 'providers' }\n     *   ]\n     *   viewProviders: [\n     *     {provide: String, value: 'viewProviders'}\n     *   ]\n     * })\n     * class MyComponent {\n     *   constructor(myService: MyService, value: String) {\n     *     // We expect that Component can see into `viewProviders`.\n     *     expect(value).toEqual('viewProviders');\n     *     // `MyService` was not declared in `viewProviders` hence it can't see it.\n     *     expect(myService.value).toEqual('providers');\n     *   }\n     * }\n     *\n     * ```\n     */\n    var includeViewProviders = true;\n    function setIncludeViewProviders(v) {\n        var oldValue = includeViewProviders;\n        includeViewProviders = v;\n        return oldValue;\n    }\n    /**\n     * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n     * directives that will share slots, and thus, the fewer false positives when checking for\n     * the existence of a directive.\n     */\n    var BLOOM_SIZE = 256;\n    var BLOOM_MASK = BLOOM_SIZE - 1;\n    /** Counter used to generate unique IDs for directives. */\n    var nextNgElementId = 0;\n    /**\n     * Registers this directive as present in its node's injector by flipping the directive's\n     * corresponding bit in the injector's bloom filter.\n     *\n     * @param injectorIndex The index of the node injector where this token should be registered\n     * @param tView The TView for the injector's bloom filters\n     * @param type The directive token to register\n     */\n    function bloomAdd(injectorIndex, tView, type) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'expected firstTemplatePass to be true');\n        var id = typeof type !== 'string' ? type[NG_ELEMENT_ID] : type.charCodeAt(0) || 0;\n        // Set a unique ID on the directive type, so if something tries to inject the directive,\n        // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n        if (id == null) {\n            id = type[NG_ELEMENT_ID] = nextNgElementId++;\n        }\n        // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n        // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n        var bloomBit = id & BLOOM_MASK;\n        // Create a mask that targets the specific bit associated with the directive.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomBit;\n        // Use the raw bloomBit number to determine which bloom filter bucket we should check\n        // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n        var b7 = bloomBit & 0x80;\n        var b6 = bloomBit & 0x40;\n        var b5 = bloomBit & 0x20;\n        var tData = tView.data;\n        if (b7) {\n            b6 ? (b5 ? (tData[injectorIndex + 7] |= mask) : (tData[injectorIndex + 6] |= mask)) :\n                (b5 ? (tData[injectorIndex + 5] |= mask) : (tData[injectorIndex + 4] |= mask));\n        }\n        else {\n            b6 ? (b5 ? (tData[injectorIndex + 3] |= mask) : (tData[injectorIndex + 2] |= mask)) :\n                (b5 ? (tData[injectorIndex + 1] |= mask) : (tData[injectorIndex] |= mask));\n        }\n    }\n    /**\n     * Creates (or gets an existing) injector for a given element or container.\n     *\n     * @param tNode for which an injector should be retrieved / created.\n     * @param hostView View where the node is stored\n     * @returns Node injector\n     */\n    function getOrCreateNodeInjectorForNode(tNode, hostView) {\n        var existingInjectorIndex = getInjectorIndex(tNode, hostView);\n        if (existingInjectorIndex !== -1) {\n            return existingInjectorIndex;\n        }\n        var tView = hostView[TVIEW];\n        if (tView.firstTemplatePass) {\n            tNode.injectorIndex = hostView.length;\n            insertBloom(tView.data, tNode); // foundation for node bloom\n            insertBloom(hostView, null); // foundation for cumulative bloom\n            insertBloom(tView.blueprint, null);\n            ngDevMode && assertEqual(tNode.flags === 0 || tNode.flags === 1 /* isComponent */, true, 'expected tNode.flags to not be initialized');\n        }\n        var parentLoc = getParentInjectorLocation(tNode, hostView);\n        var parentIndex = getParentInjectorIndex(parentLoc);\n        var parentLView = getParentInjectorView(parentLoc, hostView);\n        var injectorIndex = tNode.injectorIndex;\n        // If a parent injector can't be found, its location is set to -1.\n        // In that case, we don't need to set up a cumulative bloom\n        if (hasParentInjector(parentLoc)) {\n            var parentData = parentLView[TVIEW].data;\n            // Creates a cumulative bloom filter that merges the parent's bloom filter\n            // and its own cumulative bloom (which contains tokens for all ancestors)\n            for (var i = 0; i < 8; i++) {\n                hostView[injectorIndex + i] = parentLView[parentIndex + i] | parentData[parentIndex + i];\n            }\n        }\n        hostView[injectorIndex + PARENT_INJECTOR] = parentLoc;\n        return injectorIndex;\n    }\n    function insertBloom(arr, footer) {\n        arr.push(0, 0, 0, 0, 0, 0, 0, 0, footer);\n    }\n    function getInjectorIndex(tNode, hostView) {\n        if (tNode.injectorIndex === -1 ||\n            // If the injector index is the same as its parent's injector index, then the index has been\n            // copied down from the parent node. No injector has been created yet on this node.\n            (tNode.parent && tNode.parent.injectorIndex === tNode.injectorIndex) ||\n            // After the first template pass, the injector index might exist but the parent values\n            // might not have been calculated yet for this instance\n            hostView[tNode.injectorIndex + PARENT_INJECTOR] == null) {\n            return -1;\n        }\n        else {\n            return tNode.injectorIndex;\n        }\n    }\n    /**\n     * Finds the index of the parent injector, with a view offset if applicable. Used to set the\n     * parent injector initially.\n     *\n     * Returns a combination of number of `ViewData` we have to go up and index in that `Viewdata`\n     */\n    function getParentInjectorLocation(tNode, view) {\n        if (tNode.parent && tNode.parent.injectorIndex !== -1) {\n            return tNode.parent.injectorIndex; // ViewOffset is 0\n        }\n        // For most cases, the parent injector index can be found on the host node (e.g. for component\n        // or container), so this loop will be skipped, but we must keep the loop here to support\n        // the rarer case of deeply nested <ng-template> tags or inline views.\n        var hostTNode = view[HOST_NODE];\n        var viewOffset = 1;\n        while (hostTNode && hostTNode.injectorIndex === -1) {\n            view = view[DECLARATION_VIEW];\n            hostTNode = view ? view[HOST_NODE] : null;\n            viewOffset++;\n        }\n        return hostTNode ?\n            hostTNode.injectorIndex | (viewOffset << 16 /* ViewOffsetShift */) :\n            -1;\n    }\n    /**\n     * Makes a type or an injection token public to the DI system by adding it to an\n     * injector's bloom filter.\n     *\n     * @param di The node injector in which a directive will be added\n     * @param token The type or the injection token to be made public\n     */\n    function diPublicInInjector(injectorIndex, view, token) {\n        bloomAdd(injectorIndex, view[TVIEW], token);\n    }\n    /**\n     * Inject static attribute value into directive constructor.\n     *\n     * This method is used with `factory` functions which are generated as part of\n     * `defineDirective` or `defineComponent`. The method retrieves the static value\n     * of an attribute. (Dynamic attributes are not supported since they are not resolved\n     *  at the time of injection and can change over time.)\n     *\n     * # Example\n     * Given:\n     * ```\n     * @Component(...)\n     * class MyComponent {\n     *   constructor(@Attribute('title') title: string) { ... }\n     * }\n     * ```\n     * When instantiated with\n     * ```\n     * <my-component title=\"Hello\"></my-component>\n     * ```\n     *\n     * Then factory method generated is:\n     * ```\n     * MyComponent.ngComponentDef = defineComponent({\n     *   factory: () => new MyComponent(injectAttribute('title'))\n     *   ...\n     * })\n     * ```\n     *\n     * @publicApi\n     */\n    function injectAttributeImpl(tNode, attrNameToInject) {\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        ngDevMode && assertDefined(tNode, 'expecting tNode');\n        var attrs = tNode.attrs;\n        if (attrs) {\n            for (var i = 0; i < attrs.length; i = i + 2) {\n                var attrName = attrs[i];\n                if (attrName === 3 /* SelectOnly */)\n                    break;\n                if (attrName == attrNameToInject) {\n                    return attrs[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Returns the value associated to the given token from the NodeInjectors => ModuleInjector.\n     *\n     * Look for the injector providing the token by walking up the node injector tree and then\n     * the module injector tree.\n     *\n     * @param tNode The Node where the search for the injector should start\n     * @param lView The `LView` that contains the `tNode`\n     * @param token The token to look for\n     * @param flags Injection flags\n     * @param notFoundValue The value to return when the injection flags is `InjectFlags.Optional`\n     * @returns the value from the injector, `null` when not found, or `notFoundValue` if provided\n     */\n    function getOrCreateInjectable(tNode, lView, token, flags, notFoundValue) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        if (tNode) {\n            var bloomHash = bloomHashBitOrFactory(token);\n            // If the ID stored here is a function, this is a special object like ElementRef or TemplateRef\n            // so just call the factory function to create it.\n            if (typeof bloomHash === 'function') {\n                var savePreviousOrParentTNode = getPreviousOrParentTNode();\n                var saveLView = getLView();\n                setTNodeAndViewData(tNode, lView);\n                try {\n                    var value = bloomHash();\n                    if (value == null && !(flags & exports.InjectFlags.Optional)) {\n                        throw new Error(\"No provider for \" + stringify$1(token) + \"!\");\n                    }\n                    else {\n                        return value;\n                    }\n                }\n                finally {\n                    setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n                }\n            }\n            else if (typeof bloomHash == 'number') {\n                // If the token has a bloom hash, then it is a token which could be in NodeInjector.\n                // A reference to the previous injector TView that was found while climbing the element\n                // injector tree. This is used to know if viewProviders can be accessed on the current\n                // injector.\n                var previousTView = null;\n                var injectorIndex = getInjectorIndex(tNode, lView);\n                var parentLocation = NO_PARENT_INJECTOR;\n                var hostTElementNode = flags & exports.InjectFlags.Host ? findComponentView(lView)[HOST_NODE] : null;\n                // If we should skip this injector, or if there is no injector on this node, start by\n                // searching\n                // the parent injector.\n                if (injectorIndex === -1 || flags & exports.InjectFlags.SkipSelf) {\n                    parentLocation = injectorIndex === -1 ? getParentInjectorLocation(tNode, lView) :\n                        lView[injectorIndex + PARENT_INJECTOR];\n                    if (!shouldSearchParent(flags, false)) {\n                        injectorIndex = -1;\n                    }\n                    else {\n                        previousTView = lView[TVIEW];\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                }\n                // Traverse up the injector tree until we find a potential match or until we know there\n                // *isn't* a match.\n                while (injectorIndex !== -1) {\n                    parentLocation = lView[injectorIndex + PARENT_INJECTOR];\n                    // Check the current injector. If it matches, see if it contains token.\n                    var tView = lView[TVIEW];\n                    if (bloomHasToken(bloomHash, injectorIndex, tView.data)) {\n                        // At this point, we have an injector which *may* contain the token, so we step through\n                        // the providers and directives associated with the injector's corresponding node to get\n                        // the instance.\n                        var instance = searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode);\n                        if (instance !== NOT_FOUND) {\n                            return instance;\n                        }\n                    }\n                    if (shouldSearchParent(flags, lView[TVIEW].data[injectorIndex + TNODE] === hostTElementNode) &&\n                        bloomHasToken(bloomHash, injectorIndex, lView)) {\n                        // The def wasn't found anywhere on this node, so it was a false positive.\n                        // Traverse up the tree and continue searching.\n                        previousTView = tView;\n                        injectorIndex = getParentInjectorIndex(parentLocation);\n                        lView = getParentInjectorView(parentLocation, lView);\n                    }\n                    else {\n                        // If we should not search parent OR If the ancestor bloom filter value does not have the\n                        // bit corresponding to the directive we can give up on traversing up to find the specific\n                        // injector.\n                        injectorIndex = -1;\n                    }\n                }\n            }\n        }\n        if (flags & exports.InjectFlags.Optional && notFoundValue === undefined) {\n            // This must be set or the NullInjector will throw for optional deps\n            notFoundValue = null;\n        }\n        if ((flags & (exports.InjectFlags.Self | exports.InjectFlags.Host)) === 0) {\n            var moduleInjector = lView[INJECTOR];\n            if (moduleInjector) {\n                return moduleInjector.get(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n            else {\n                return injectRootLimpMode(token, notFoundValue, flags & exports.InjectFlags.Optional);\n            }\n        }\n        if (flags & exports.InjectFlags.Optional) {\n            return notFoundValue;\n        }\n        else {\n            throw new Error(\"NodeInjector: NOT_FOUND [\" + stringify$1(token) + \"]\");\n        }\n    }\n    var NOT_FOUND = {};\n    function searchTokensOnInjector(injectorIndex, lView, token, previousTView, flags, hostTElementNode) {\n        var currentTView = lView[TVIEW];\n        var tNode = currentTView.data[injectorIndex + TNODE];\n        // First, we need to determine if view providers can be accessed by the starting element.\n        // There are two possibities\n        var canAccessViewProviders = previousTView == null ?\n            // 1) This is the first invocation `previousTView == null` which means that we are at the\n            // `TNode` of where injector is starting to look. In such a case the only time we are allowed\n            // to look into the ViewProviders is if:\n            // - we are on a component\n            // - AND the injector set `includeViewProviders` to true (implying that the token can see\n            // ViewProviders because it is the Component or a Service which itself was declared in\n            // ViewProviders)\n            (isComponent(tNode) && includeViewProviders) :\n            // 2) `previousTView != null` which means that we are now walking across the parent nodes.\n            // In such a case we are only allowed to look into the ViewProviders if:\n            // - We just crossed from child View to Parent View `previousTView != currentTView`\n            // - AND the parent TNode is an Element.\n            // This means that we just came from the Component's View and therefore are allowed to see\n            // into the ViewProviders.\n            (previousTView != currentTView && (tNode.type === 3 /* Element */));\n        // This special case happens when there is a @host on the inject and when we are searching\n        // on the host element node.\n        var isHostSpecialCase = (flags & exports.InjectFlags.Host) && hostTElementNode === tNode;\n        var injectableIdx = locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase);\n        if (injectableIdx !== null) {\n            return getNodeInjectable(currentTView.data, lView, injectableIdx, tNode);\n        }\n        else {\n            return NOT_FOUND;\n        }\n    }\n    /**\n     * Searches for the given token among the node's directives and providers.\n     *\n     * @param tNode TNode on which directives are present.\n     * @param lView The view we are currently processing\n     * @param token Provider token or type of a directive to look for.\n     * @param canAccessViewProviders Whether view providers should be considered.\n     * @param isHostSpecialCase Whether the host special case applies.\n     * @returns Index of a found directive or provider, or null when none found.\n     */\n    function locateDirectiveOrProvider(tNode, lView, token, canAccessViewProviders, isHostSpecialCase) {\n        var tView = lView[TVIEW];\n        var nodeProviderIndexes = tNode.providerIndexes;\n        var tInjectables = tView.data;\n        var injectablesStart = nodeProviderIndexes & 65535 /* ProvidersStartIndexMask */;\n        var directivesStart = tNode.directiveStart;\n        var directiveEnd = tNode.directiveEnd;\n        var cptViewProvidersCount = nodeProviderIndexes >> 16 /* CptViewProvidersCountShift */;\n        var startingIndex = canAccessViewProviders ? injectablesStart : injectablesStart + cptViewProvidersCount;\n        // When the host special case applies, only the viewProviders and the component are visible\n        var endIndex = isHostSpecialCase ? injectablesStart + cptViewProvidersCount : directiveEnd;\n        for (var i = startingIndex; i < endIndex; i++) {\n            var providerTokenOrDef = tInjectables[i];\n            if (i < directivesStart && token === providerTokenOrDef ||\n                i >= directivesStart && providerTokenOrDef.type === token) {\n                return i;\n            }\n        }\n        if (isHostSpecialCase) {\n            var dirDef = tInjectables[directivesStart];\n            if (dirDef && isComponentDef(dirDef) && dirDef.type === token) {\n                return directivesStart;\n            }\n        }\n        return null;\n    }\n    /**\n    * Retrieve or instantiate the injectable from the `lData` at particular `index`.\n    *\n    * This function checks to see if the value has already been instantiated and if so returns the\n    * cached `injectable`. Otherwise if it detects that the value is still a factory it\n    * instantiates the `injectable` and caches the value.\n    */\n    function getNodeInjectable(tData, lData, index, tNode) {\n        var value = lData[index];\n        if (isFactory(value)) {\n            var factory = value;\n            if (factory.resolving) {\n                throw new Error(\"Circular dep for \" + stringify$1(tData[index]));\n            }\n            var previousIncludeViewProviders = setIncludeViewProviders(factory.canSeeViewProviders);\n            factory.resolving = true;\n            var previousInjectImplementation = void 0;\n            if (factory.injectImpl) {\n                previousInjectImplementation = setInjectImplementation(factory.injectImpl);\n            }\n            var savePreviousOrParentTNode = getPreviousOrParentTNode();\n            var saveLView = getLView();\n            setTNodeAndViewData(tNode, lData);\n            try {\n                value = lData[index] = factory.factory(null, tData, lData, tNode);\n            }\n            finally {\n                if (factory.injectImpl)\n                    setInjectImplementation(previousInjectImplementation);\n                setIncludeViewProviders(previousIncludeViewProviders);\n                factory.resolving = false;\n                setTNodeAndViewData(savePreviousOrParentTNode, saveLView);\n            }\n        }\n        return value;\n    }\n    /**\n     * Returns the bit in an injector's bloom filter that should be used to determine whether or not\n     * the directive might be provided by the injector.\n     *\n     * When a directive is public, it is added to the bloom filter and given a unique ID that can be\n     * retrieved on the Type. When the directive isn't public or the token is not a directive `null`\n     * is returned as the node injector can not possibly provide that token.\n     *\n     * @param token the injection token\n     * @returns the matching bit to check in the bloom filter or `null` if the token is not known.\n     */\n    function bloomHashBitOrFactory(token) {\n        ngDevMode && assertDefined(token, 'token must be defined');\n        if (typeof token === 'string') {\n            return token.charCodeAt(0) || 0;\n        }\n        var tokenId = token[NG_ELEMENT_ID];\n        return typeof tokenId === 'number' ? tokenId & BLOOM_MASK : tokenId;\n    }\n    function bloomHasToken(bloomHash, injectorIndex, injectorView) {\n        // Create a mask that targets the specific bit associated with the directive we're looking for.\n        // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n        // to bit positions 0 - 31 in a 32 bit integer.\n        var mask = 1 << bloomHash;\n        var b7 = bloomHash & 0x80;\n        var b6 = bloomHash & 0x40;\n        var b5 = bloomHash & 0x20;\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value;\n        if (b7) {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 7] : injectorView[injectorIndex + 6]) :\n                (b5 ? injectorView[injectorIndex + 5] : injectorView[injectorIndex + 4]);\n        }\n        else {\n            value = b6 ? (b5 ? injectorView[injectorIndex + 3] : injectorView[injectorIndex + 2]) :\n                (b5 ? injectorView[injectorIndex + 1] : injectorView[injectorIndex]);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        return !!(value & mask);\n    }\n    /** Returns true if flags prevent parent injector from being searched for tokens */\n    function shouldSearchParent(flags, isFirstHostTNode) {\n        return !(flags & exports.InjectFlags.Self) && !(flags & exports.InjectFlags.Host && isFirstHostTNode);\n    }\n    function injectInjector() {\n        var tNode = getPreviousOrParentTNode();\n        return new NodeInjector(tNode, getLView());\n    }\n    var NodeInjector = /** @class */ (function () {\n        function NodeInjector(_tNode, _lView) {\n            this._tNode = _tNode;\n            this._lView = _lView;\n        }\n        NodeInjector.prototype.get = function (token, notFoundValue) {\n            return getOrCreateInjectable(this._tNode, this._lView, token, undefined, notFoundValue);\n        };\n        return NodeInjector;\n    }());\n    function getFactoryOf(type) {\n        var typeAny = type;\n        var def = getComponentDef(typeAny) || getDirectiveDef(typeAny) ||\n            getPipeDef(typeAny) || getInjectableDef(typeAny) || getInjectorDef(typeAny);\n        if (!def || def.factory === undefined) {\n            return null;\n        }\n        return def.factory;\n    }\n    function getInheritedFactory(type) {\n        var proto = Object.getPrototypeOf(type.prototype).constructor;\n        var factory = getFactoryOf(proto);\n        if (factory !== null) {\n            return factory;\n        }\n        else {\n            // There is no factory defined. Either this was improper usage of inheritance\n            // (no Angular decorator on the superclass) or there is no constructor at all\n            // in the inheritance chain. Since the two cases cannot be distinguished, the\n            // latter has to be assumed.\n            return function (t) { return new t(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Returns the matching `LContext` data for a given DOM node, directive or component instance.\n     *\n     * This function will examine the provided DOM element, component, or directive instance\\'s\n     * monkey-patched property to derive the `LContext` data. Once called then the monkey-patched\n     * value will be that of the newly created `LContext`.\n     *\n     * If the monkey-patched value is the `LView` instance then the context value for that\n     * target will be created and the monkey-patch reference will be updated. Therefore when this\n     * function is called it may mutate the provided element\\'s, component\\'s or any of the associated\n     * directive\\'s monkey-patch values.\n     *\n     * If the monkey-patch value is not detected then the code will walk up the DOM until an element\n     * is found which contains a monkey-patch reference. When that occurs then the provided element\n     * will be updated with a new context (which is then returned). If the monkey-patch value is not\n     * detected for a component/directive instance then it will throw an error (all components and\n     * directives should be automatically monkey-patched by ivy).\n     *\n     * @param target Component, Directive or DOM Node.\n     */\n    function getLContext(target) {\n        var mpValue = readPatchedData(target);\n        if (mpValue) {\n            // only when it's an array is it considered an LView instance\n            // ... otherwise it's an already constructed LContext instance\n            if (Array.isArray(mpValue)) {\n                var lView = mpValue;\n                var nodeIndex = void 0;\n                var component = undefined;\n                var directives = undefined;\n                if (isComponentInstance(target)) {\n                    nodeIndex = findViaComponent(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided component was not found in the application');\n                    }\n                    component = target;\n                }\n                else if (isDirectiveInstance(target)) {\n                    nodeIndex = findViaDirective(lView, target);\n                    if (nodeIndex == -1) {\n                        throw new Error('The provided directive was not found in the application');\n                    }\n                    directives = getDirectivesAtNodeIndex(nodeIndex, lView, false);\n                }\n                else {\n                    nodeIndex = findViaNativeElement(lView, target);\n                    if (nodeIndex == -1) {\n                        return null;\n                    }\n                }\n                // the goal is not to fill the entire context full of data because the lookups\n                // are expensive. Instead, only the target data (the element, component, container, ICU\n                // expression or directive details) are filled into the context. If called multiple times\n                // with different target values then the missing target data will be filled in.\n                var native = readElementValue(lView[nodeIndex]);\n                var existingCtx = readPatchedData(native);\n                var context = (existingCtx && !Array.isArray(existingCtx)) ?\n                    existingCtx :\n                    createLContext(lView, nodeIndex, native);\n                // only when the component has been discovered then update the monkey-patch\n                if (component && context.component === undefined) {\n                    context.component = component;\n                    attachPatchData(context.component, context);\n                }\n                // only when the directives have been discovered then update the monkey-patch\n                if (directives && context.directives === undefined) {\n                    context.directives = directives;\n                    for (var i = 0; i < directives.length; i++) {\n                        attachPatchData(directives[i], context);\n                    }\n                }\n                attachPatchData(context.native, context);\n                mpValue = context;\n            }\n        }\n        else {\n            var rElement = target;\n            ngDevMode && assertDomNode(rElement);\n            // if the context is not found then we need to traverse upwards up the DOM\n            // to find the nearest element that has already been monkey patched with data\n            var parent_1 = rElement;\n            while (parent_1 = parent_1.parentNode) {\n                var parentContext = readPatchedData(parent_1);\n                if (parentContext) {\n                    var lView = void 0;\n                    if (Array.isArray(parentContext)) {\n                        lView = parentContext;\n                    }\n                    else {\n                        lView = parentContext.lView;\n                    }\n                    // the edge of the app was also reached here through another means\n                    // (maybe because the DOM was changed manually).\n                    if (!lView) {\n                        return null;\n                    }\n                    var index = findViaNativeElement(lView, rElement);\n                    if (index >= 0) {\n                        var native = readElementValue(lView[index]);\n                        var context = createLContext(lView, index, native);\n                        attachPatchData(native, context);\n                        mpValue = context;\n                        break;\n                    }\n                }\n            }\n        }\n        return mpValue || null;\n    }\n    /**\n     * Creates an empty instance of a `LContext` context\n     */\n    function createLContext(lView, nodeIndex, native) {\n        return {\n            lView: lView,\n            nodeIndex: nodeIndex,\n            native: native,\n            component: undefined,\n            directives: undefined,\n            localRefs: undefined,\n        };\n    }\n    /**\n     * Takes a component instance and returns the view for that component.\n     *\n     * @param componentInstance\n     * @returns The component's view\n     */\n    function getComponentViewByInstance(componentInstance) {\n        var lView = readPatchedData(componentInstance);\n        var view;\n        if (Array.isArray(lView)) {\n            var nodeIndex = findViaComponent(lView, componentInstance);\n            view = getComponentViewByIndex(nodeIndex, lView);\n            var context = createLContext(lView, nodeIndex, view[HOST]);\n            context.component = componentInstance;\n            attachPatchData(componentInstance, context);\n            attachPatchData(context.native, context);\n        }\n        else {\n            var context = lView;\n            view = getComponentViewByIndex(context.nodeIndex, context.lView);\n        }\n        return view;\n    }\n    /**\n     * Assigns the given data to the given target (which could be a component,\n     * directive or DOM node instance) using monkey-patching.\n     */\n    function attachPatchData(target, data) {\n        target[MONKEY_PATCH_KEY_NAME] = data;\n    }\n    function isComponentInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngComponentDef;\n    }\n    function isDirectiveInstance(instance) {\n        return instance && instance.constructor && instance.constructor.ngDirectiveDef;\n    }\n    /**\n     * Locates the element within the given LView and returns the matching index\n     */\n    function findViaNativeElement(lView, target) {\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var native = getNativeByTNode(tNode, lView);\n            if (native === target) {\n                return tNode.index;\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Locates the next tNode (child, sibling or parent).\n     */\n    function traverseNextElement(tNode) {\n        if (tNode.child) {\n            return tNode.child;\n        }\n        else if (tNode.next) {\n            return tNode.next;\n        }\n        else {\n            // Let's take the following template: <div><span>text</span></div><component/>\n            // After checking the text node, we need to find the next parent that has a \"next\" TNode,\n            // in this case the parent `div`, so that we can find the component.\n            while (tNode.parent && !tNode.parent.next) {\n                tNode = tNode.parent;\n            }\n            return tNode.parent && tNode.parent.next;\n        }\n    }\n    /**\n     * Locates the component within the given LView and returns the matching index\n     */\n    function findViaComponent(lView, componentInstance) {\n        var componentIndices = lView[TVIEW].components;\n        if (componentIndices) {\n            for (var i = 0; i < componentIndices.length; i++) {\n                var elementComponentIndex = componentIndices[i];\n                var componentView = getComponentViewByIndex(elementComponentIndex, lView);\n                if (componentView[CONTEXT] === componentInstance) {\n                    return elementComponentIndex;\n                }\n            }\n        }\n        else {\n            var rootComponentView = getComponentViewByIndex(HEADER_OFFSET, lView);\n            var rootComponent = rootComponentView[CONTEXT];\n            if (rootComponent === componentInstance) {\n                // we are dealing with the root element here therefore we know that the\n                // element is the very first element after the HEADER data in the lView\n                return HEADER_OFFSET;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Locates the directive within the given LView and returns the matching index\n     */\n    function findViaDirective(lView, directiveInstance) {\n        // if a directive is monkey patched then it will (by default)\n        // have a reference to the LView of the current view. The\n        // element bound to the directive being search lives somewhere\n        // in the view data. We loop through the nodes and check their\n        // list of directives for the instance.\n        var tNode = lView[TVIEW].firstChild;\n        while (tNode) {\n            var directiveIndexStart = tNode.directiveStart;\n            var directiveIndexEnd = tNode.directiveEnd;\n            for (var i = directiveIndexStart; i < directiveIndexEnd; i++) {\n                if (lView[i] === directiveInstance) {\n                    return tNode.index;\n                }\n            }\n            tNode = traverseNextElement(tNode);\n        }\n        return -1;\n    }\n    /**\n     * Returns a list of directives extracted from the given view based on the\n     * provided list of directive index values.\n     *\n     * @param nodeIndex The node index\n     * @param lView The target view data\n     * @param includeComponents Whether or not to include components in returned directives\n     */\n    function getDirectivesAtNodeIndex(nodeIndex, lView, includeComponents) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        if (directiveStartIndex == 0)\n            return EMPTY_ARRAY;\n        var directiveEndIndex = tNode.directiveEnd;\n        if (!includeComponents && tNode.flags & 1 /* isComponent */)\n            directiveStartIndex++;\n        return lView.slice(directiveStartIndex, directiveEndIndex);\n    }\n    function getComponentAtNodeIndex(nodeIndex, lView) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        var directiveStartIndex = tNode.directiveStart;\n        return tNode.flags & 1 /* isComponent */ ? lView[directiveStartIndex] : null;\n    }\n    /**\n     * Returns a map of local references (local reference name => element or directive instance) that\n     * exist on a given element.\n     */\n    function discoverLocalRefs(lView, nodeIndex) {\n        var tNode = lView[TVIEW].data[nodeIndex];\n        if (tNode && tNode.localNames) {\n            var result = {};\n            for (var i = 0; i < tNode.localNames.length; i += 2) {\n                var localRefName = tNode.localNames[i];\n                var directiveIndex = tNode.localNames[i + 1];\n                result[localRefName] =\n                    directiveIndex === -1 ? getNativeByTNode(tNode, lView) : lView[directiveIndex];\n            }\n            return result;\n        }\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getComponent(element) {\n        var context = loadLContextFromNode(element);\n        if (context.component === undefined) {\n            context.component = getComponentAtNodeIndex(context.nodeIndex, context.lView);\n        }\n        return context.component;\n    }\n    /**\n     * Returns the component instance associated with a given DOM host element.\n     * Elements which don't represent components return `null`.\n     *\n     * @param element Host DOM element from which the component should be retrieved.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getComponent(<child-comp>) instanceof ChildComponent).toBeTruthy();\n     * expect(getComponent(<my-app>) instanceof MyApp).toBeTruthy();\n     * ```\n     *\n     * @publicApi\n     */\n    function getContext(element) {\n        var context = loadLContextFromNode(element);\n        return context.lView[CONTEXT];\n    }\n    /**\n     * Returns the component instance associated with view which owns the DOM element (`null`\n     * otherwise).\n     *\n     * @param element DOM element which is owned by an existing component's view.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div>\n     *       <child-comp></child-comp>\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getViewComponent(<child-comp>) instanceof MyApp).toBeTruthy();\n     * expect(getViewComponent(<my-app>)).toEqual(null);\n     * ```\n     *\n     * @publicApi\n     */\n    function getViewComponent(element) {\n        var context = loadLContext(element);\n        var lView = context.lView;\n        while (lView[PARENT] && lView[HOST] === null) {\n            // As long as lView[HOST] is null we know we are part of sub-template such as `*ngIf`\n            lView = lView[PARENT];\n        }\n        return lView[FLAGS] & 128 /* IsRoot */ ? null : lView[CONTEXT];\n    }\n    /**\n     * Returns the `RootContext` instance that is associated with\n     * the application where the target is situated.\n     *\n     */\n    function getRootContext$1(target) {\n        var lViewData = Array.isArray(target) ? target : loadLContext(target).lView;\n        var rootLView = getRootView$1(lViewData);\n        return rootLView[CONTEXT];\n    }\n    /**\n     * Retrieve all root components.\n     *\n     * Root components are those which have been bootstrapped by Angular.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getRootComponents(target) {\n        return __spread(getRootContext$1(target).components);\n    }\n    /**\n     * Retrieves an `Injector` associated with the element, component or directive.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getInjector(target) {\n        var context = loadLContext(target);\n        var tNode = context.lView[TVIEW].data[context.nodeIndex];\n        return new NodeInjector(tNode, context.lView);\n    }\n    /**\n     * Retrieve a set of injection tokens at a given DOM node.\n     *\n     * @param element Element for which the injection tokens should be retrieved.\n     * @publicApi\n     */\n    function getInjectionTokens(element) {\n        var context = loadLContext(element, false);\n        if (!context)\n            return [];\n        var lView = context.lView;\n        var tView = lView[TVIEW];\n        var tNode = tView.data[context.nodeIndex];\n        var providerTokens = [];\n        var startIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var endIndex = tNode.directiveEnd;\n        for (var i = startIndex; i < endIndex; i++) {\n            var value = tView.data[i];\n            if (isDirectiveDefHack(value)) {\n                // The fact that we sometimes store Type and sometimes DirectiveDef in this location is a\n                // design flaw.  We should always store same type so that we can be monomorphic. The issue\n                // is that for Components/Directives we store the def instead the type. The correct behavior\n                // is that we should always be storing injectable type in this location.\n                value = value.type;\n            }\n            providerTokens.push(value);\n        }\n        return providerTokens;\n    }\n    /**\n     * Retrieves directives associated with a given DOM host element.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getDirectives(target) {\n        var context = loadLContext(target);\n        if (context.directives === undefined) {\n            context.directives = getDirectivesAtNodeIndex(context.nodeIndex, context.lView, false);\n        }\n        return context.directives || [];\n    }\n    function loadLContext(target, throwOnNotFound) {\n        if (throwOnNotFound === void 0) { throwOnNotFound = true; }\n        var context = getLContext(target);\n        if (!context && throwOnNotFound) {\n            throw new Error(ngDevMode ? \"Unable to find context associated with \" + stringify$1(target) :\n                'Invalid ng target');\n        }\n        return context;\n    }\n    /**\n     * Retrieve the root view from any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param componentOrView any component or view\n     *\n     */\n    function getRootView$1(componentOrView) {\n        var lView;\n        if (Array.isArray(componentOrView)) {\n            ngDevMode && assertDefined(componentOrView, 'lView');\n            lView = componentOrView;\n        }\n        else {\n            ngDevMode && assertDefined(componentOrView, 'component');\n            lView = readPatchedLView(componentOrView);\n        }\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView = lView[PARENT];\n        }\n        return lView;\n    }\n    /**\n     * Retrieve map of local references.\n     *\n     * The references are retrieved as a map of local reference name to element or directive instance.\n     *\n     * @param target A DOM element, component or directive instance.\n     *\n     * @publicApi\n     */\n    function getLocalRefs(target) {\n        var context = loadLContext(target);\n        if (context.localRefs === undefined) {\n            context.localRefs = discoverLocalRefs(context.lView, context.nodeIndex);\n        }\n        return context.localRefs || {};\n    }\n    /**\n     * Retrieve the host element of the component.\n     *\n     * Use this function to retrieve the host element of the component. The host\n     * element is the element which the component is associated with.\n     *\n     * @param directive Component or Directive for which the host element should be retrieved.\n     *\n     * @publicApi\n     */\n    function getHostElement(directive) {\n        return getLContext(directive).native;\n    }\n    function loadLContextFromNode(node) {\n        if (!(node instanceof Node))\n            throw new Error('Expecting instance of DOM Node');\n        return loadLContext(node);\n    }\n    function isBrowserEvents(listener) {\n        // Browser events are those which don't have `useCapture` as boolean.\n        return typeof listener.useCapture === 'boolean';\n    }\n    /**\n     * Retrieves a list of DOM listeners.\n     *\n     * ```\n     * <my-app>\n     *   #VIEW\n     *     <div (click)=\"doSomething()\">\n     *     </div>\n     * </mp-app>\n     *\n     * expect(getListeners(<div>)).toEqual({\n     *   name: 'click',\n     *   element: <div>,\n     *   callback: () => doSomething(),\n     *   useCapture: false\n     * });\n     * ```\n     *\n     * @param element Element for which the DOM listeners should be retrieved.\n     * @publicApi\n     */\n    function getListeners(element) {\n        var lContext = loadLContextFromNode(element);\n        var lView = lContext.lView;\n        var tView = lView[TVIEW];\n        var lCleanup = lView[CLEANUP];\n        var tCleanup = tView.cleanup;\n        var listeners = [];\n        if (tCleanup && lCleanup) {\n            for (var i = 0; i < tCleanup.length;) {\n                var firstParam = tCleanup[i++];\n                var secondParam = tCleanup[i++];\n                if (typeof firstParam === 'string') {\n                    var name_1 = firstParam;\n                    var listenerElement = readElementValue(lView[secondParam]);\n                    var callback = lCleanup[tCleanup[i++]];\n                    var useCaptureOrIndx = tCleanup[i++];\n                    // if useCaptureOrIndx is boolean then report it as is.\n                    // if useCaptureOrIndx is positive number then it in unsubscribe method\n                    // if useCaptureOrIndx is negative number then it is a Subscription\n                    var useCapture = typeof useCaptureOrIndx === 'boolean' ?\n                        useCaptureOrIndx :\n                        (useCaptureOrIndx >= 0 ? false : null);\n                    if (element == listenerElement) {\n                        listeners.push({ element: element, name: name_1, callback: callback, useCapture: useCapture });\n                    }\n                }\n            }\n        }\n        listeners.sort(sortListeners);\n        return listeners;\n    }\n    function sortListeners(a, b) {\n        if (a.name == b.name)\n            return 0;\n        return a.name < b.name ? -1 : 1;\n    }\n    /**\n     * This function should not exist because it is megamorphic and only mostly correct.\n     *\n     * See call site for more info.\n     */\n    function isDirectiveDefHack(obj) {\n        return obj.type !== undefined && obj.template !== undefined && obj.declaredInputs !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function normalizeDebugBindingName(name) {\n        // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n        name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n        return \"ng-reflect-\" + name;\n    }\n    var CAMEL_CASE_REGEXP = /([A-Z])/g;\n    function camelCaseToDashCase(input) {\n        return input.replace(CAMEL_CASE_REGEXP, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return '-' + m[1].toLowerCase();\n        });\n    }\n    function normalizeDebugBindingValue(value) {\n        try {\n            // Limit the size of the value as otherwise the DOM just gets polluted.\n            return value != null ? value.toString().slice(0, 30) : value;\n        }\n        catch (e) {\n            return '[ERROR] Exception while trying to serialize the value';\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function devModeEqual(a, b) {\n        var isListLikeIterableA = isListLikeIterable(a);\n        var isListLikeIterableB = isListLikeIterable(b);\n        if (isListLikeIterableA && isListLikeIterableB) {\n            return areIterablesEqual(a, b, devModeEqual);\n        }\n        else {\n            var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n            var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n            if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n                return true;\n            }\n            else {\n                return looseIdentical(a, b);\n            }\n        }\n    }\n    /**\n     * Indicates that the result of a {@link Pipe} transformation has changed even though the\n     * reference has not changed.\n     *\n     * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n     * is stored.\n     *\n     * Example:\n     *\n     * ```\n     * if (this._latestValue === this._latestReturnedValue) {\n     *    return this._latestReturnedValue;\n     *  } else {\n     *    this._latestReturnedValue = this._latestValue;\n     *    return WrappedValue.wrap(this._latestValue); // this will force update\n     *  }\n     * ```\n     *\n     * @publicApi\n     */\n    var WrappedValue = /** @class */ (function () {\n        function WrappedValue(value) {\n            this.wrapped = value;\n        }\n        /** Creates a wrapped value. */\n        WrappedValue.wrap = function (value) { return new WrappedValue(value); };\n        /**\n         * Returns the underlying value of a wrapped value.\n         * Returns the given `value` when it is not wrapped.\n         **/\n        WrappedValue.unwrap = function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n        /** Returns true if `value` is a wrapped value. */\n        WrappedValue.isWrapped = function (value) { return value instanceof WrappedValue; };\n        return WrappedValue;\n    }());\n    /**\n     * Represents a basic change from a previous to a new value.\n     *\n     * @publicApi\n     */\n    var SimpleChange = /** @class */ (function () {\n        function SimpleChange(previousValue, currentValue, firstChange) {\n            this.previousValue = previousValue;\n            this.currentValue = currentValue;\n            this.firstChange = firstChange;\n        }\n        /**\n         * Check whether the new value is the first value assigned.\n         */\n        SimpleChange.prototype.isFirstChange = function () { return this.firstChange; };\n        return SimpleChange;\n    }());\n    function isListLikeIterable(obj) {\n        if (!isJsObject(obj))\n            return false;\n        return Array.isArray(obj) ||\n            (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n                getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n    }\n    function areIterablesEqual(a, b, comparator) {\n        var iterator1 = a[getSymbolIterator()]();\n        var iterator2 = b[getSymbolIterator()]();\n        while (true) {\n            var item1 = iterator1.next();\n            var item2 = iterator2.next();\n            if (item1.done && item2.done)\n                return true;\n            if (item1.done || item2.done)\n                return false;\n            if (!comparator(item1.value, item2.value))\n                return false;\n        }\n    }\n    function iterateListLike(obj, fn) {\n        if (Array.isArray(obj)) {\n            for (var i = 0; i < obj.length; i++) {\n                fn(obj[i]);\n            }\n        }\n        else {\n            var iterator = obj[getSymbolIterator()]();\n            var item = void 0;\n            while (!((item = iterator.next()).done)) {\n                fn(item.value);\n            }\n        }\n    }\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n\n    /** Called when directives inject each other (creating a circular dependency) */\n    /** Called when there are multiple component selectors that match a given node */\n    function throwMultipleComponentError(tNode) {\n        throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n    }\n    /** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\n    function throwErrorIfNoChangesMode(creationMode, oldValue, currValue) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** A special value which designates that a value has not changed. */\n    var NO_CHANGE = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO(misko): consider inlining\n    /** Updates binding and returns the value. */\n    function updateBinding(lView, bindingIndex, value) {\n        return lView[bindingIndex] = value;\n    }\n    /** Gets the current binding value. */\n    function getBinding(lView, bindingIndex) {\n        ngDevMode && assertDataInRange(lView, lView[bindingIndex]);\n        ngDevMode &&\n            assertNotEqual(lView[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n        return lView[bindingIndex];\n    }\n    /** Updates binding if changed, then returns whether it was updated. */\n    function bindingUpdated(lView, bindingIndex, value) {\n        ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n        ngDevMode &&\n            assertLessThan(bindingIndex, lView.length, \"Slot should have been initialized to NO_CHANGE\");\n        if (lView[bindingIndex] === NO_CHANGE) {\n            // initial pass\n            lView[bindingIndex] = value;\n        }\n        else if (isDifferent(lView[bindingIndex], value)) {\n            if (ngDevMode && getCheckNoChangesMode()) {\n                if (!devModeEqual(lView[bindingIndex], value)) {\n                    throwErrorIfNoChangesMode(isCreationMode(lView), lView[bindingIndex], value);\n                }\n            }\n            lView[bindingIndex] = value;\n        }\n        else {\n            return false;\n        }\n        return true;\n    }\n    /** Updates 2 bindings if changed, then returns whether either was updated. */\n    function bindingUpdated2(lView, bindingIndex, exp1, exp2) {\n        var different = bindingUpdated(lView, bindingIndex, exp1);\n        return bindingUpdated(lView, bindingIndex + 1, exp2) || different;\n    }\n    /** Updates 3 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated(lView, bindingIndex + 2, exp3) || different;\n    }\n    /** Updates 4 bindings if changed, then returns whether any was updated. */\n    function bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) {\n        var different = bindingUpdated2(lView, bindingIndex, exp1, exp2);\n        return bindingUpdated2(lView, bindingIndex + 2, exp3, exp4) || different;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // TODO: cleanup once the code is merged in angular/angular\n    var RendererStyleFlags3;\n    (function (RendererStyleFlags3) {\n        RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n        RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n    })(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n    /** Returns whether the `renderer` is a `ProceduralRenderer3` */\n    function isProceduralRenderer(renderer) {\n        return !!(renderer.listen);\n    }\n    var domRendererFactory3 = {\n        createRenderer: function (hostElement, rendererType) { return document; }\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /** Retrieves the parent element of a given node. */\n    function getParentNative(tNode, currentView) {\n        if (tNode.parent == null) {\n            return getHostNative(currentView);\n        }\n        else {\n            var parentTNode = getFirstParentNative(tNode);\n            return getNativeByTNode(parentTNode, currentView);\n        }\n    }\n    /**\n     * Get the first parent of a node that isn't an IcuContainer TNode\n     */\n    function getFirstParentNative(tNode) {\n        var parent = tNode.parent;\n        while (parent && parent.type === 5 /* IcuContainer */) {\n            parent = parent.parent;\n        }\n        return parent;\n    }\n    /**\n     * Gets the host element given a view. Will return null if the current view is an embedded view,\n     * which does not have a host element.\n     */\n    function getHostNative(currentView) {\n        var hostTNode = currentView[HOST_NODE];\n        return hostTNode && hostTNode.type !== 2 /* View */ ?\n            getNativeByTNode(hostTNode, currentView[PARENT]) :\n            null;\n    }\n    function getLContainer(tNode, embeddedView) {\n        if (tNode.index === -1) {\n            // This is a dynamically created view inside a dynamic container.\n            // If the host index is -1, the view has not yet been inserted, so it has no parent.\n            var containerHostIndex = embeddedView[CONTAINER_INDEX];\n            return containerHostIndex > -1 ? embeddedView[PARENT][containerHostIndex] : null;\n        }\n        else {\n            // This is a inline view node (e.g. embeddedViewStart)\n            return embeddedView[PARENT][tNode.parent.index];\n        }\n    }\n    /**\n     * Retrieves render parent for a given view.\n     * Might be null if a view is not yet attached to any container.\n     */\n    function getContainerRenderParent(tViewNode, view) {\n        var container = getLContainer(tViewNode, view);\n        return container ? container[RENDER_PARENT] : null;\n    }\n    /**\n     * Stack used to keep track of projection nodes in walkTNodeTree.\n     *\n     * This is deliberately created outside of walkTNodeTree to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack = [];\n    /**\n     * Walks a tree of TNodes, applying a transformation on the element nodes, either only on the first\n     * one found, or on all of them.\n     *\n     * @param viewToWalk the view to walk\n     * @param action identifies the action to be performed on the elements\n     * @param renderer the current renderer.\n     * @param renderParent Optional the render parent node to be set in all LContainers found,\n     * required for action modes Insert and Destroy.\n     * @param beforeNode Optional the node before which elements should be added, required for action\n     * Insert.\n     */\n    function walkTNodeTree(viewToWalk, action, renderer, renderParent, beforeNode) {\n        var rootTNode = viewToWalk[TVIEW].node;\n        var projectionNodeIndex = -1;\n        var currentView = viewToWalk;\n        var tNode = rootTNode.child;\n        while (tNode) {\n            var nextTNode = null;\n            if (tNode.type === 3 /* Element */) {\n                executeNodeAction(action, renderer, renderParent, getNativeByTNode(tNode, currentView), beforeNode);\n                var nodeOrContainer = currentView[tNode.index];\n                if (isLContainer(nodeOrContainer)) {\n                    // This element has an LContainer, and its comment needs to be handled\n                    executeNodeAction(action, renderer, renderParent, nodeOrContainer[NATIVE], beforeNode);\n                }\n            }\n            else if (tNode.type === 0 /* Container */) {\n                var lContainer = currentView[tNode.index];\n                executeNodeAction(action, renderer, renderParent, lContainer[NATIVE], beforeNode);\n                if (renderParent)\n                    lContainer[RENDER_PARENT] = renderParent;\n                if (lContainer[VIEWS].length) {\n                    currentView = lContainer[VIEWS][0];\n                    nextTNode = currentView[TVIEW].node;\n                    // When the walker enters a container, then the beforeNode has to become the local native\n                    // comment node.\n                    beforeNode = lContainer[NATIVE];\n                }\n            }\n            else if (tNode.type === 1 /* Projection */) {\n                var componentView = findComponentView(currentView);\n                var componentHost = componentView[HOST_NODE];\n                var head = componentHost.projection[tNode.projection];\n                // Must store both the TNode and the view because this projection node could be nested\n                // deeply inside embedded views, and we need to get back down to this particular nested view.\n                projectionNodeStack[++projectionNodeIndex] = tNode;\n                projectionNodeStack[++projectionNodeIndex] = currentView;\n                if (head) {\n                    currentView = componentView[PARENT];\n                    nextTNode = currentView[TVIEW].data[head.index];\n                }\n            }\n            else {\n                // Otherwise, this is a View or an ElementContainer\n                nextTNode = tNode.child;\n            }\n            if (nextTNode === null) {\n                // this last node was projected, we need to get back down to its projection node\n                if (tNode.next === null && (tNode.flags & 2 /* isProjected */)) {\n                    currentView = projectionNodeStack[projectionNodeIndex--];\n                    tNode = projectionNodeStack[projectionNodeIndex--];\n                }\n                nextTNode = tNode.next;\n                /**\n                 * Find the next node in the TNode tree, taking into account the place where a node is\n                 * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n                 *\n                 * If there is no sibling node, then it goes to the next sibling of the parent node...\n                 * until it reaches rootNode (at which point null is returned).\n                 */\n                while (!nextTNode) {\n                    // If parent is null, we're crossing the view boundary, so we should get the host TNode.\n                    tNode = tNode.parent || currentView[TVIEW].node;\n                    if (tNode === null || tNode === rootTNode)\n                        return null;\n                    // When exiting a container, the beforeNode must be restored to the previous value\n                    if (tNode.type === 0 /* Container */) {\n                        currentView = currentView[PARENT];\n                        beforeNode = currentView[tNode.index][NATIVE];\n                    }\n                    if (tNode.type === 2 /* View */ && currentView[NEXT]) {\n                        currentView = currentView[NEXT];\n                        nextTNode = currentView[TVIEW].node;\n                    }\n                    else {\n                        nextTNode = tNode.next;\n                    }\n                }\n            }\n            tNode = nextTNode;\n        }\n    }\n    /**\n     * NOTE: for performance reasons, the possible actions are inlined within the function instead of\n     * being passed as an argument.\n     */\n    function executeNodeAction(action, renderer, parent, node, beforeNode) {\n        if (action === 0 /* Insert */) {\n            isProceduralRenderer(renderer) ?\n                renderer.insertBefore(parent, node, beforeNode) :\n                parent.insertBefore(node, beforeNode, true);\n        }\n        else if (action === 1 /* Detach */) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeChild(parent, node) :\n                parent.removeChild(node);\n        }\n        else if (action === 2 /* Destroy */) {\n            ngDevMode && ngDevMode.rendererDestroyNode++;\n            renderer.destroyNode(node);\n        }\n    }\n    function createTextNode(value, renderer) {\n        return isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n    }\n    function addRemoveViewFromContainer(viewToWalk, insertMode, beforeNode) {\n        var renderParent = getContainerRenderParent(viewToWalk[TVIEW].node, viewToWalk);\n        ngDevMode && assertNodeType(viewToWalk[TVIEW].node, 2 /* View */);\n        if (renderParent) {\n            var renderer = viewToWalk[RENDERER];\n            walkTNodeTree(viewToWalk, insertMode ? 0 /* Insert */ : 1 /* Detach */, renderer, renderParent, beforeNode);\n        }\n    }\n    /**\n     * Traverses down and up the tree of views and containers to remove listeners and\n     * call onDestroy callbacks.\n     *\n     * Notes:\n     *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n     *  - Must process containers instead of their views to avoid splicing\n     *  when views are destroyed and re-added.\n     *  - Using a while loop because it's faster than recursion\n     *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n     *\n     *  @param rootView The view to destroy\n     */\n    function destroyViewTree(rootView) {\n        // If the view has no children, we can clean it up and return early.\n        if (rootView[TVIEW].childIndex === -1) {\n            return cleanUpView(rootView);\n        }\n        var viewOrContainer = getLViewChild(rootView);\n        while (viewOrContainer) {\n            var next = null;\n            if (viewOrContainer.length >= HEADER_OFFSET) {\n                // If LView, traverse down to child.\n                var view = viewOrContainer;\n                if (view[TVIEW].childIndex > -1)\n                    next = getLViewChild(view);\n            }\n            else {\n                // If container, traverse down to its first LView.\n                var container = viewOrContainer;\n                if (container[VIEWS].length)\n                    next = container[VIEWS][0];\n            }\n            if (next == null) {\n                // Only clean up view when moving to the side or up, as destroy hooks\n                // should be called in order from the bottom up.\n                while (viewOrContainer && !viewOrContainer[NEXT] && viewOrContainer !== rootView) {\n                    cleanUpView(viewOrContainer);\n                    viewOrContainer = getParentState(viewOrContainer, rootView);\n                }\n                cleanUpView(viewOrContainer || rootView);\n                next = viewOrContainer && viewOrContainer[NEXT];\n            }\n            viewOrContainer = next;\n        }\n    }\n    /**\n     * Inserts a view into a container.\n     *\n     * This adds the view to the container's array of active views in the correct\n     * position. It also adds the view's elements to the DOM if the container isn't a\n     * root node of another view (in that case, the view's elements will be added when\n     * the container's parent view is added later).\n     *\n     * @param lView The view to insert\n     * @param lContainer The container into which the view should be inserted\n     * @param parentView The new parent of the inserted view\n     * @param index The index at which to insert the view\n     * @param containerIndex The index of the container node, if dynamic\n     */\n    function insertView(lView, lContainer, parentView, index, containerIndex) {\n        var views = lContainer[VIEWS];\n        if (index > 0) {\n            // This is a new view, we need to add it to the children.\n            views[index - 1][NEXT] = lView;\n        }\n        if (index < views.length) {\n            lView[NEXT] = views[index];\n            views.splice(index, 0, lView);\n        }\n        else {\n            views.push(lView);\n            lView[NEXT] = null;\n        }\n        // Dynamically inserted views need a reference to their parent container's host so it's\n        // possible to jump from a view to its container's next when walking the node tree.\n        if (containerIndex > -1) {\n            lView[CONTAINER_INDEX] = containerIndex;\n            lView[PARENT] = parentView;\n        }\n        // Notify query that a new view has been added\n        if (lView[QUERIES]) {\n            lView[QUERIES].insertView(index);\n        }\n        // Sets the attached flag\n        lView[FLAGS] |= 16 /* Attached */;\n    }\n    /**\n     * Detaches a view from a container.\n     *\n     * This method splices the view from the container's array of active views. It also\n     * removes the view's elements from the DOM.\n     *\n     * @param lContainer The container from which to detach a view\n     * @param removeIndex The index of the view to detach\n     * @param detached Whether or not this view is already detached.\n     * @returns Detached LView instance.\n     */\n    function detachView(lContainer, removeIndex, detached) {\n        var views = lContainer[VIEWS];\n        var viewToDetach = views[removeIndex];\n        if (removeIndex > 0) {\n            views[removeIndex - 1][NEXT] = viewToDetach[NEXT];\n        }\n        views.splice(removeIndex, 1);\n        if (!detached) {\n            addRemoveViewFromContainer(viewToDetach, false);\n        }\n        if (viewToDetach[QUERIES]) {\n            viewToDetach[QUERIES].removeView();\n        }\n        viewToDetach[CONTAINER_INDEX] = -1;\n        viewToDetach[PARENT] = null;\n        // Unsets the attached flag\n        viewToDetach[FLAGS] &= ~16 /* Attached */;\n        return viewToDetach;\n    }\n    /**\n     * Removes a view from a container, i.e. detaches it and then destroys the underlying LView.\n     *\n     * @param lContainer The container from which to remove a view\n     * @param tContainer The TContainer node associated with the LContainer\n     * @param removeIndex The index of the view to remove\n     */\n    function removeView(lContainer, containerHost, removeIndex) {\n        var view = lContainer[VIEWS][removeIndex];\n        detachView(lContainer, removeIndex, !!containerHost.detached);\n        destroyLView(view);\n    }\n    /** Gets the child of the given LView */\n    function getLViewChild(lView) {\n        var childIndex = lView[TVIEW].childIndex;\n        return childIndex === -1 ? null : lView[childIndex];\n    }\n    /**\n     * A standalone function which destroys an LView,\n     * conducting cleanup (e.g. removing listeners, calling onDestroys).\n     *\n     * @param view The view to be destroyed.\n     */\n    function destroyLView(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer) && renderer.destroyNode) {\n            walkTNodeTree(view, 2 /* Destroy */, renderer, null);\n        }\n        destroyViewTree(view);\n        // Sets the destroyed flag\n        view[FLAGS] |= 64 /* Destroyed */;\n    }\n    /**\n     * Determines which LViewOrLContainer to jump to when traversing back up the\n     * tree in destroyViewTree.\n     *\n     * Normally, the view's parent LView should be checked, but in the case of\n     * embedded views, the container (which is the view node's parent, but not the\n     * LView's parent) needs to be checked for a possible next property.\n     *\n     * @param state The LViewOrLContainer for which we need a parent state\n     * @param rootView The rootView, so we don't propagate too far up the view tree\n     * @returns The correct parent LViewOrLContainer\n     */\n    function getParentState(state, rootView) {\n        var tNode;\n        if (state.length >= HEADER_OFFSET && (tNode = state[HOST_NODE]) &&\n            tNode.type === 2 /* View */) {\n            // if it's an embedded view, the state needs to go up to the container, in case the\n            // container has a next\n            return getLContainer(tNode, state);\n        }\n        else {\n            // otherwise, use parent view for containers or component views\n            return state[PARENT] === rootView ? null : state[PARENT];\n        }\n    }\n    /**\n     * Calls onDestroys hooks for all directives and pipes in a given view and then removes all\n     * listeners. Listeners are removed as the last step so events delivered in the onDestroys hooks\n     * can be propagated to @Output listeners.\n     *\n     * @param view The LView to clean up\n     */\n    function cleanUpView(viewOrContainer) {\n        if (viewOrContainer.length >= HEADER_OFFSET) {\n            var view = viewOrContainer;\n            executeOnDestroys(view);\n            executePipeOnDestroys(view);\n            removeListeners(view);\n            var hostTNode = view[HOST_NODE];\n            // For component views only, the local renderer is destroyed as clean up time.\n            if (hostTNode && hostTNode.type === 3 /* Element */ && isProceduralRenderer(view[RENDERER])) {\n                ngDevMode && ngDevMode.rendererDestroy++;\n                view[RENDERER].destroy();\n            }\n        }\n    }\n    /** Removes listeners and unsubscribes from output subscriptions */\n    function removeListeners(lView) {\n        var tCleanup = lView[TVIEW].cleanup;\n        if (tCleanup != null) {\n            var lCleanup = lView[CLEANUP];\n            for (var i = 0; i < tCleanup.length - 1; i += 2) {\n                if (typeof tCleanup[i] === 'string') {\n                    // This is a listener with the native renderer\n                    var idx = tCleanup[i + 1];\n                    var listener = lCleanup[tCleanup[i + 2]];\n                    var native = readElementValue(lView[idx]);\n                    var useCaptureOrSubIdx = tCleanup[i + 3];\n                    if (typeof useCaptureOrSubIdx === 'boolean') {\n                        // DOM listener\n                        native.removeEventListener(tCleanup[i], listener, useCaptureOrSubIdx);\n                    }\n                    else {\n                        if (useCaptureOrSubIdx >= 0) {\n                            // unregister\n                            lCleanup[useCaptureOrSubIdx]();\n                        }\n                        else {\n                            // Subscription\n                            lCleanup[-useCaptureOrSubIdx].unsubscribe();\n                        }\n                    }\n                    i += 2;\n                }\n                else if (typeof tCleanup[i] === 'number') {\n                    // This is a listener with renderer2 (cleanup fn can be found by index)\n                    var cleanupFn = lCleanup[tCleanup[i]];\n                    cleanupFn();\n                }\n                else {\n                    // This is a cleanup function that is grouped with the index of its context\n                    var context = lCleanup[tCleanup[i + 1]];\n                    tCleanup[i].call(context);\n                }\n            }\n            lView[CLEANUP] = null;\n        }\n    }\n    /** Calls onDestroy hooks for this view */\n    function executeOnDestroys(view) {\n        var tView = view[TVIEW];\n        var destroyHooks;\n        if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n            callHooks(view, destroyHooks);\n        }\n    }\n    /** Calls pipe destroy hooks for this view */\n    function executePipeOnDestroys(lView) {\n        var pipeDestroyHooks = lView[TVIEW] && lView[TVIEW].pipeDestroyHooks;\n        if (pipeDestroyHooks) {\n            callHooks(lView, pipeDestroyHooks);\n        }\n    }\n    function getRenderParent(tNode, currentView) {\n        if (canInsertNativeNode(tNode, currentView)) {\n            // If we are asked for a render parent of the root component we need to do low-level DOM\n            // operation as LTree doesn't exist above the topmost host node. We might need to find a render\n            // parent of the topmost host node if the root component injects ViewContainerRef.\n            if (isRootView(currentView)) {\n                return nativeParentNode(currentView[RENDERER], getNativeByTNode(tNode, currentView));\n            }\n            var hostTNode = currentView[HOST_NODE];\n            var tNodeParent = tNode.parent;\n            if (tNodeParent != null && tNodeParent.type === 4 /* ElementContainer */) {\n                tNode = getHighestElementContainer(tNodeParent);\n            }\n            return tNode.parent == null && hostTNode.type === 2 /* View */ ?\n                getContainerRenderParent(hostTNode, currentView) :\n                getParentNative(tNode, currentView);\n        }\n        return null;\n    }\n    function canInsertNativeChildOfElement(tNode) {\n        // If the parent is null, then we are inserting across views. This happens when we\n        // insert a root element of the component view into the component host element and it\n        // should always be eager.\n        if (tNode.parent == null ||\n            // We should also eagerly insert if the parent is a regular, non-component element\n            // since we know that this relationship will never be broken.\n            tNode.parent.type === 3 /* Element */ && !(tNode.parent.flags & 1 /* isComponent */)) {\n            return true;\n        }\n        // Parent is a Component. Component's content nodes are not inserted immediately\n        // because they will be projected, and so doing insert at this point would be wasteful.\n        // Since the projection would than move it to its final destination.\n        return false;\n    }\n    /**\n     * We might delay insertion of children for a given view if it is disconnected.\n     * This might happen for 2 main reasons:\n     * - view is not inserted into any container (view was created but not inserted yet)\n     * - view is inserted into a container but the container itself is not inserted into the DOM\n     * (container might be part of projection or child of a view that is not inserted yet).\n     *\n     * In other words we can insert children of a given view if this view was inserted into a container\n     * and\n     * the container itself has its render parent determined.\n     */\n    function canInsertNativeChildOfView(viewTNode, view) {\n        // Because we are inserting into a `View` the `View` may be disconnected.\n        var container = getLContainer(viewTNode, view);\n        if (container == null || container[RENDER_PARENT] == null) {\n            // The `View` is not inserted into a `Container` or the parent `Container`\n            // itself is disconnected. So we have to delay.\n            return false;\n        }\n        // The parent `Container` is in inserted state, so we can eagerly insert into\n        // this location.\n        return true;\n    }\n    /**\n     * Returns whether a native element can be inserted into the given parent.\n     *\n     * There are two reasons why we may not be able to insert a element immediately.\n     * - Projection: When creating a child content element of a component, we have to skip the\n     *   insertion because the content of a component will be projected.\n     *   `<component><content>delayed due to projection</content></component>`\n     * - Parent container is disconnected: This can happen when we are inserting a view into\n     *   parent container, which itself is disconnected. For example the parent container is part\n     *   of a View which has not be inserted or is mare for projection but has not been inserted\n     *   into destination.\n     *\n\n     *\n     * @param tNode The tNode of the node that we want to insert.\n     * @param currentView Current LView being processed.\n     * @return boolean Whether the node should be inserted now (or delayed until later).\n     */\n    function canInsertNativeNode(tNode, currentView) {\n        var currentNode = tNode;\n        var parent = tNode.parent;\n        if (tNode.parent) {\n            if (tNode.parent.type === 4 /* ElementContainer */) {\n                currentNode = getHighestElementContainer(tNode);\n                parent = currentNode.parent;\n            }\n            else if (tNode.parent.type === 5 /* IcuContainer */) {\n                currentNode = getFirstParentNative(currentNode);\n                parent = currentNode.parent;\n            }\n        }\n        if (parent === null)\n            parent = currentView[HOST_NODE];\n        if (parent && parent.type === 2 /* View */) {\n            return canInsertNativeChildOfView(parent, currentView);\n        }\n        else {\n            // Parent is a regular element or a component\n            return canInsertNativeChildOfElement(currentNode);\n        }\n    }\n    /**\n     * Inserts a native node before another native node for a given parent using {@link Renderer3}.\n     * This is a utility function that can be used when native nodes were determined - it abstracts an\n     * actual renderer being used.\n     */\n    function nativeInsertBefore(renderer, parent, child, beforeNode) {\n        if (isProceduralRenderer(renderer)) {\n            renderer.insertBefore(parent, child, beforeNode);\n        }\n        else {\n            parent.insertBefore(child, beforeNode, true);\n        }\n    }\n    /**\n     * Returns a native parent of a given native node.\n     */\n    function nativeParentNode(renderer, node) {\n        return (isProceduralRenderer(renderer) ? renderer.parentNode(node) : node.parentNode);\n    }\n    /**\n     * Returns a native sibling of a given native node.\n     */\n    function nativeNextSibling(renderer, node) {\n        return isProceduralRenderer(renderer) ? renderer.nextSibling(node) : node.nextSibling;\n    }\n    /**\n     * Appends the `child` element to the `parent`.\n     *\n     * The element insertion might be delayed {@link canInsertNativeNode}.\n     *\n     * @param childEl The child that should be appended\n     * @param childTNode The TNode of the child element\n     * @param currentView The current LView\n     * @returns Whether or not the child was appended\n     */\n    function appendChild(childEl, childTNode, currentView) {\n        if (childEl === void 0) { childEl = null; }\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var renderer = currentView[RENDERER];\n            var parentEl = getParentNative(childTNode, currentView);\n            var parentTNode = childTNode.parent || currentView[HOST_NODE];\n            if (parentTNode.type === 2 /* View */) {\n                var lContainer = getLContainer(parentTNode, currentView);\n                var views = lContainer[VIEWS];\n                var index = views.indexOf(currentView);\n                nativeInsertBefore(renderer, lContainer[RENDER_PARENT], childEl, getBeforeNodeForView(index, views, lContainer[NATIVE]));\n            }\n            else if (parentTNode.type === 4 /* ElementContainer */) {\n                var renderParent = getRenderParent(childTNode, currentView);\n                nativeInsertBefore(renderer, renderParent, childEl, parentEl);\n            }\n            else if (parentTNode.type === 5 /* IcuContainer */) {\n                var icuAnchorNode = getNativeByTNode(childTNode.parent, currentView);\n                nativeInsertBefore(renderer, parentEl, childEl, icuAnchorNode);\n            }\n            else {\n                isProceduralRenderer(renderer) ? renderer.appendChild(parentEl, childEl) :\n                    parentEl.appendChild(childEl);\n            }\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Gets the top-level ng-container if ng-containers are nested.\n     *\n     * @param ngContainer The TNode of the starting ng-container\n     * @returns tNode The TNode of the highest level ng-container\n     */\n    function getHighestElementContainer(ngContainer) {\n        while (ngContainer.parent != null && ngContainer.parent.type === 4 /* ElementContainer */) {\n            ngContainer = ngContainer.parent;\n        }\n        return ngContainer;\n    }\n    function getBeforeNodeForView(index, views, containerNative) {\n        if (index + 1 < views.length) {\n            var view = views[index + 1];\n            var viewTNode = view[HOST_NODE];\n            return viewTNode.child ? getNativeByTNode(viewTNode.child, view) : containerNative;\n        }\n        else {\n            return containerNative;\n        }\n    }\n    /**\n     * Removes the `child` element from the DOM if not in view and not projected.\n     *\n     * @param childTNode The TNode of the child to remove\n     * @param childEl The child that should be removed\n     * @param currentView The current LView\n     * @returns Whether or not the child was removed\n     */\n    function removeChild(childTNode, childEl, currentView) {\n        // We only remove the element if not in View or not projected.\n        if (childEl !== null && canInsertNativeNode(childTNode, currentView)) {\n            var parentNative = getParentNative(childTNode, currentView);\n            var renderer = currentView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.removeChild(parentNative, childEl) :\n                parentNative.removeChild(childEl);\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Appends a projected node to the DOM, or in the case of a projected container,\n     * appends the nodes from all of the container's active views to the DOM.\n     *\n     * @param projectedTNode The TNode to be projected\n     * @param tProjectionNode The projection (ng-content) TNode\n     * @param currentView Current LView\n     * @param projectionView Projection view (view above current)\n     */\n    function appendProjectedNode(projectedTNode, tProjectionNode, currentView, projectionView) {\n        var native = getNativeByTNode(projectedTNode, projectionView);\n        appendChild(native, tProjectionNode, currentView);\n        // the projected contents are processed while in the shadow view (which is the currentView)\n        // therefore we need to extract the view where the host element lives since it's the\n        // logical container of the content projected views\n        attachPatchData(native, projectionView);\n        var renderParent = getRenderParent(tProjectionNode, currentView);\n        var nodeOrContainer = projectionView[projectedTNode.index];\n        if (projectedTNode.type === 0 /* Container */) {\n            // The node we are adding is a container and we are adding it to an element which\n            // is not a component (no more re-projection).\n            // Alternatively a container is projected at the root of a component's template\n            // and can't be re-projected (as not content of any component).\n            // Assign the final projection location in those cases.\n            nodeOrContainer[RENDER_PARENT] = renderParent;\n            var views = nodeOrContainer[VIEWS];\n            for (var i = 0; i < views.length; i++) {\n                addRemoveViewFromContainer(views[i], true, nodeOrContainer[NATIVE]);\n            }\n        }\n        else {\n            if (projectedTNode.type === 4 /* ElementContainer */) {\n                var ngContainerChildTNode = projectedTNode.child;\n                while (ngContainerChildTNode) {\n                    appendProjectedNode(ngContainerChildTNode, tProjectionNode, currentView, projectionView);\n                    ngContainerChildTNode = ngContainerChildTNode.next;\n                }\n            }\n            if (isLContainer(nodeOrContainer)) {\n                nodeOrContainer[RENDER_PARENT] = renderParent;\n                appendChild(nodeOrContainer[NATIVE], tProjectionNode, currentView);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NG_TEMPLATE_SELECTOR = 'ng-template';\n    function isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n        var nodeClassesLen = nodeClassAttrVal.length;\n        var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n        var matchEndIdx = matchIndex + cssClassToMatch.length;\n        if (matchIndex === -1 // no match\n            || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n            ||\n                (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) // no space after\n         {\n            return false;\n        }\n        return true;\n    }\n    /**\n     * Function that checks whether a given tNode matches tag-based selector and has a valid type.\n     *\n     * Matching can be perfomed in 2 modes: projection mode (when we project nodes) and regular\n     * directive matching mode. In \"projection\" mode, we do not need to check types, so if tag name\n     * matches selector, we declare a match. In \"directive matching\" mode, we also check whether tNode\n     * is of expected type:\n     * - whether tNode has either Element or ElementContainer type\n     * - or if we want to match \"ng-template\" tag, we check for Container type\n     */\n    function hasTagAndTypeMatch(tNode, currentSelector, isProjectionMode) {\n        return currentSelector === tNode.tagName &&\n            (isProjectionMode ||\n                (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) ||\n                (tNode.type === 0 /* Container */ && currentSelector === NG_TEMPLATE_SELECTOR));\n    }\n    /**\n     * A utility function to match an Ivy node static data against a simple CSS selector\n     *\n     * @param node static data to match\n     * @param selector\n     * @returns true if node matches the selector.\n     */\n    function isNodeMatchingSelector(tNode, selector, isProjectionMode) {\n        ngDevMode && assertDefined(selector[0], 'Selector should have a tag name');\n        var mode = 4 /* ELEMENT */;\n        var nodeAttrs = tNode.attrs;\n        var selectOnlyMarkerIdx = nodeAttrs ? nodeAttrs.indexOf(3 /* SelectOnly */) : -1;\n        // When processing \":not\" selectors, we skip to the next \":not\" if the\n        // current one doesn't match\n        var skipToNextSelector = false;\n        for (var i = 0; i < selector.length; i++) {\n            var current = selector[i];\n            if (typeof current === 'number') {\n                // If we finish processing a :not selector and it hasn't failed, return false\n                if (!skipToNextSelector && !isPositive(mode) && !isPositive(current)) {\n                    return false;\n                }\n                // If we are skipping to the next :not() and this mode flag is positive,\n                // it's a part of the current :not() selector, and we should keep skipping\n                if (skipToNextSelector && isPositive(current))\n                    continue;\n                skipToNextSelector = false;\n                mode = current | (mode & 1 /* NOT */);\n                continue;\n            }\n            if (skipToNextSelector)\n                continue;\n            if (mode & 4 /* ELEMENT */) {\n                mode = 2 /* ATTRIBUTE */ | mode & 1 /* NOT */;\n                if (current !== '' && !hasTagAndTypeMatch(tNode, current, isProjectionMode) ||\n                    current === '' && selector.length === 1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                }\n            }\n            else {\n                var attrName = mode & 8 /* CLASS */ ? 'class' : current;\n                var attrIndexInNode = findAttrIndexInNode(attrName, nodeAttrs);\n                if (attrIndexInNode === -1) {\n                    if (isPositive(mode))\n                        return false;\n                    skipToNextSelector = true;\n                    continue;\n                }\n                var selectorAttrValue = mode & 8 /* CLASS */ ? current : selector[++i];\n                if (selectorAttrValue !== '') {\n                    var nodeAttrValue = void 0;\n                    var maybeAttrName = nodeAttrs[attrIndexInNode];\n                    if (selectOnlyMarkerIdx > -1 && attrIndexInNode > selectOnlyMarkerIdx) {\n                        nodeAttrValue = '';\n                    }\n                    else {\n                        ngDevMode && assertNotEqual(maybeAttrName, 0 /* NamespaceURI */, 'We do not match directives on namespaced attributes');\n                        nodeAttrValue = nodeAttrs[attrIndexInNode + 1];\n                    }\n                    if (mode & 8 /* CLASS */ &&\n                        !isCssClassMatching(nodeAttrValue, selectorAttrValue) ||\n                        mode & 2 /* ATTRIBUTE */ && selectorAttrValue !== nodeAttrValue) {\n                        if (isPositive(mode))\n                            return false;\n                        skipToNextSelector = true;\n                    }\n                }\n            }\n        }\n        return isPositive(mode) || skipToNextSelector;\n    }\n    function isPositive(mode) {\n        return (mode & 1 /* NOT */) === 0;\n    }\n    /**\n     * Examines an attributes definition array from a node to find the index of the\n     * attribute with the specified name.\n     *\n     * NOTE: Will not find namespaced attributes.\n     *\n     * @param name the name of the attribute to find\n     * @param attrs the attribute array to examine\n     */\n    function findAttrIndexInNode(name, attrs) {\n        if (attrs === null)\n            return -1;\n        var selectOnlyMode = false;\n        var i = 0;\n        while (i < attrs.length) {\n            var maybeAttrName = attrs[i];\n            if (maybeAttrName === name) {\n                return i;\n            }\n            else if (maybeAttrName === 0 /* NamespaceURI */) {\n                // NOTE(benlesh): will not find namespaced attributes. This is by design.\n                i += 4;\n            }\n            else {\n                if (maybeAttrName === 3 /* SelectOnly */) {\n                    selectOnlyMode = true;\n                }\n                i += selectOnlyMode ? 1 : 2;\n            }\n        }\n        return -1;\n    }\n    function isNodeMatchingSelectorList(tNode, selector, isProjectionMode) {\n        if (isProjectionMode === void 0) { isProjectionMode = false; }\n        for (var i = 0; i < selector.length; i++) {\n            if (isNodeMatchingSelector(tNode, selector[i], isProjectionMode)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    function getProjectAsAttrValue(tNode) {\n        var nodeAttrs = tNode.attrs;\n        if (nodeAttrs != null) {\n            var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n            // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n            // (attribute names are stored at even indexes)\n            if ((ngProjectAsAttrIdx & 1) === 0) {\n                return nodeAttrs[ngProjectAsAttrIdx + 1];\n            }\n        }\n        return null;\n    }\n    /**\n     * Checks a given node against matching selectors and returns\n     * selector index (or 0 if none matched).\n     *\n     * This function takes into account the ngProjectAs attribute: if present its value will be compared\n     * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n     */\n    function matchingSelectorIndex(tNode, selectors, textSelectors) {\n        var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n        for (var i = 0; i < selectors.length; i++) {\n            // if a node has the ngProjectAs attribute match it against unparsed selector\n            // match a node against a parsed selector only if ngProjectAs attribute is not present\n            if (ngProjectAsAttrVal === textSelectors[i] ||\n                ngProjectAsAttrVal === null &&\n                    isNodeMatchingSelectorList(tNode, selectors[i], /* isProjectionMode */ true)) {\n                return i + 1; // first matching selector \"captures\" a given node\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * Combines the binding value and a factory for an animation player.\n     *\n     * Used to bind a player to an element template binding (currently only\n     * `[style]`, `[style.prop]`, `[class]` and `[class.name]` bindings\n     * supported). The provided `factoryFn` function will be run once all\n     * the associated bindings have been evaluated on the element and is\n     * designed to return a player which will then be placed on the element.\n     *\n     * @param factoryFn The function that is used to create a player\n     *   once all the rendering-related (styling values) have been\n     *   processed for the element binding.\n     * @param value The raw value that will be exposed to the binding\n     *   so that the binding can update its internal values when\n     *   any changes are evaluated.\n     */\n    function bindPlayerFactory(factoryFn, value) {\n        return new BoundPlayerFactory(factoryFn, value);\n    }\n    var BoundPlayerFactory = /** @class */ (function () {\n        function BoundPlayerFactory(fn, value) {\n            this.fn = fn;\n            this.value = value;\n        }\n        return BoundPlayerFactory;\n    }());\n\n    var CorePlayerHandler = /** @class */ (function () {\n        function CorePlayerHandler() {\n            this._players = [];\n        }\n        CorePlayerHandler.prototype.flushPlayers = function () {\n            for (var i = 0; i < this._players.length; i++) {\n                var player = this._players[i];\n                if (!player.parent && player.state === 0 /* Pending */) {\n                    player.play();\n                }\n            }\n            this._players.length = 0;\n        };\n        CorePlayerHandler.prototype.queuePlayer = function (player) { this._players.push(player); };\n        return CorePlayerHandler;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ANIMATION_PROP_PREFIX = '@';\n    function createEmptyStylingContext(element, sanitizer, initialStyles, initialClasses) {\n        return [\n            0,\n            [null, -1, false, sanitizer || null],\n            initialStyles || [null],\n            initialClasses || [null],\n            [0, 0],\n            element || null,\n            null,\n            null,\n            null,\n        ];\n    }\n    /**\n     * Used clone a copy of a pre-computed template of a styling context.\n     *\n     * A pre-computed template is designed to be computed once for a given element\n     * (instructions.ts has logic for caching this).\n     */\n    function allocStylingContext(element, templateStyleContext) {\n        // each instance gets a copy\n        var context = templateStyleContext.slice();\n        context[5 /* ElementPosition */] = element;\n        // this will prevent any other directives from extending the context\n        context[0 /* MasterFlagPosition */] |= 32 /* BindingAllocationLocked */;\n        return context;\n    }\n    /**\n     * Retrieve the `StylingContext` at a given index.\n     *\n     * This method lazily creates the `StylingContext`. This is because in most cases\n     * we have styling without any bindings. Creating `StylingContext` eagerly would mean that\n     * every style declaration such as `<div style=\"color: red\">` would result `StyleContext`\n     * which would create unnecessary memory pressure.\n     *\n     * @param index Index of the style allocation. See: `elementStyling`.\n     * @param viewData The view to search for the styling context\n     */\n    function getStylingContext(index, viewData) {\n        var storageIndex = index;\n        var slotValue = viewData[storageIndex];\n        var wrapper = viewData;\n        while (Array.isArray(slotValue)) {\n            wrapper = slotValue;\n            slotValue = slotValue[HOST];\n        }\n        if (isStylingContext(wrapper)) {\n            return wrapper;\n        }\n        else {\n            // This is an LView or an LContainer\n            var stylingTemplate = getTNode(index - HEADER_OFFSET, viewData).stylingTemplate;\n            if (wrapper !== viewData) {\n                storageIndex = HOST;\n            }\n            return wrapper[storageIndex] = stylingTemplate ?\n                allocStylingContext(slotValue, stylingTemplate) :\n                createEmptyStylingContext(slotValue);\n        }\n    }\n    function isStylingContext(value) {\n        // Not an LView or an LContainer\n        return Array.isArray(value) && typeof value[0 /* MasterFlagPosition */] === 'number' &&\n            Array.isArray(value[2 /* InitialStyleValuesPosition */]);\n    }\n    function isAnimationProp(name) {\n        return name[0] === ANIMATION_PROP_PREFIX;\n    }\n    function addPlayerInternal(playerContext, rootContext, element, player, playerContextIndex, ref) {\n        ref = ref || element;\n        if (playerContextIndex) {\n            playerContext[playerContextIndex] = player;\n        }\n        else {\n            playerContext.push(player);\n        }\n        if (player) {\n            player.addEventListener(200 /* Destroyed */, function () {\n                var index = playerContext.indexOf(player);\n                var nonFactoryPlayerIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                // if the player is being removed from the factory side of the context\n                // (which is where the [style] and [class] bindings do their thing) then\n                // that side of the array cannot be resized since the respective bindings\n                // have pointer index values that point to the associated factory instance\n                if (index) {\n                    if (index < nonFactoryPlayerIndex) {\n                        playerContext[index] = null;\n                    }\n                    else {\n                        playerContext.splice(index, 1);\n                    }\n                }\n                player.destroy();\n            });\n            var playerHandler = rootContext.playerHandler || (rootContext.playerHandler = new CorePlayerHandler());\n            playerHandler.queuePlayer(player, ref);\n            return true;\n        }\n        return false;\n    }\n    function getPlayersInternal(playerContext) {\n        var players = [];\n        var nonFactoryPlayersStart = playerContext[0 /* NonBuilderPlayersStart */];\n        // add all factory-based players (which are apart of [style] and [class] bindings)\n        for (var i = 1 /* PlayerBuildersStartPosition */ + 1 /* PlayerOffsetPosition */; i < nonFactoryPlayersStart; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n            var player = playerContext[i];\n            if (player) {\n                players.push(player);\n            }\n        }\n        // add all custom players (not apart of [style] and [class] bindings)\n        for (var i = nonFactoryPlayersStart; i < playerContext.length; i++) {\n            players.push(playerContext[i]);\n        }\n        return players;\n    }\n    function getOrCreatePlayerContext(target, context) {\n        context = context || getLContext(target);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return null;\n        }\n        var lView = context.lView, nodeIndex = context.nodeIndex;\n        var stylingContext = getStylingContext(nodeIndex, lView);\n        return getPlayerContext(stylingContext) || allocPlayerContext(stylingContext);\n    }\n    function getPlayerContext(stylingContext) {\n        return stylingContext[8 /* PlayerContext */];\n    }\n    function allocPlayerContext(data) {\n        return data[8 /* PlayerContext */] =\n            [5 /* SinglePlayerBuildersStartPosition */, null, null, null, null];\n    }\n    function throwInvalidRefError() {\n        throw new Error('Only elements that exist in an Angular application can be used for animations');\n    }\n    function hasStyling(attrs) {\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (attr == 1 /* Classes */ || attr == 2 /* Styles */)\n                return true;\n        }\n        return false;\n    }\n    function hasClassInput(tNode) {\n        return tNode.flags & 8 /* hasClassInput */ ? true : false;\n    }\n\n    /**\n     * This file includes the code to power all styling-binding operations in Angular.\n     *\n     * These include:\n     * [style]=\"myStyleObj\"\n     * [class]=\"myClassObj\"\n     * [style.prop]=\"myPropValue\"\n     * [class.name]=\"myClassValue\"\n     *\n     * There are many different ways in which these functions below are called. Please see\n     * `interfaces/styles.ts` to get a better idea of how the styling algorithm works.\n     */\n    /**\n     * Creates a new StylingContext an fills it with the provided static styling attribute values.\n     */\n    function initializeStaticContext(attrs) {\n        var context = createEmptyStylingContext();\n        var initialClasses = context[3 /* InitialClassValuesPosition */] =\n            [null];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */] =\n            [null];\n        // The attributes array has marker values (numbers) indicating what the subsequent\n        // values represent. When we encounter a number, we set the mode to that type of attribute.\n        var mode = -1;\n        for (var i = 0; i < attrs.length; i++) {\n            var attr = attrs[i];\n            if (typeof attr == 'number') {\n                mode = attr;\n            }\n            else if (mode === 2 /* Styles */) {\n                initialStyles.push(attr, attrs[++i]);\n            }\n            else if (mode === 1 /* Classes */) {\n                initialClasses.push(attr, true);\n            }\n            else if (mode === 3 /* SelectOnly */) {\n                break;\n            }\n        }\n        return context;\n    }\n    /**\n     * Designed to update an existing styling context with new static styling\n     * data (classes and styles).\n     *\n     * @param context the existing styling context\n     * @param attrs an array of new static styling attributes that will be\n     *              assigned to the context\n     * @param directive the directive instance with which static data is associated with.\n     */\n    function patchContextWithStaticAttrs(context, attrs, directive) {\n        // If the styling context has already been patched with the given directive's bindings,\n        // then there is no point in doing it again. The reason why this may happen (the directive\n        // styling being patched twice) is because the `stylingBinding` function is called each time\n        // an element is created (both within a template function and within directive host bindings).\n        var directives = context[1 /* DirectiveRegistryPosition */];\n        if (getDirectiveRegistryValuesIndexOf(directives, directive) == -1) {\n            // this is a new directive which we have not seen yet.\n            directives.push(directive, -1, false, null);\n            var initialClasses = null;\n            var initialStyles = null;\n            var mode = -1;\n            for (var i = 0; i < attrs.length; i++) {\n                var attr = attrs[i];\n                if (typeof attr == 'number') {\n                    mode = attr;\n                }\n                else if (mode == 1 /* Classes */) {\n                    initialClasses = initialClasses || context[3 /* InitialClassValuesPosition */];\n                    patchInitialStylingValue(initialClasses, attr, true);\n                }\n                else if (mode == 2 /* Styles */) {\n                    initialStyles = initialStyles || context[2 /* InitialStyleValuesPosition */];\n                    patchInitialStylingValue(initialStyles, attr, attrs[++i]);\n                }\n            }\n        }\n    }\n    /**\n     * Designed to add a style or class value into the existing set of initial styles.\n     *\n     * The function will search and figure out if a style/class value is already present\n     * within the provided initial styling array. If and when a style/class value is not\n     * present (or if it's value is falsy) then it will be inserted/updated in the list\n     * of initial styling values.\n     */\n    function patchInitialStylingValue(initialStyling, prop, value) {\n        // Even values are keys; Odd numbers are values; Search keys only\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStyling.length;) {\n            var key = initialStyling[i];\n            if (key === prop) {\n                var existingValue = initialStyling[i + 1 /* ValueOffset */];\n                // If there is no previous style value (when `null`) or no previous class\n                // applied (when `false`) then we update the the newly given value.\n                if (existingValue == null || existingValue == false) {\n                    initialStyling[i + 1 /* ValueOffset */] = value;\n                }\n                return;\n            }\n            i = i + 2 /* Size */;\n        }\n        // We did not find existing key, add a new one.\n        initialStyling.push(prop, value);\n    }\n    /**\n     * Runs through the initial styling data present in the context and renders\n     * them via the renderer on the element.\n     */\n    function renderInitialStylesAndClasses(element, context, renderer) {\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialClasses, true);\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        renderInitialStylingValues(element, renderer, initialStyles, false);\n    }\n    /**\n     * This is a helper function designed to render each entry present within the\n     * provided list of initialStylingValues.\n     */\n    function renderInitialStylingValues(element, renderer, initialStylingValues, isEntryClassBased) {\n        for (var i = 1 /* KeyValueStartPosition */; i < initialStylingValues.length; i += 2 /* Size */) {\n            var value = initialStylingValues[i + 1 /* ValueOffset */];\n            if (value) {\n                if (isEntryClassBased) {\n                    setClass(element, initialStylingValues[i + 0 /* PropOffset */], true, renderer, null);\n                }\n                else {\n                    setStyle(element, initialStylingValues[i + 0 /* PropOffset */], value, renderer, null);\n                }\n            }\n        }\n    }\n    /**\n     * Adds in new binding values to a styling context.\n     *\n     * If a directive value is provided then all provided class/style binding names will\n     * reference the provided directive.\n     *\n     * @param context the existing styling context\n     * @param directiveRef the directive that the new bindings will reference\n     * @param classBindingNames an array of class binding names that will be added to the context\n     * @param styleBindingNames an array of style binding names that will be added to the context\n     * @param styleSanitizer an optional sanitizer that handle all sanitization on for each of\n     *    the bindings added to the context. Note that if a directive is provided then the sanitizer\n     *    instance will only be active if and when the directive updates the bindings that it owns.\n     */\n    function updateContextWithBindings(context, directiveRef, classBindingNames, styleBindingNames, styleSanitizer, onlyProcessSingleClasses) {\n        if (context[0 /* MasterFlagPosition */] & 32 /* BindingAllocationLocked */)\n            return;\n        // this means the context has already been patched with the directive's bindings\n        var directiveIndex = findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer);\n        if (directiveIndex === -1) {\n            // this means the directive has already been patched in ... No point in doing anything\n            return;\n        }\n        // there are alot of variables being used below to track where in the context the new\n        // binding values will be placed. Because the context consists of multiple types of\n        // entries (single classes/styles and multi classes/styles) alot of the index positions\n        // need to be computed ahead of time and the context needs to be extended before the values\n        // are inserted in.\n        var singlePropOffsetValues = context[4 /* SinglePropOffsetPositions */];\n        var totalCurrentClassBindings = singlePropOffsetValues[1 /* ClassesCountPosition */];\n        var totalCurrentStyleBindings = singlePropOffsetValues[0 /* StylesCountPosition */];\n        var classesOffset = totalCurrentClassBindings * 4 /* Size */;\n        var stylesOffset = totalCurrentStyleBindings * 4 /* Size */;\n        var singleStylesStartIndex = 9 /* SingleStylesStartPosition */;\n        var singleClassesStartIndex = singleStylesStartIndex + stylesOffset;\n        var multiStylesStartIndex = singleClassesStartIndex + classesOffset;\n        var multiClassesStartIndex = multiStylesStartIndex + stylesOffset;\n        // because we're inserting more bindings into the context, this means that the\n        // binding values need to be referenced the singlePropOffsetValues array so that\n        // the template/directive can easily find them inside of the `elementStyleProp`\n        // and the `elementClassProp` functions without iterating through the entire context.\n        // The first step to setting up these reference points is to mark how many bindings\n        // are being added. Even if these bindings already exist in the context, the directive\n        // or template code will still call them unknowingly. Therefore the total values need\n        // to be registered so that we know how many bindings are assigned to each directive.\n        var currentSinglePropsLength = singlePropOffsetValues.length;\n        singlePropOffsetValues.push(styleBindingNames ? styleBindingNames.length : 0, classBindingNames ? classBindingNames.length : 0);\n        // the code below will check to see if a new style binding already exists in the context\n        // if so then there is no point in inserting it into the context again. Whether or not it\n        // exists the styling offset code will now know exactly where it is\n        var insertionOffset = 0;\n        var filteredStyleBindingNames = [];\n        if (styleBindingNames && styleBindingNames.length) {\n            for (var i_1 = 0; i_1 < styleBindingNames.length; i_1++) {\n                var name_1 = styleBindingNames[i_1];\n                var singlePropIndex = getMatchingBindingIndex(context, name_1, singleStylesStartIndex, singleClassesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = singleClassesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredStyleBindingNames.push(name_1);\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // just like with the style binding loop above, the new class bindings get the same treatment...\n        var filteredClassBindingNames = [];\n        if (classBindingNames && classBindingNames.length) {\n            for (var i_2 = 0; i_2 < classBindingNames.length; i_2++) {\n                var name_2 = classBindingNames[i_2];\n                var singlePropIndex = getMatchingBindingIndex(context, name_2, singleClassesStartIndex, multiStylesStartIndex);\n                if (singlePropIndex == -1) {\n                    singlePropIndex = multiStylesStartIndex + insertionOffset;\n                    insertionOffset += 4 /* Size */;\n                    filteredClassBindingNames.push(name_2);\n                }\n                else {\n                    singlePropIndex += filteredStyleBindingNames.length * 4 /* Size */;\n                }\n                singlePropOffsetValues.push(singlePropIndex);\n            }\n        }\n        // because new styles are being inserted, this means the existing collection of style offset\n        // index values are incorrect (they point to the wrong values). The code below will run through\n        // the entire offset array and update the existing set of index values to point to their new\n        // locations while taking the new binding values into consideration.\n        var i = 2 /* ValueStartPosition */;\n        if (filteredStyleBindingNames.length) {\n            while (i < currentSinglePropsLength) {\n                var totalStyles = singlePropOffsetValues[i + 0 /* StylesCountPosition */];\n                var totalClasses = singlePropOffsetValues[i + 1 /* ClassesCountPosition */];\n                if (totalClasses) {\n                    var start = i + 2 /* ValueStartPosition */ + totalStyles;\n                    for (var j = start; j < start + totalClasses; j++) {\n                        singlePropOffsetValues[j] += filteredStyleBindingNames.length * 4 /* Size */;\n                    }\n                }\n                var total = totalStyles + totalClasses;\n                i += 2 /* ValueStartPosition */ + total;\n            }\n        }\n        var totalNewEntries = filteredClassBindingNames.length + filteredStyleBindingNames.length;\n        // in the event that there are new style values being inserted, all existing class and style\n        // bindings need to have their pointer values offsetted with the new amount of space that is\n        // used for the new style/class bindings.\n        for (var i_3 = singleStylesStartIndex; i_3 < context.length; i_3 += 4 /* Size */) {\n            var isMultiBased = i_3 >= multiStylesStartIndex;\n            var isClassBased = i_3 >= (isMultiBased ? multiClassesStartIndex : singleClassesStartIndex);\n            var flag = getPointers(context, i_3);\n            var staticIndex = getInitialIndex(flag);\n            var singleOrMultiIndex = getMultiOrSingleIndex(flag);\n            if (isMultiBased) {\n                singleOrMultiIndex +=\n                    isClassBased ? (filteredStyleBindingNames.length * 4 /* Size */) : 0;\n            }\n            else {\n                singleOrMultiIndex += (totalNewEntries * 4 /* Size */) +\n                    ((isClassBased ? filteredStyleBindingNames.length : 0) * 4 /* Size */);\n            }\n            setFlag(context, i_3, pointers(flag, staticIndex, singleOrMultiIndex));\n        }\n        // this is where we make space in the context for the new style bindings\n        for (var i_4 = 0; i_4 < filteredStyleBindingNames.length * 4 /* Size */; i_4++) {\n            context.splice(multiClassesStartIndex, 0, null);\n            context.splice(singleClassesStartIndex, 0, null);\n            singleClassesStartIndex++;\n            multiStylesStartIndex++;\n            multiClassesStartIndex += 2; // both single + multi slots were inserted\n        }\n        // this is where we make space in the context for the new class bindings\n        for (var i_5 = 0; i_5 < filteredClassBindingNames.length * 4 /* Size */; i_5++) {\n            context.splice(multiStylesStartIndex, 0, null);\n            context.push(null);\n            multiStylesStartIndex++;\n            multiClassesStartIndex++;\n        }\n        var initialClasses = context[3 /* InitialClassValuesPosition */];\n        var initialStyles = context[2 /* InitialStyleValuesPosition */];\n        // the code below will insert each new entry into the context and assign the appropriate\n        // flags and index values to them. It's important this runs at the end of this function\n        // because the context, property offset and index values have all been computed just before.\n        for (var i_6 = 0; i_6 < totalNewEntries; i_6++) {\n            var entryIsClassBased = i_6 >= filteredStyleBindingNames.length;\n            var adjustedIndex = entryIsClassBased ? (i_6 - filteredStyleBindingNames.length) : i_6;\n            var propName = entryIsClassBased ? filteredClassBindingNames[adjustedIndex] :\n                filteredStyleBindingNames[adjustedIndex];\n            var multiIndex = void 0, singleIndex = void 0;\n            if (entryIsClassBased) {\n                multiIndex = multiClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleClassesStartIndex +\n                    ((totalCurrentClassBindings + adjustedIndex) * 4 /* Size */);\n            }\n            else {\n                multiIndex =\n                    multiStylesStartIndex + ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n                singleIndex = singleStylesStartIndex +\n                    ((totalCurrentStyleBindings + adjustedIndex) * 4 /* Size */);\n            }\n            // if a property is not found in the initial style values list then it\n            // is ALWAYS added incase a follow-up directive introduces the same initial\n            // style/class value later on.\n            var initialValuesToLookup = entryIsClassBased ? initialClasses : initialStyles;\n            var indexForInitial = getInitialStylingValuesIndexOf(initialValuesToLookup, propName);\n            if (indexForInitial === -1) {\n                indexForInitial = initialValuesToLookup.length + 1 /* ValueOffset */;\n                initialValuesToLookup.push(propName, entryIsClassBased ? false : null);\n            }\n            else {\n                indexForInitial += 1 /* ValueOffset */;\n            }\n            var initialFlag = prepareInitialFlag(context, propName, entryIsClassBased, styleSanitizer || null);\n            setFlag(context, singleIndex, pointers(initialFlag, indexForInitial, multiIndex));\n            setProp(context, singleIndex, propName);\n            setValue(context, singleIndex, null);\n            setPlayerBuilderIndex(context, singleIndex, 0, directiveIndex);\n            setFlag(context, multiIndex, pointers(initialFlag, indexForInitial, singleIndex));\n            setProp(context, multiIndex, propName);\n            setValue(context, multiIndex, null);\n            setPlayerBuilderIndex(context, multiIndex, 0, directiveIndex);\n        }\n        // the total classes/style values are updated so the next time the context is patched\n        // additional style/class bindings from another directive then it knows exactly where\n        // to insert them in the context\n        singlePropOffsetValues[1 /* ClassesCountPosition */] =\n            totalCurrentClassBindings + filteredClassBindingNames.length;\n        singlePropOffsetValues[0 /* StylesCountPosition */] =\n            totalCurrentStyleBindings + filteredStyleBindingNames.length;\n        // there is no initial value flag for the master index since it doesn't\n        // reference an initial style value\n        var masterFlag = pointers(0, 0, multiStylesStartIndex) |\n            (onlyProcessSingleClasses ? 16 /* OnlyProcessSingleClasses */ : 0);\n        setFlag(context, 0 /* MasterFlagPosition */, masterFlag);\n    }\n    /**\n     * Searches through the existing registry of directives\n     */\n    function findOrPatchDirectiveIntoRegistry(context, directiveRef, styleSanitizer) {\n        var directiveRefs = context[1 /* DirectiveRegistryPosition */];\n        var nextOffsetInsertionIndex = context[4 /* SinglePropOffsetPositions */].length;\n        var directiveIndex;\n        var detectedIndex = getDirectiveRegistryValuesIndexOf(directiveRefs, directiveRef);\n        if (detectedIndex === -1) {\n            directiveIndex = directiveRefs.length / 4 /* Size */;\n            directiveRefs.push(directiveRef, nextOffsetInsertionIndex, false, styleSanitizer || null);\n        }\n        else {\n            var singlePropStartPosition = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            if (directiveRefs[singlePropStartPosition] >= 0) {\n                // the directive has already been patched into the context\n                return -1;\n            }\n            directiveIndex = detectedIndex / 4 /* Size */;\n            // because the directive already existed this means that it was set during elementHostAttrs or\n            // elementStart which means that the binding values were not here. Therefore, the values below\n            // need to be applied so that single class and style properties can be assigned later.\n            var singlePropPositionIndex = detectedIndex + 1 /* SinglePropValuesIndexOffset */;\n            directiveRefs[singlePropPositionIndex] = nextOffsetInsertionIndex;\n            // the sanitizer is also apart of the binding process and will be used when bindings are\n            // applied.\n            var styleSanitizerIndex = detectedIndex + 3 /* StyleSanitizerOffset */;\n            directiveRefs[styleSanitizerIndex] = styleSanitizer || null;\n        }\n        return directiveIndex;\n    }\n    function getMatchingBindingIndex(context, bindingName, start, end) {\n        for (var j = start; j < end; j += 4 /* Size */) {\n            if (getProp(context, j) === bindingName)\n                return j;\n        }\n        return -1;\n    }\n    /**\n     * Sets and resolves all `multi` styling on an `StylingContext` so that they can be\n     * applied to the element once `renderStyling` is called.\n     *\n     * All missing styles/class (any values that are not provided in the new `styles`\n     * or `classes` params) will resolve to `null` within their respective positions\n     * in the context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style values.\n     * @param classesInput The key/value map of CSS class names that will be used for the update.\n     * @param stylesInput The key/value map of CSS styles that will be used for the update.\n     */\n    function updateStylingMap(context, classesInput, stylesInput, directiveRef) {\n        stylesInput = stylesInput || null;\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var element = context[5 /* ElementPosition */];\n        var classesPlayerBuilder = classesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(classesInput, element, 1 /* Class */) :\n            null;\n        var stylesPlayerBuilder = stylesInput instanceof BoundPlayerFactory ?\n            new ClassAndStylePlayerBuilder(stylesInput, element, 2 /* Style */) :\n            null;\n        var classesValue = classesPlayerBuilder ?\n            classesInput.value :\n            classesInput;\n        var stylesValue = stylesPlayerBuilder ? stylesInput.value : stylesInput;\n        // early exit (this is what's done to avoid using ctx.bind() to cache the value)\n        var ignoreAllClassUpdates = limitToSingleClasses(context) || classesValue === NO_CHANGE ||\n            classesValue === context[6 /* CachedClassValueOrInitialClassString */];\n        var ignoreAllStyleUpdates = stylesValue === NO_CHANGE || stylesValue === context[7 /* CachedStyleValue */];\n        if (ignoreAllClassUpdates && ignoreAllStyleUpdates)\n            return;\n        context[6 /* CachedClassValueOrInitialClassString */] = classesValue;\n        context[7 /* CachedStyleValue */] = stylesValue;\n        var classNames = EMPTY_ARRAY;\n        var applyAllClasses = false;\n        var playerBuildersAreDirty = false;\n        var classesPlayerBuilderIndex = classesPlayerBuilder ? 1 /* ClassMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, classesPlayerBuilder, 1 /* ClassMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        var stylesPlayerBuilderIndex = stylesPlayerBuilder ? 3 /* StyleMapPlayerBuilderPosition */ : 0;\n        if (hasPlayerBuilderChanged(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */)) {\n            setPlayerBuilder(context, stylesPlayerBuilder, 3 /* StyleMapPlayerBuilderPosition */);\n            playerBuildersAreDirty = true;\n        }\n        // each time a string-based value pops up then it shouldn't require a deep\n        // check of what's changed.\n        if (!ignoreAllClassUpdates) {\n            if (typeof classesValue == 'string') {\n                classNames = classesValue.split(/\\s+/);\n                // this boolean is used to avoid having to create a key/value map of `true` values\n                // since a classname string implies that all those classes are added\n                applyAllClasses = true;\n            }\n            else {\n                classNames = classesValue ? Object.keys(classesValue) : EMPTY_ARRAY;\n            }\n        }\n        var classes = (classesValue || EMPTY_OBJ);\n        var styleProps = stylesValue ? Object.keys(stylesValue) : EMPTY_ARRAY;\n        var styles = stylesValue || EMPTY_OBJ;\n        var classesStartIndex = styleProps.length;\n        var multiStartIndex = getMultiStartIndex(context);\n        var dirty = false;\n        var ctxIndex = multiStartIndex;\n        var propIndex = 0;\n        var propLimit = styleProps.length + classNames.length;\n        // the main loop here will try and figure out how the shape of the provided\n        // styles differ with respect to the context. Later if the context/styles/classes\n        // are off-balance then they will be dealt in another loop after this one\n        while (ctxIndex < context.length && propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            // when there is a cache-hit for a string-based class then we should\n            // avoid doing any work diffing any of the changes\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var newProp = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var newValue = isClassBased ? (applyAllClasses ? true : classes[newProp]) : styles[newProp];\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var prop = getProp(context, ctxIndex);\n                if (prop === newProp) {\n                    var value = getValue(context, ctxIndex);\n                    var flag = getPointers(context, ctxIndex);\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    if (hasValueChanged(flag, value, newValue)) {\n                        setValue(context, ctxIndex, newValue);\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        var initialValue = getInitialValue(context, flag);\n                        // SKIP IF INITIAL CHECK\n                        // If the former `value` is `null` then it means that an initial value\n                        // could be being rendered on screen. If that is the case then there is\n                        // no point in updating the value incase it matches. In other words if the\n                        // new value is the exact same as the previously rendered value (which\n                        // happens to be the initial value) then do nothing.\n                        if (value != null || hasValueChanged(flag, initialValue, newValue)) {\n                            setDirty(context, ctxIndex, true);\n                            dirty = true;\n                        }\n                    }\n                }\n                else {\n                    var indexOfEntry = findEntryPositionByProp(context, newProp, ctxIndex);\n                    if (indexOfEntry > 0) {\n                        // it was found at a later point ... just swap the values\n                        var valueToCompare = getValue(context, indexOfEntry);\n                        var flagToCompare = getPointers(context, indexOfEntry);\n                        swapMultiContextEntries(context, ctxIndex, indexOfEntry);\n                        if (hasValueChanged(flagToCompare, valueToCompare, newValue)) {\n                            var initialValue = getInitialValue(context, flagToCompare);\n                            setValue(context, ctxIndex, newValue);\n                            // same if statement logic as above (look for SKIP IF INITIAL CHECK).\n                            if (valueToCompare != null || hasValueChanged(flagToCompare, initialValue, newValue)) {\n                                setDirty(context, ctxIndex, true);\n                                playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                                dirty = true;\n                            }\n                        }\n                    }\n                    else {\n                        // we only care to do this if the insertion is in the middle\n                        var newFlag = prepareInitialFlag(context, newProp, isClassBased, getStyleSanitizer(context, directiveIndex));\n                        playerBuildersAreDirty = playerBuildersAreDirty || !!playerBuilderIndex;\n                        insertNewMultiProperty(context, ctxIndex, isClassBased, newProp, newFlag, newValue, directiveIndex, playerBuilderIndex);\n                        dirty = true;\n                    }\n                }\n            }\n            ctxIndex += 4 /* Size */;\n            propIndex++;\n        }\n        // this means that there are left-over values in the context that\n        // were not included in the provided styles/classes and in this\n        // case the  goal is to \"remove\" them from the context (by nullifying)\n        while (ctxIndex < context.length) {\n            var flag = getPointers(context, ctxIndex);\n            var isClassBased = (flag & 2 /* Class */) === 2 /* Class */;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var value = getValue(context, ctxIndex);\n                var doRemoveValue = valueExists(value, isClassBased);\n                if (doRemoveValue) {\n                    setDirty(context, ctxIndex, true);\n                    setValue(context, ctxIndex, null);\n                    // we keep the player factory the same so that the `nulled` value can\n                    // be instructed into the player because removing a style and/or a class\n                    // is a valid animation player instruction.\n                    var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                    setPlayerBuilderIndex(context, ctxIndex, playerBuilderIndex, directiveIndex);\n                    dirty = true;\n                }\n            }\n            ctxIndex += 4 /* Size */;\n        }\n        // this means that there are left-over properties in the context that\n        // were not detected in the context during the loop above. In that\n        // case we want to add the new entries into the list\n        var sanitizer = getStyleSanitizer(context, directiveIndex);\n        while (propIndex < propLimit) {\n            var isClassBased = propIndex >= classesStartIndex;\n            var processValue = (!isClassBased && !ignoreAllStyleUpdates) || (isClassBased && !ignoreAllClassUpdates);\n            if (processValue) {\n                var adjustedPropIndex = isClassBased ? propIndex - classesStartIndex : propIndex;\n                var prop = isClassBased ? classNames[adjustedPropIndex] : styleProps[adjustedPropIndex];\n                var value = isClassBased ? (applyAllClasses ? true : classes[prop]) : styles[prop];\n                var flag = prepareInitialFlag(context, prop, isClassBased, sanitizer) | 1 /* Dirty */;\n                var playerBuilderIndex = isClassBased ? classesPlayerBuilderIndex : stylesPlayerBuilderIndex;\n                var ctxIndex_1 = context.length;\n                context.push(flag, prop, value, 0);\n                setPlayerBuilderIndex(context, ctxIndex_1, playerBuilderIndex, directiveIndex);\n                dirty = true;\n            }\n            propIndex++;\n        }\n        if (dirty) {\n            setContextDirty(context, true);\n            setDirectiveDirty(context, directiveIndex, true);\n        }\n        if (playerBuildersAreDirty) {\n            setContextPlayersDirty(context, true);\n        }\n    }\n    /**\n     * This method will toggle the referenced CSS class (by the provided index)\n     * within the given context.\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided class value.\n     * @param offset The index of the CSS class which is being updated.\n     * @param addOrRemove Whether or not to add or remove the CSS class\n     */\n    function updateClassProp(context, offset, addOrRemove, directiveRef) {\n        _updateSingleStylingValue(context, offset, addOrRemove, true, directiveRef);\n    }\n    /**\n     * Sets and resolves a single style value on the provided `StylingContext` so\n     * that they can be applied to the element once `renderStyling` is called.\n     *\n     * Note that prop-level styling values are considered higher priority than any styling that\n     * has been applied using `updateStylingMap`, therefore, when styling values are rendered\n     * then any styles/classes that have been applied using this function will be considered first\n     * (then multi values second and then initial values as a backup).\n     *\n     * @param context The styling context that will be updated with the\n     *    newly provided style value.\n     * @param offset The index of the property which is being updated.\n     * @param value The CSS style value that will be assigned\n     * @param directiveRef an optional reference to the directive responsible\n     *    for this binding change. If present then style binding will only\n     *    actualize if the directive has ownership over this binding\n     *    (see styling.ts#directives for more information about the algorithm).\n     */\n    function updateStyleProp(context, offset, input, directiveRef) {\n        _updateSingleStylingValue(context, offset, input, false, directiveRef);\n    }\n    function _updateSingleStylingValue(context, offset, input, isClassBased, directiveRef) {\n        var directiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        var singleIndex = getSinglePropIndexValue(context, directiveIndex, offset, isClassBased);\n        var currValue = getValue(context, singleIndex);\n        var currFlag = getPointers(context, singleIndex);\n        var currDirective = getDirectiveIndexFromEntry(context, singleIndex);\n        var value = (input instanceof BoundPlayerFactory) ? input.value : input;\n        if (hasValueChanged(currFlag, currValue, value) &&\n            allowValueChange(currValue, value, currDirective, directiveIndex)) {\n            var isClassBased_1 = (currFlag & 2 /* Class */) === 2 /* Class */;\n            var element = context[5 /* ElementPosition */];\n            var playerBuilder = input instanceof BoundPlayerFactory ?\n                new ClassAndStylePlayerBuilder(input, element, isClassBased_1 ? 1 /* Class */ : 2 /* Style */) :\n                null;\n            var value_1 = (playerBuilder ? input.value : input);\n            var currPlayerIndex = getPlayerBuilderIndex(context, singleIndex);\n            var playerBuildersAreDirty = false;\n            var playerBuilderIndex = playerBuilder ? currPlayerIndex : 0;\n            if (hasPlayerBuilderChanged(context, playerBuilder, currPlayerIndex)) {\n                var newIndex = setPlayerBuilder(context, playerBuilder, currPlayerIndex);\n                playerBuilderIndex = playerBuilder ? newIndex : 0;\n                playerBuildersAreDirty = true;\n            }\n            if (playerBuildersAreDirty || currDirective !== directiveIndex) {\n                setPlayerBuilderIndex(context, singleIndex, playerBuilderIndex, directiveIndex);\n            }\n            if (currDirective !== directiveIndex) {\n                var prop = getProp(context, singleIndex);\n                var sanitizer = getStyleSanitizer(context, directiveIndex);\n                setSanitizeFlag(context, singleIndex, (sanitizer && sanitizer(prop)) ? true : false);\n            }\n            // the value will always get updated (even if the dirty flag is skipped)\n            setValue(context, singleIndex, value_1);\n            var indexForMulti = getMultiOrSingleIndex(currFlag);\n            // if the value is the same in the multi-area then there's no point in re-assembling\n            var valueForMulti = getValue(context, indexForMulti);\n            if (!valueForMulti || hasValueChanged(currFlag, valueForMulti, value_1)) {\n                var multiDirty = false;\n                var singleDirty = true;\n                // only when the value is set to `null` should the multi-value get flagged\n                if (!valueExists(value_1, isClassBased_1) && valueExists(valueForMulti, isClassBased_1)) {\n                    multiDirty = true;\n                    singleDirty = false;\n                }\n                setDirty(context, indexForMulti, multiDirty);\n                setDirty(context, singleIndex, singleDirty);\n                setDirectiveDirty(context, directiveIndex, true);\n                setContextDirty(context, true);\n            }\n            if (playerBuildersAreDirty) {\n                setContextPlayersDirty(context, true);\n            }\n        }\n    }\n    /**\n     * Renders all queued styling using a renderer onto the given element.\n     *\n     * This function works by rendering any styles (that have been applied\n     * using `updateStylingMap`) and any classes (that have been applied using\n     * `updateStyleProp`) onto the provided element using the provided renderer.\n     * Just before the styles/classes are rendered a final key/value style map\n     * will be assembled (if `styleStore` or `classStore` are provided).\n     *\n     * @param lElement the element that the styles will be rendered on\n     * @param context The styling context that will be used to determine\n     *      what styles will be rendered\n     * @param renderer the renderer that will be used to apply the styling\n     * @param classesStore if provided, the updated class values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param stylesStore if provided, the updated style values will be applied\n     *    to this key/value map instead of being renderered via the renderer.\n     * @param directiveRef an optional directive that will be used to target which\n     *    styling values are rendered. If left empty, only the bindings that are\n     *    registered on the template will be rendered.\n     * @returns number the total amount of players that got queued for animation (if any)\n     */\n    function renderStyling(context, renderer, rootOrView, isFirstRender, classesStore, stylesStore, directiveRef) {\n        var totalPlayersQueued = 0;\n        var targetDirectiveIndex = getDirectiveIndexFromRegistry(context, directiveRef || null);\n        if (isContextDirty(context) && isDirectiveDirty(context, targetDirectiveIndex)) {\n            var flushPlayerBuilders = context[0 /* MasterFlagPosition */] & 8 /* PlayerBuildersDirty */;\n            var native = context[5 /* ElementPosition */];\n            var multiStartIndex = getMultiStartIndex(context);\n            var onlySingleClasses = limitToSingleClasses(context);\n            var stillDirty = false;\n            for (var i = 9 /* SingleStylesStartPosition */; i < context.length; i += 4 /* Size */) {\n                // there is no point in rendering styles that have not changed on screen\n                if (isDirty(context, i)) {\n                    var flag = getPointers(context, i);\n                    var directiveIndex = getDirectiveIndexFromEntry(context, i);\n                    if (targetDirectiveIndex !== directiveIndex) {\n                        stillDirty = true;\n                        continue;\n                    }\n                    var prop = getProp(context, i);\n                    var value = getValue(context, i);\n                    var styleSanitizer = (flag & 4 /* Sanitize */) ? getStyleSanitizer(context, directiveIndex) : null;\n                    var playerBuilder = getPlayerBuilder(context, i);\n                    var isClassBased = flag & 2 /* Class */ ? true : false;\n                    var isInSingleRegion = i < multiStartIndex;\n                    var readInitialValue = !isClassBased || !onlySingleClasses;\n                    var valueToApply = value;\n                    // VALUE DEFER CASE 1: Use a multi value instead of a null single value\n                    // this check implies that a single value was removed and we\n                    // should now defer to a multi value and use that (if set).\n                    if (isInSingleRegion && !valueExists(valueToApply, isClassBased)) {\n                        // single values ALWAYS have a reference to a multi index\n                        var multiIndex = getMultiOrSingleIndex(flag);\n                        valueToApply = getValue(context, multiIndex);\n                    }\n                    // VALUE DEFER CASE 2: Use the initial value if all else fails (is falsy)\n                    // the initial value will always be a string or null,\n                    // therefore we can safely adopt it incase there's nothing else\n                    // note that this should always be a falsy check since `false` is used\n                    // for both class and style comparisons (styles can't be false and false\n                    // classes are turned off and should therefore defer to their initial values)\n                    // Note that we ignore class-based deferals because otherwise a class can never\n                    // be removed in the case that it exists as true in the initial classes list...\n                    if (!isClassBased && !valueExists(valueToApply, isClassBased) && readInitialValue) {\n                        valueToApply = getInitialValue(context, flag);\n                    }\n                    // if the first render is true then we do not want to start applying falsy\n                    // values to the DOM element's styling. Otherwise then we know there has\n                    // been a change and even if it's falsy then it's removing something that\n                    // was truthy before.\n                    var doApplyValue = isFirstRender ? valueToApply : true;\n                    if (doApplyValue) {\n                        if (isClassBased) {\n                            setClass(native, prop, valueToApply ? true : false, renderer, classesStore, playerBuilder);\n                        }\n                        else {\n                            setStyle(native, prop, valueToApply, renderer, styleSanitizer, stylesStore, playerBuilder);\n                        }\n                    }\n                    setDirty(context, i, false);\n                }\n            }\n            if (flushPlayerBuilders) {\n                var rootContext = Array.isArray(rootOrView) ? getRootContext(rootOrView) : rootOrView;\n                var playerContext = getPlayerContext(context);\n                var playersStartIndex = playerContext[0 /* NonBuilderPlayersStart */];\n                for (var i = 1 /* PlayerBuildersStartPosition */; i < playersStartIndex; i += 2 /* PlayerAndPlayerBuildersTupleSize */) {\n                    var builder = playerContext[i];\n                    var playerInsertionIndex = i + 1 /* PlayerOffsetPosition */;\n                    var oldPlayer = playerContext[playerInsertionIndex];\n                    if (builder) {\n                        var player = builder.buildPlayer(oldPlayer, isFirstRender);\n                        if (player !== undefined) {\n                            if (player != null) {\n                                var wasQueued = addPlayerInternal(playerContext, rootContext, native, player, playerInsertionIndex);\n                                wasQueued && totalPlayersQueued++;\n                            }\n                            if (oldPlayer) {\n                                oldPlayer.destroy();\n                            }\n                        }\n                    }\n                    else if (oldPlayer) {\n                        // the player builder has been removed ... therefore we should delete the associated\n                        // player\n                        oldPlayer.destroy();\n                    }\n                }\n                setContextPlayersDirty(context, false);\n            }\n            setDirectiveDirty(context, targetDirectiveIndex, false);\n            setContextDirty(context, stillDirty);\n        }\n        return totalPlayersQueued;\n    }\n    /**\n     * This function renders a given CSS prop/value entry using the\n     * provided renderer. If a `store` value is provided then\n     * that will be used a render context instead of the provided\n     * renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setStyle(native, prop, value, renderer, sanitizer, store, playerBuilder) {\n        value = sanitizer && value ? sanitizer(prop, value) : value;\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(prop, value);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(prop, value);\n            }\n        }\n        else if (value) {\n            value = value.toString(); // opacity, z-index and flexbox all have number values which may not\n            // assign as numbers\n            ngDevMode && ngDevMode.rendererSetStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(native, prop, value, RendererStyleFlags3.DashCase) :\n                native['style'].setProperty(prop, value);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveStyle++;\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(native, prop, RendererStyleFlags3.DashCase) :\n                native['style'].removeProperty(prop);\n        }\n    }\n    /**\n     * This function renders a given CSS class value using the provided\n     * renderer (by adding or removing it from the provided element).\n     * If a `store` value is provided then that will be used a render\n     * context instead of the provided renderer.\n     *\n     * @param native the DOM Element\n     * @param prop the CSS style property that will be rendered\n     * @param value the CSS style value that will be rendered\n     * @param renderer\n     * @param store an optional key/value map that will be used as a context to render styles on\n     */\n    function setClass(native, className, add, renderer, store, playerBuilder) {\n        if (store || playerBuilder) {\n            if (store) {\n                store.setValue(className, add);\n            }\n            if (playerBuilder) {\n                playerBuilder.setValue(className, add);\n            }\n        }\n        else if (add) {\n            ngDevMode && ngDevMode.rendererAddClass++;\n            isProceduralRenderer(renderer) ? renderer.addClass(native, className) :\n                native['classList'].add(className);\n        }\n        else {\n            ngDevMode && ngDevMode.rendererRemoveClass++;\n            isProceduralRenderer(renderer) ? renderer.removeClass(native, className) :\n                native['classList'].remove(className);\n        }\n    }\n    function setSanitizeFlag(context, index, sanitizeYes) {\n        if (sanitizeYes) {\n            context[index] |= 4 /* Sanitize */;\n        }\n        else {\n            context[index] &= ~4 /* Sanitize */;\n        }\n    }\n    function setDirty(context, index, isDirtyYes) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        if (isDirtyYes) {\n            context[adjustedIndex] |= 1 /* Dirty */;\n        }\n        else {\n            context[adjustedIndex] &= ~1 /* Dirty */;\n        }\n    }\n    function isDirty(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 1 /* Dirty */) == 1 /* Dirty */;\n    }\n    function isClassBasedValue(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 2 /* Class */) == 2 /* Class */;\n    }\n    function isSanitizable(context, index) {\n        var adjustedIndex = index >= 9 /* SingleStylesStartPosition */ ? (index + 0 /* FlagsOffset */) : index;\n        return (context[adjustedIndex] & 4 /* Sanitize */) == 4 /* Sanitize */;\n    }\n    function pointers(configFlag, staticIndex, dynamicIndex) {\n        return (configFlag & 63 /* BitMask */) | (staticIndex << 6 /* BitCountSize */) |\n            (dynamicIndex << (14 /* BitCountSize */ + 6 /* BitCountSize */));\n    }\n    function getInitialValue(context, flag) {\n        var index = getInitialIndex(flag);\n        var entryIsClassBased = flag & 2 /* Class */;\n        var initialValues = entryIsClassBased ? context[3 /* InitialClassValuesPosition */] :\n            context[2 /* InitialStyleValuesPosition */];\n        return initialValues[index];\n    }\n    function getInitialIndex(flag) {\n        return (flag >> 6 /* BitCountSize */) & 16383 /* BitMask */;\n    }\n    function getMultiOrSingleIndex(flag) {\n        var index = (flag >> (14 /* BitCountSize */ + 6 /* BitCountSize */)) & 16383 /* BitMask */;\n        return index >= 9 /* SingleStylesStartPosition */ ? index : -1;\n    }\n    function getMultiStartIndex(context) {\n        return getMultiOrSingleIndex(context[0 /* MasterFlagPosition */]);\n    }\n    function setProp(context, index, prop) {\n        context[index + 1 /* PropertyOffset */] = prop;\n    }\n    function setValue(context, index, value) {\n        context[index + 2 /* ValueOffset */] = value;\n    }\n    function hasPlayerBuilderChanged(context, builder, index) {\n        var playerContext = context[8 /* PlayerContext */];\n        if (builder) {\n            if (!playerContext || index === 0) {\n                return true;\n            }\n        }\n        else if (!playerContext) {\n            return false;\n        }\n        return playerContext[index] !== builder;\n    }\n    function setPlayerBuilder(context, builder, insertionIndex) {\n        var playerContext = context[8 /* PlayerContext */] || allocPlayerContext(context);\n        if (insertionIndex > 0) {\n            playerContext[insertionIndex] = builder;\n        }\n        else {\n            insertionIndex = playerContext[0 /* NonBuilderPlayersStart */];\n            playerContext.splice(insertionIndex, 0, builder, null);\n            playerContext[0 /* NonBuilderPlayersStart */] +=\n                2 /* PlayerAndPlayerBuildersTupleSize */;\n        }\n        return insertionIndex;\n    }\n    function directiveOwnerPointers(directiveIndex, playerIndex) {\n        return (playerIndex << 16 /* BitCountSize */) | directiveIndex;\n    }\n    function setPlayerBuilderIndex(context, index, playerBuilderIndex, directiveIndex) {\n        var value = directiveOwnerPointers(directiveIndex, playerBuilderIndex);\n        context[index + 3 /* PlayerBuilderIndexOffset */] = value;\n    }\n    function getPlayerBuilderIndex(context, index) {\n        var flag = context[index + 3 /* PlayerBuilderIndexOffset */];\n        var playerBuilderIndex = (flag >> 16 /* BitCountSize */) &\n            65535 /* BitMask */;\n        return playerBuilderIndex;\n    }\n    function getPlayerBuilder(context, index) {\n        var playerBuilderIndex = getPlayerBuilderIndex(context, index);\n        if (playerBuilderIndex) {\n            var playerContext = context[8 /* PlayerContext */];\n            if (playerContext) {\n                return playerContext[playerBuilderIndex];\n            }\n        }\n        return null;\n    }\n    function setFlag(context, index, flag) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        context[adjustedIndex] = flag;\n    }\n    function getPointers(context, index) {\n        var adjustedIndex = index === 0 /* MasterFlagPosition */ ? index : (index + 0 /* FlagsOffset */);\n        return context[adjustedIndex];\n    }\n    function getValue(context, index) {\n        return context[index + 2 /* ValueOffset */];\n    }\n    function getProp(context, index) {\n        return context[index + 1 /* PropertyOffset */];\n    }\n    function isContextDirty(context) {\n        return isDirty(context, 0 /* MasterFlagPosition */);\n    }\n    function limitToSingleClasses(context) {\n        return context[0 /* MasterFlagPosition */] & 16 /* OnlyProcessSingleClasses */;\n    }\n    function setContextDirty(context, isDirtyYes) {\n        setDirty(context, 0 /* MasterFlagPosition */, isDirtyYes);\n    }\n    function setContextPlayersDirty(context, isDirtyYes) {\n        if (isDirtyYes) {\n            context[0 /* MasterFlagPosition */] |= 8 /* PlayerBuildersDirty */;\n        }\n        else {\n            context[0 /* MasterFlagPosition */] &= ~8 /* PlayerBuildersDirty */;\n        }\n    }\n    function findEntryPositionByProp(context, prop, startIndex) {\n        for (var i = (startIndex || 0) + 1 /* PropertyOffset */; i < context.length; i += 4 /* Size */) {\n            var thisProp = context[i];\n            if (thisProp == prop) {\n                return i - 1 /* PropertyOffset */;\n            }\n        }\n        return -1;\n    }\n    function swapMultiContextEntries(context, indexA, indexB) {\n        var tmpValue = getValue(context, indexA);\n        var tmpProp = getProp(context, indexA);\n        var tmpFlag = getPointers(context, indexA);\n        var tmpPlayerBuilderIndex = getPlayerBuilderIndex(context, indexA);\n        var flagA = tmpFlag;\n        var flagB = getPointers(context, indexB);\n        var singleIndexA = getMultiOrSingleIndex(flagA);\n        if (singleIndexA >= 0) {\n            var _flag = getPointers(context, singleIndexA);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexA, pointers(_flag, _initial, indexB));\n        }\n        var singleIndexB = getMultiOrSingleIndex(flagB);\n        if (singleIndexB >= 0) {\n            var _flag = getPointers(context, singleIndexB);\n            var _initial = getInitialIndex(_flag);\n            setFlag(context, singleIndexB, pointers(_flag, _initial, indexA));\n        }\n        setValue(context, indexA, getValue(context, indexB));\n        setProp(context, indexA, getProp(context, indexB));\n        setFlag(context, indexA, getPointers(context, indexB));\n        var playerIndexA = getPlayerBuilderIndex(context, indexB);\n        var directiveIndexA = 0;\n        setPlayerBuilderIndex(context, indexA, playerIndexA, directiveIndexA);\n        setValue(context, indexB, tmpValue);\n        setProp(context, indexB, tmpProp);\n        setFlag(context, indexB, tmpFlag);\n        setPlayerBuilderIndex(context, indexB, tmpPlayerBuilderIndex, directiveIndexA);\n    }\n    function updateSinglePointerValues(context, indexStartPosition) {\n        for (var i = indexStartPosition; i < context.length; i += 4 /* Size */) {\n            var multiFlag = getPointers(context, i);\n            var singleIndex = getMultiOrSingleIndex(multiFlag);\n            if (singleIndex > 0) {\n                var singleFlag = getPointers(context, singleIndex);\n                var initialIndexForSingle = getInitialIndex(singleFlag);\n                var flagValue = (isDirty(context, singleIndex) ? 1 /* Dirty */ : 0 /* None */) |\n                    (isClassBasedValue(context, singleIndex) ? 2 /* Class */ : 0 /* None */) |\n                    (isSanitizable(context, singleIndex) ? 4 /* Sanitize */ : 0 /* None */);\n                var updatedFlag = pointers(flagValue, initialIndexForSingle, i);\n                setFlag(context, singleIndex, updatedFlag);\n            }\n        }\n    }\n    function insertNewMultiProperty(context, index, classBased, name, flag, value, directiveIndex, playerIndex) {\n        var doShift = index < context.length;\n        // prop does not exist in the list, add it in\n        context.splice(index, 0, flag | 1 /* Dirty */ | (classBased ? 2 /* Class */ : 0 /* None */), name, value, 0);\n        setPlayerBuilderIndex(context, index, playerIndex, directiveIndex);\n        if (doShift) {\n            // because the value was inserted midway into the array then we\n            // need to update all the shifted multi values' single value\n            // pointers to point to the newly shifted location\n            updateSinglePointerValues(context, index + 4 /* Size */);\n        }\n    }\n    function valueExists(value, isClassBased) {\n        if (isClassBased) {\n            return value ? true : false;\n        }\n        return value !== null;\n    }\n    function prepareInitialFlag(context, prop, entryIsClassBased, sanitizer) {\n        var flag = (sanitizer && sanitizer(prop)) ? 4 /* Sanitize */ : 0 /* None */;\n        var initialIndex;\n        if (entryIsClassBased) {\n            flag |= 2 /* Class */;\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[3 /* InitialClassValuesPosition */], prop);\n        }\n        else {\n            initialIndex =\n                getInitialStylingValuesIndexOf(context[2 /* InitialStyleValuesPosition */], prop);\n        }\n        initialIndex = initialIndex > 0 ? (initialIndex + 1 /* ValueOffset */) : 0;\n        return pointers(flag, initialIndex, 0);\n    }\n    function hasValueChanged(flag, a, b) {\n        var isClassBased = flag & 2 /* Class */;\n        var hasValues = a && b;\n        var usesSanitizer = flag & 4 /* Sanitize */;\n        // the toString() comparison ensures that a value is checked\n        // ... otherwise (during sanitization bypassing) the === comparsion\n        // would fail since a new String() instance is created\n        if (!isClassBased && hasValues && usesSanitizer) {\n            // we know for sure we're dealing with strings at this point\n            return a.toString() !== b.toString();\n        }\n        // everything else is safe to check with a normal equality check\n        return a !== b;\n    }\n    var ClassAndStylePlayerBuilder = /** @class */ (function () {\n        function ClassAndStylePlayerBuilder(factory, _element, _type) {\n            this._element = _element;\n            this._type = _type;\n            this._values = {};\n            this._dirty = false;\n            this._factory = factory;\n        }\n        ClassAndStylePlayerBuilder.prototype.setValue = function (prop, value) {\n            if (this._values[prop] !== value) {\n                this._values[prop] = value;\n                this._dirty = true;\n            }\n        };\n        ClassAndStylePlayerBuilder.prototype.buildPlayer = function (currentPlayer, isFirstRender) {\n            // if no values have been set here then this means the binding didn't\n            // change and therefore the binding values were not updated through\n            // `setValue` which means no new player will be provided.\n            if (this._dirty) {\n                var player = this._factory.fn(this._element, this._type, this._values, isFirstRender, currentPlayer || null);\n                this._values = {};\n                this._dirty = false;\n                return player;\n            }\n            return undefined;\n        };\n        return ClassAndStylePlayerBuilder;\n    }());\n    function getDirectiveIndexFromEntry(context, index) {\n        var value = context[index + 3 /* PlayerBuilderIndexOffset */];\n        return value & 65535 /* BitMask */;\n    }\n    function getDirectiveIndexFromRegistry(context, directive) {\n        var index = getDirectiveRegistryValuesIndexOf(context[1 /* DirectiveRegistryPosition */], directive);\n        ngDevMode &&\n            assertNotEqual(index, -1, \"The provided directive \" + directive + \" has not been allocated to the element's style/class bindings\");\n        return index > 0 ? index / 4 /* Size */ : 0;\n        // return index / DirectiveRegistryValuesIndex.Size;\n    }\n    function getDirectiveRegistryValuesIndexOf(directives, directive) {\n        for (var i = 0; i < directives.length; i += 4 /* Size */) {\n            if (directives[i] === directive) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    function getInitialStylingValuesIndexOf(keyValues, key) {\n        for (var i = 1 /* KeyValueStartPosition */; i < keyValues.length; i += 2 /* Size */) {\n            if (keyValues[i] === key)\n                return i;\n        }\n        return -1;\n    }\n    function getSinglePropIndexValue(context, directiveIndex, offset, isClassBased) {\n        var singlePropOffsetRegistryIndex = context[1 /* DirectiveRegistryPosition */][(directiveIndex * 4 /* Size */) +\n            1 /* SinglePropValuesIndexOffset */];\n        var offsets = context[4 /* SinglePropOffsetPositions */];\n        var indexForOffset = singlePropOffsetRegistryIndex +\n            2 /* ValueStartPosition */ +\n            (isClassBased ?\n                offsets[singlePropOffsetRegistryIndex + 0 /* StylesCountPosition */] :\n                0) +\n            offset;\n        return offsets[indexForOffset];\n    }\n    function getStyleSanitizer(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        var value = dirs[directiveIndex * 4 /* Size */ +\n            3 /* StyleSanitizerOffset */] ||\n            dirs[3 /* StyleSanitizerOffset */] || null;\n        return value;\n    }\n    function isDirectiveDirty(context, directiveIndex) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        return dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */];\n    }\n    function setDirectiveDirty(context, directiveIndex, dirtyYes) {\n        var dirs = context[1 /* DirectiveRegistryPosition */];\n        dirs[directiveIndex * 4 /* Size */ +\n            2 /* DirtyFlagOffset */] = dirtyYes;\n    }\n    function allowValueChange(currentValue, newValue, currentDirectiveOwner, newDirectiveOwner) {\n        // the code below relies the importance of directive's being tied to their\n        // index value. The index values for each directive are derived from being\n        // registered into the styling context directive registry. The most important\n        // directive is the parent component directive (the template) and each directive\n        // that is added after is considered less important than the previous entry. This\n        // prioritization of directives enables the styling algorithm to decide if a style\n        // or class should be allowed to be updated/replaced incase an earlier directive\n        // already wrote to the exact same style-property or className value. In other words\n        // ... this decides what to do if and when there is a collision.\n        if (currentValue) {\n            if (newValue) {\n                // if a directive index is lower than it always has priority over the\n                // previous directive's value...\n                return newDirectiveOwner <= currentDirectiveOwner;\n            }\n            else {\n                // only write a null value incase it's the same owner writing it.\n                // this avoids having a higher-priority directive write to null\n                // only to have a lesser-priority directive change right to a\n                // non-null value immediately afterwards.\n                return currentDirectiveOwner === newDirectiveOwner;\n            }\n        }\n        return true;\n    }\n    /**\n     * This function is only designed to be called for `[class]` bindings when\n     * `[ngClass]` (or something that uses `class` as an input) is present. Once\n     * directive host bindings fully work for `[class]` and `[style]` inputs\n     * then this can be deleted.\n     */\n    function getInitialClassNameValue(context) {\n        var className = context[6 /* CachedClassValueOrInitialClassString */];\n        if (className == null) {\n            className = '';\n            var initialClassValues = context[3 /* InitialClassValuesPosition */];\n            for (var i = 1 /* KeyValueStartPosition */; i < initialClassValues.length; i += 2 /* Size */) {\n                var isPresent = initialClassValues[i + 1];\n                if (isPresent) {\n                    className += (className.length ? ' ' : '') + initialClassValues[i];\n                }\n            }\n            context[6 /* CachedClassValueOrInitialClassString */] = className;\n        }\n        return className;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A permanent marker promise which signifies that the current CD tree is\n     * clean.\n     */\n    var _CLEAN_PROMISE = Promise.resolve(null);\n    /**\n     * Refreshes the view, executing the following steps in that order:\n     * triggers init hooks, refreshes dynamic embedded views, triggers content hooks, sets host\n     * bindings, refreshes child components.\n     * Note: view hooks are triggered later when leaving the view.\n     */\n    function refreshDescendantViews(lView) {\n        var tView = lView[TVIEW];\n        // This needs to be set before children are processed to support recursive components\n        tView.firstTemplatePass = false;\n        setFirstTemplatePass(false);\n        // If this is a creation pass, we should not call lifecycle hooks or evaluate bindings.\n        // This will be done in the update pass.\n        if (!isCreationMode(lView)) {\n            var checkNoChangesMode = getCheckNoChangesMode();\n            executeInitHooks(lView, tView, checkNoChangesMode);\n            refreshDynamicEmbeddedViews(lView);\n            // Content query results must be refreshed before content hooks are called.\n            refreshContentQueries(tView);\n            executeHooks(lView, tView.contentHooks, tView.contentCheckHooks, checkNoChangesMode);\n            setHostBindings(tView, lView);\n        }\n        refreshChildComponents(tView.components);\n    }\n    /** Sets the host bindings for the current view. */\n    function setHostBindings(tView, viewData) {\n        if (tView.expandoInstructions) {\n            var bindingRootIndex = viewData[BINDING_INDEX] = tView.expandoStartIndex;\n            setBindingRoot(bindingRootIndex);\n            var currentDirectiveIndex = -1;\n            var currentElementIndex = -1;\n            for (var i = 0; i < tView.expandoInstructions.length; i++) {\n                var instruction = tView.expandoInstructions[i];\n                if (typeof instruction === 'number') {\n                    if (instruction <= 0) {\n                        // Negative numbers mean that we are starting new EXPANDO block and need to update\n                        // the current element and directive index.\n                        currentElementIndex = -instruction;\n                        // Injector block and providers are taken into account.\n                        var providerCount = tView.expandoInstructions[++i];\n                        bindingRootIndex += INJECTOR_BLOOM_PARENT_SIZE + providerCount;\n                        currentDirectiveIndex = bindingRootIndex;\n                    }\n                    else {\n                        // This is either the injector size (so the binding root can skip over directives\n                        // and get to the first set of host bindings on this node) or the host var count\n                        // (to get to the next set of host bindings on this node).\n                        bindingRootIndex += instruction;\n                    }\n                    setBindingRoot(bindingRootIndex);\n                }\n                else {\n                    // If it's not a number, it's a host binding function that needs to be executed.\n                    if (instruction !== null) {\n                        viewData[BINDING_INDEX] = bindingRootIndex;\n                        instruction(2 /* Update */, readElementValue(viewData[currentDirectiveIndex]), currentElementIndex);\n                    }\n                    currentDirectiveIndex++;\n                }\n            }\n        }\n    }\n    /** Refreshes content queries for all directives in the given view. */\n    function refreshContentQueries(tView) {\n        if (tView.contentQueries != null) {\n            for (var i = 0; i < tView.contentQueries.length; i += 2) {\n                var directiveDefIdx = tView.contentQueries[i];\n                var directiveDef = tView.data[directiveDefIdx];\n                directiveDef.contentQueriesRefresh(directiveDefIdx - HEADER_OFFSET, tView.contentQueries[i + 1]);\n            }\n        }\n    }\n    /** Refreshes child components in the current view. */\n    function refreshChildComponents(components) {\n        if (components != null) {\n            for (var i = 0; i < components.length; i++) {\n                componentRefresh(components[i]);\n            }\n        }\n    }\n    function createLView(parentLView, tView, context, flags, rendererFactory, renderer, sanitizer, injector) {\n        var lView = tView.blueprint.slice();\n        lView[FLAGS] = flags | 1 /* CreationMode */ | 16 /* Attached */ | 32 /* RunInit */ |\n            2 /* FirstLViewPass */;\n        lView[PARENT] = lView[DECLARATION_VIEW] = parentLView;\n        lView[CONTEXT] = context;\n        lView[RENDERER_FACTORY] = (rendererFactory || parentLView && parentLView[RENDERER_FACTORY]);\n        ngDevMode && assertDefined(lView[RENDERER_FACTORY], 'RendererFactory is required');\n        lView[RENDERER] = (renderer || parentLView && parentLView[RENDERER]);\n        ngDevMode && assertDefined(lView[RENDERER], 'Renderer is required');\n        lView[SANITIZER] = sanitizer || parentLView && parentLView[SANITIZER] || null;\n        lView[INJECTOR] = injector || parentLView && parentLView[INJECTOR] || null;\n        return lView;\n    }\n    function createNodeAtIndex(index, type, native, name, attrs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var adjustedIndex = index + HEADER_OFFSET;\n        ngDevMode &&\n            assertLessThan(adjustedIndex, lView.length, \"Slot should have been initialized with null\");\n        lView[adjustedIndex] = native;\n        var tNode = tView.data[adjustedIndex];\n        if (tNode == null) {\n            // TODO(misko): Refactor createTNode so that it does not depend on LView.\n            tNode = tView.data[adjustedIndex] = createTNode(lView, type, adjustedIndex, name, attrs, null);\n        }\n        // Now link ourselves into the tree.\n        // We need this even if tNode exists, otherwise we might end up pointing to unexisting tNodes when\n        // we use i18n (especially with ICU expressions that update the DOM during the update phase).\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var isParent = getIsParent();\n        if (previousOrParentTNode) {\n            if (isParent && previousOrParentTNode.child == null &&\n                (tNode.parent !== null || previousOrParentTNode.type === 2 /* View */)) {\n                // We are in the same view, which means we are adding content node to the parent view.\n                previousOrParentTNode.child = tNode;\n            }\n            else if (!isParent) {\n                previousOrParentTNode.next = tNode;\n            }\n        }\n        if (tView.firstChild == null) {\n            tView.firstChild = tNode;\n        }\n        setPreviousOrParentTNode(tNode);\n        setIsParent(true);\n        return tNode;\n    }\n    function createViewNode(index, view) {\n        // View nodes are not stored in data because they can be added / removed at runtime (which\n        // would cause indices to change). Their TNodes are instead stored in tView.node.\n        if (view[TVIEW].node == null) {\n            view[TVIEW].node = createTNode(view, 2 /* View */, index, null, null, null);\n        }\n        return view[HOST_NODE] = view[TVIEW].node;\n    }\n    /**\n     * When elements are created dynamically after a view blueprint is created (e.g. through\n     * i18nApply() or ComponentFactory.create), we need to adjust the blueprint for future\n     * template passes.\n     */\n    function allocExpando(view) {\n        var tView = view[TVIEW];\n        if (tView.firstTemplatePass) {\n            tView.expandoStartIndex++;\n            tView.blueprint.push(null);\n            tView.data.push(null);\n            view.push(null);\n        }\n    }\n    /**\n     * Used for creating the LViewNode of a dynamic embedded view,\n     * either through ViewContainerRef.createEmbeddedView() or TemplateRef.createEmbeddedView().\n     * Such lViewNode will then be renderer with renderEmbeddedTemplate() (see below).\n     */\n    function createEmbeddedViewAndNode(tView, context, declarationView, renderer, queries, injectorIndex) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var lView = createLView(declarationView, tView, context, 4 /* CheckAlways */);\n        lView[DECLARATION_VIEW] = declarationView;\n        if (queries) {\n            lView[QUERIES] = queries.createView();\n        }\n        createViewNode(-1, lView);\n        if (tView.firstTemplatePass) {\n            tView.node.injectorIndex = injectorIndex;\n        }\n        setIsParent(_isParent);\n        setPreviousOrParentTNode(_previousOrParentTNode);\n        return lView;\n    }\n    /**\n     * Used for rendering embedded views (e.g. dynamically created views)\n     *\n     * Dynamically created views must store/retrieve their TViews differently from component views\n     * because their template functions are nested in the template functions of their hosts, creating\n     * closures. If their host template happens to be an embedded template in a loop (e.g. ngFor inside\n     * an ngFor), the nesting would mean we'd have multiple instances of the template function, so we\n     * can't store TViews in the template function itself (as we do for comps). Instead, we store the\n     * TView for dynamically created views on their host TNode, which only has one instance.\n     */\n    function renderEmbeddedTemplate(viewToRender, tView, context) {\n        var _isParent = getIsParent();\n        var _previousOrParentTNode = getPreviousOrParentTNode();\n        setIsParent(true);\n        setPreviousOrParentTNode(null);\n        var oldView;\n        if (viewToRender[FLAGS] & 128 /* IsRoot */) {\n            // This is a root view inside the view tree\n            tickRootContext(getRootContext(viewToRender));\n        }\n        else {\n            try {\n                setIsParent(true);\n                setPreviousOrParentTNode(null);\n                oldView = enterView(viewToRender, viewToRender[HOST_NODE]);\n                namespaceHTML();\n                tView.template(getRenderFlags(viewToRender), context);\n                // This must be set to false immediately after the first creation run because in an\n                // ngFor loop, all the views will be created together before update mode runs and turns\n                // off firstTemplatePass. If we don't set it here, instances will perform directive\n                // matching, etc again and again.\n                viewToRender[TVIEW].firstTemplatePass = false;\n                setFirstTemplatePass(false);\n                refreshDescendantViews(viewToRender);\n            }\n            finally {\n                leaveView(oldView);\n                setIsParent(_isParent);\n                setPreviousOrParentTNode(_previousOrParentTNode);\n            }\n        }\n    }\n    /**\n     * Retrieves a context at the level specified and saves it as the global, contextViewData.\n     * Will get the next level up if level is not specified.\n     *\n     * This is used to save contexts of parent views so they can be bound in embedded views, or\n     * in conjunction with reference() to bind a ref from a parent view.\n     *\n     * @param level The relative level of the view from which to grab context compared to contextVewData\n     * @returns context\n     */\n    function nextContext(level) {\n        if (level === void 0) { level = 1; }\n        return nextContextImpl(level);\n    }\n    function renderComponentOrTemplate(hostView, context, templateFn) {\n        var rendererFactory = hostView[RENDERER_FACTORY];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var normalExecutionPath = !getCheckNoChangesMode();\n        try {\n            if (normalExecutionPath && rendererFactory.begin) {\n                rendererFactory.begin();\n            }\n            if (isCreationMode(hostView)) {\n                // creation mode pass\n                if (templateFn) {\n                    namespaceHTML();\n                    templateFn(1 /* Create */, context);\n                }\n                refreshDescendantViews(hostView);\n                hostView[FLAGS] &= ~1 /* CreationMode */;\n            }\n            // update mode pass\n            templateFn && templateFn(2 /* Update */, context);\n            refreshDescendantViews(hostView);\n        }\n        finally {\n            if (normalExecutionPath && rendererFactory.end) {\n                rendererFactory.end();\n            }\n            leaveView(oldView);\n        }\n    }\n    /**\n     * This function returns the default configuration of rendering flags depending on when the\n     * template is in creation mode or update mode. Update block and create block are\n     * always run separately.\n     */\n    function getRenderFlags(view) {\n        return isCreationMode(view) ? 1 /* Create */ : 2 /* Update */;\n    }\n    //////////////////////////\n    //// Namespace\n    //////////////////////////\n    var _currentNamespace = null;\n    function namespaceSVG() {\n        _currentNamespace = 'http://www.w3.org/2000/svg';\n    }\n    function namespaceMathML() {\n        _currentNamespace = 'http://www.w3.org/1998/MathML/';\n    }\n    function namespaceHTML() {\n        _currentNamespace = null;\n    }\n    //////////////////////////\n    //// Element\n    //////////////////////////\n    /**\n     * Creates an empty element using {@link elementStart} and {@link elementEnd}\n     *\n     * @param index Index of the element in the data array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     */\n    function element(index, name, attrs, localRefs) {\n        elementStart(index, name, attrs, localRefs);\n        elementEnd();\n    }\n    /**\n     * Creates a logical container for other nodes (<ng-container>) backed by a comment node in the DOM.\n     * The instruction must later be followed by `elementContainerEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param attrs Set of attributes to be used when matching directives.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Even if this instruction accepts a set of attributes no actual attribute values are propagated to\n     * the DOM (as a comment node can't have attributes). Attributes are here only for directive\n     * matching purposes and setting initial inputs of directives.\n     */\n    function elementContainerStart(index, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var renderer = lView[RENDERER];\n        var tagName = 'ng-container';\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'element containers should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var native = renderer.createComment(ngDevMode ? tagName : '');\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 4 /* ElementContainer */, native, tagName, attrs || null);\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        attachPatchData(native, lView);\n    }\n    /** Mark the end of the <ng-container>. */\n    function elementContainerEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 4 /* ElementContainer */);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, previousOrParentTNode);\n    }\n    /**\n     * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n     *\n     * @param index Index of the element in the LView array\n     * @param name Name of the DOM Node\n     * @param attrs Statically bound set of attributes, classes, and styles to be written into the DOM\n     *              element on creation. Use [AttributeMarker] to denote the meaning of this array.\n     * @param localRefs A set of local reference bindings on the element.\n     *\n     * Attributes and localRefs are passed as an array of strings where elements with an even index\n     * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n     * ['id', 'warning5', 'class', 'alert']\n     */\n    function elementStart(index, name, attrs, localRefs) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        ngDevMode && assertEqual(lView[BINDING_INDEX], tView.bindingStartIndex, 'elements should be created before any bindings ');\n        ngDevMode && ngDevMode.rendererCreateElement++;\n        var native = elementCreate(name);\n        ngDevMode && assertDataInRange(lView, index - 1);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, native, name, attrs || null);\n        if (attrs) {\n            // it's important to only prepare styling-related datastructures once for a given\n            // tNode and not each time an element is created. Also, the styling code is designed\n            // to be patched and constructed at various points, but only up until the first element\n            // is created. Then the styling context is locked and can only be instantiated for each\n            // successive element that is created.\n            if (tView.firstTemplatePass && !tNode.stylingTemplate && hasStyling(attrs)) {\n                tNode.stylingTemplate = initializeStaticContext(attrs);\n            }\n            setUpAttributes(native, attrs);\n        }\n        appendChild(native, tNode, lView);\n        createDirectivesAndLocals(tView, lView, localRefs);\n        // any immediate children of a component or template container must be pre-emptively\n        // monkey-patched with the component view data so that the element can be inspected\n        // later on using any element discovery utility methods (see `element_discovery.ts`)\n        if (getElementDepthCount() === 0) {\n            attachPatchData(native, lView);\n        }\n        increaseElementDepthCount();\n        // if a directive contains a host binding for \"class\" then all class-based data will\n        // flow through that (except for `[class.prop]` bindings). This also includes initial\n        // static class values as well. (Note that this will be fixed once map-based `[style]`\n        // and `[class]` bindings work for multiple directives.)\n        if (tView.firstTemplatePass) {\n            var inputData = initializeTNodeInputs(tNode);\n            if (inputData && inputData.hasOwnProperty('class')) {\n                tNode.flags |= 8 /* hasClassInput */;\n            }\n        }\n        // There is no point in rendering styles when a class directive is present since\n        // it will take that over for us (this will be removed once #FW-882 is in).\n        if (tNode.stylingTemplate && (tNode.flags & 8 /* hasClassInput */) === 0) {\n            renderInitialStylesAndClasses(native, tNode.stylingTemplate, lView[RENDERER]);\n        }\n    }\n    /**\n     * Creates a native element from a tag name, using a renderer.\n     * @param name the tag name\n     * @param overriddenRenderer Optional A renderer to override the default one\n     * @returns the element created\n     */\n    function elementCreate(name, overriddenRenderer) {\n        var native;\n        var rendererToUse = overriddenRenderer || getLView()[RENDERER];\n        if (isProceduralRenderer(rendererToUse)) {\n            native = rendererToUse.createElement(name, _currentNamespace);\n        }\n        else {\n            if (_currentNamespace === null) {\n                native = rendererToUse.createElement(name);\n            }\n            else {\n                native = rendererToUse.createElementNS(_currentNamespace, name);\n            }\n        }\n        return native;\n    }\n    /**\n     * Creates directive instances and populates local refs.\n     *\n     * @param localRefs Local refs of the node in question\n     * @param localRefExtractor mapping function that extracts local ref value from TNode\n     */\n    function createDirectivesAndLocals(tView, viewData, localRefs, localRefExtractor) {\n        if (localRefExtractor === void 0) { localRefExtractor = getNativeByTNode; }\n        if (!getBindingsEnabled())\n            return;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getFirstTemplatePass()) {\n            ngDevMode && ngDevMode.firstTemplatePass++;\n            resolveDirectives(tView, viewData, findDirectiveMatches(tView, viewData, previousOrParentTNode), previousOrParentTNode, localRefs || null);\n        }\n        instantiateAllDirectives(tView, viewData, previousOrParentTNode);\n        invokeDirectivesHostBindings(tView, viewData, previousOrParentTNode);\n        saveResolvedLocalsInData(viewData, previousOrParentTNode, localRefExtractor);\n    }\n    /**\n     * Takes a list of local names and indices and pushes the resolved local variable values\n     * to LView in the same order as they are loaded in the template with load().\n     */\n    function saveResolvedLocalsInData(viewData, tNode, localRefExtractor) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            var localIndex = tNode.index + 1;\n            for (var i = 0; i < localNames.length; i += 2) {\n                var index = localNames[i + 1];\n                var value = index === -1 ?\n                    localRefExtractor(tNode, viewData) :\n                    viewData[index];\n                viewData[localIndex++] = value;\n            }\n        }\n    }\n    /**\n     * Gets TView from a template function or creates a new TView\n     * if it doesn't already exist.\n     *\n     * @param templateFn The template from which to get static data\n     * @param consts The number of nodes, local refs, and pipes in this view\n     * @param vars The number of bindings and pure function bindings in this view\n     * @param directives Directive defs that should be saved on TView\n     * @param pipes Pipe defs that should be saved on TView\n     * @returns TView\n     */\n    function getOrCreateTView(templateFn, consts, vars, directives, pipes, viewQuery) {\n        // TODO(misko): reading `ngPrivateData` here is problematic for two reasons\n        // 1. It is a megamorphic call on each invocation.\n        // 2. For nested embedded views (ngFor inside ngFor) the template instance is per\n        //    outer template invocation, which means that no such property will exist\n        // Correct solution is to only put `ngPrivateData` on the Component template\n        // and not on embedded templates.\n        return templateFn.ngPrivateData ||\n            (templateFn.ngPrivateData =\n                createTView(-1, templateFn, consts, vars, directives, pipes, viewQuery));\n    }\n    /**\n     * Creates a TView instance\n     *\n     * @param viewIndex The viewBlockId for inline views, or -1 if it's a component/dynamic\n     * @param templateFn Template function\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param directives Registry of directives for this view\n     * @param pipes Registry of pipes for this view\n     */\n    function createTView(viewIndex, templateFn, consts, vars, directives, pipes, viewQuery) {\n        ngDevMode && ngDevMode.tView++;\n        var bindingStartIndex = HEADER_OFFSET + consts;\n        // This length does not yet contain host bindings from child directives because at this point,\n        // we don't know which directives are active on this template. As soon as a directive is matched\n        // that has a host binding, we will update the blueprint with that def's hostVars count.\n        var initialViewLength = bindingStartIndex + vars;\n        var blueprint = createViewBlueprint(bindingStartIndex, initialViewLength);\n        return blueprint[TVIEW] = {\n            id: viewIndex,\n            blueprint: blueprint,\n            template: templateFn,\n            viewQuery: viewQuery,\n            node: null,\n            data: blueprint.slice(),\n            childIndex: -1,\n            bindingStartIndex: bindingStartIndex,\n            expandoStartIndex: initialViewLength,\n            expandoInstructions: null,\n            firstTemplatePass: true,\n            initHooks: null,\n            checkHooks: null,\n            contentHooks: null,\n            contentCheckHooks: null,\n            viewHooks: null,\n            viewCheckHooks: null,\n            destroyHooks: null,\n            pipeDestroyHooks: null,\n            cleanup: null,\n            contentQueries: null,\n            components: null,\n            directiveRegistry: typeof directives === 'function' ? directives() : directives,\n            pipeRegistry: typeof pipes === 'function' ? pipes() : pipes,\n            firstChild: null,\n        };\n    }\n    function createViewBlueprint(bindingStartIndex, initialViewLength) {\n        var blueprint = new Array(initialViewLength)\n            .fill(null, 0, bindingStartIndex)\n            .fill(NO_CHANGE, bindingStartIndex);\n        blueprint[CONTAINER_INDEX] = -1;\n        blueprint[BINDING_INDEX] = bindingStartIndex;\n        return blueprint;\n    }\n    function setUpAttributes(native, attrs) {\n        var renderer = getLView()[RENDERER];\n        var isProc = isProceduralRenderer(renderer);\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i++];\n            if (typeof attrName == 'number') {\n                if (attrName === 0 /* NamespaceURI */) {\n                    // Namespaced attributes\n                    var namespaceURI = attrs[i++];\n                    var attrName_1 = attrs[i++];\n                    var attrVal = attrs[i++];\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    isProc ?\n                        renderer\n                            .setAttribute(native, attrName_1, attrVal, namespaceURI) :\n                        native.setAttributeNS(namespaceURI, attrName_1, attrVal);\n                }\n                else {\n                    // All other `AttributeMarker`s are ignored here.\n                    break;\n                }\n            }\n            else {\n                /// attrName is string;\n                var attrVal = attrs[i++];\n                if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n                    // Standard attributes\n                    ngDevMode && ngDevMode.rendererSetAttribute++;\n                    if (isAnimationProp(attrName)) {\n                        if (isProc) {\n                            renderer.setProperty(native, attrName, attrVal);\n                        }\n                    }\n                    else {\n                        isProc ?\n                            renderer\n                                .setAttribute(native, attrName, attrVal) :\n                            native.setAttribute(attrName, attrVal);\n                    }\n                }\n            }\n        }\n    }\n    function createError(text, token) {\n        return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n    }\n    /**\n     * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n     *\n     * @param elementOrSelector Render element or CSS selector to locate the element.\n     */\n    function locateHostElement(factory, elementOrSelector) {\n        var defaultRenderer = factory.createRenderer(null, null);\n        var rNode = typeof elementOrSelector === 'string' ?\n            (isProceduralRenderer(defaultRenderer) ?\n                defaultRenderer.selectRootElement(elementOrSelector) :\n                defaultRenderer.querySelector(elementOrSelector)) :\n            elementOrSelector;\n        if (ngDevMode && !rNode) {\n            if (typeof elementOrSelector === 'string') {\n                throw createError('Host node with selector not found:', elementOrSelector);\n            }\n            else {\n                throw createError('Host node is required:', elementOrSelector);\n            }\n        }\n        return rNode;\n    }\n    /**\n     * Adds an event listener to the current node.\n     *\n     * If an output exists on one of the node's directives, it also subscribes to the output\n     * and saves the subscription for later cleanup.\n     *\n     * @param eventName Name of the event\n     * @param listenerFn The function to be called when event emits\n     * @param useCapture Whether or not to use capture in event listener.\n     */\n    function listener(eventName, listenerFn, useCapture) {\n        if (useCapture === void 0) { useCapture = false; }\n        var lView = getLView();\n        var tNode = getPreviousOrParentTNode();\n        var tView = lView[TVIEW];\n        var firstTemplatePass = tView.firstTemplatePass;\n        var tCleanup = firstTemplatePass && (tView.cleanup || (tView.cleanup = []));\n        ngDevMode && assertNodeOfPossibleTypes(tNode, 3 /* Element */, 0 /* Container */, 4 /* ElementContainer */);\n        // add native event listener - applicable to elements only\n        if (tNode.type === 3 /* Element */) {\n            var native = getNativeByTNode(tNode, lView);\n            ngDevMode && ngDevMode.rendererAddEventListener++;\n            var renderer = lView[RENDERER];\n            var lCleanup = getCleanup(lView);\n            var lCleanupIndex = lCleanup.length;\n            var useCaptureOrSubIdx = useCapture;\n            // In order to match current behavior, native DOM event listeners must be added for all\n            // events (including outputs).\n            if (isProceduralRenderer(renderer)) {\n                var cleanupFn = renderer.listen(native, eventName, listenerFn);\n                lCleanup.push(listenerFn, cleanupFn);\n                useCaptureOrSubIdx = lCleanupIndex + 1;\n            }\n            else {\n                var wrappedListener = wrapListenerWithPreventDefault(listenerFn);\n                native.addEventListener(eventName, wrappedListener, useCapture);\n                lCleanup.push(wrappedListener);\n            }\n            tCleanup && tCleanup.push(eventName, tNode.index, lCleanupIndex, useCaptureOrSubIdx);\n        }\n        // subscribe to directive outputs\n        if (tNode.outputs === undefined) {\n            // if we create TNode here, inputs must be undefined so we know they still need to be\n            // checked\n            tNode.outputs = generatePropertyAliases(tNode, 1 /* Output */);\n        }\n        var outputs = tNode.outputs;\n        var props;\n        if (outputs && (props = outputs[eventName])) {\n            var propsLength = props.length;\n            if (propsLength) {\n                var lCleanup = getCleanup(lView);\n                for (var i = 0; i < propsLength; i += 2) {\n                    ngDevMode && assertDataInRange(lView, props[i]);\n                    var subscription = lView[props[i]][props[i + 1]].subscribe(listenerFn);\n                    var idx = lCleanup.length;\n                    lCleanup.push(listenerFn, subscription);\n                    tCleanup && tCleanup.push(eventName, tNode.index, idx, -(idx + 1));\n                }\n            }\n        }\n    }\n    /**\n     * Saves context for this cleanup function in LView.cleanupInstances.\n     *\n     * On the first template pass, saves in TView:\n     * - Cleanup function\n     * - Index of context we just saved in LView.cleanupInstances\n     */\n    function storeCleanupWithContext(lView, context, cleanupFn) {\n        var lCleanup = getCleanup(lView);\n        lCleanup.push(context);\n        if (lView[TVIEW].firstTemplatePass) {\n            getTViewCleanup(lView).push(cleanupFn, lCleanup.length - 1);\n        }\n    }\n    /**\n     * Saves the cleanup function itself in LView.cleanupInstances.\n     *\n     * This is necessary for functions that are wrapped with their contexts, like in renderer2\n     * listeners.\n     *\n     * On the first template pass, the index of the cleanup function is saved in TView.\n     */\n    function storeCleanupFn(view, cleanupFn) {\n        getCleanup(view).push(cleanupFn);\n        if (view[TVIEW].firstTemplatePass) {\n            getTViewCleanup(view).push(view[CLEANUP].length - 1, null);\n        }\n    }\n    /** Mark the end of the element. */\n    function elementEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertHasParent(getPreviousOrParentTNode());\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 3 /* Element */);\n        var lView = getLView();\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(getLView()[TVIEW], previousOrParentTNode);\n        decreaseElementDepthCount();\n        // this is fired at the end of elementEnd because ALL of the stylingBindings code\n        // (for directives and the template) have now executed which means the styling\n        // context can be instantiated properly.\n        if (hasClassInput(previousOrParentTNode)) {\n            var stylingContext = getStylingContext(previousOrParentTNode.index, lView);\n            setInputsForProperty(lView, previousOrParentTNode.inputs['class'], getInitialClassNameValue(stylingContext));\n        }\n    }\n    /**\n     * Updates the value of removes an attribute on an Element.\n     *\n     * @param number index The index of the element in the data array\n     * @param name name The name of the attribute.\n     * @param value value The attribute is removed when value is `null` or `undefined`.\n     *                  Otherwise the attribute value is set to the stringified value.\n     * @param sanitizer An optional function used to sanitize the value.\n     */\n    function elementAttribute(index, name, value, sanitizer) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            var renderer = lView[RENDERER];\n            var element_1 = getNativeByIndex(index, lView);\n            if (value == null) {\n                ngDevMode && ngDevMode.rendererRemoveAttribute++;\n                isProceduralRenderer(renderer) ? renderer.removeAttribute(element_1, name) :\n                    element_1.removeAttribute(name);\n            }\n            else {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n                isProceduralRenderer(renderer) ? renderer.setAttribute(element_1, name, strValue) :\n                    element_1.setAttribute(name, strValue);\n            }\n        }\n    }\n    /**\n     * Update a property on an element.\n     *\n     * If the property name also exists as an input property on one of the element's directives,\n     * the component property will be set instead of the element property. This check must\n     * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function elementProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly);\n    }\n    /**\n     * Updates a synthetic host binding (e.g. `[@foo]`) on a component.\n     *\n     * This instruction is for compatibility purposes and is designed to ensure that a\n     * synthetic host binding (e.g. `@HostBinding('@foo')`) properly gets rendered in\n     * the component's renderer. Normally all host bindings are evaluated with the parent\n     * component's renderer, but, in the case of animation @triggers, they need to be\n     * evaluated with the sub components renderer (because that's where the animation\n     * triggers are defined).\n     *\n     * Do not use this instruction as a replacement for `elementProperty`. This instruction\n     * only exists to ensure compatibility with the ViewEngine's host binding behavior.\n     *\n     * @param index The index of the element to update in the data array\n     * @param propName Name of property. Because it is going to DOM, this is not subject to\n     *        renaming as part of minification.\n     * @param value New value to write.\n     * @param sanitizer An optional function used to sanitize the value.\n     * @param nativeOnly Whether or not we should only set native properties and skip input check\n     * (this is necessary for host property bindings)\n     */\n    function componentHostSyntheticProperty(index, propName, value, sanitizer, nativeOnly) {\n        elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadComponentRenderer);\n    }\n    function loadComponentRenderer(tNode, lView) {\n        var componentLView = lView[tNode.index];\n        return componentLView[RENDERER];\n    }\n    function elementPropertyInternal(index, propName, value, sanitizer, nativeOnly, loadRendererFn) {\n        if (value === NO_CHANGE)\n            return;\n        var lView = getLView();\n        var element = getNativeByIndex(index, lView);\n        var tNode = getTNode(index, lView);\n        var inputData;\n        var dataValue;\n        if (!nativeOnly && (inputData = initializeTNodeInputs(tNode)) &&\n            (dataValue = inputData[propName])) {\n            setInputsForProperty(lView, dataValue, value);\n            if (isComponent(tNode))\n                markDirtyIfOnPush(lView, index + HEADER_OFFSET);\n            if (ngDevMode) {\n                if (tNode.type === 3 /* Element */ || tNode.type === 0 /* Container */) {\n                    setNgReflectProperties(lView, element, tNode.type, dataValue, value);\n                }\n            }\n        }\n        else if (tNode.type === 3 /* Element */) {\n            var renderer = loadRendererFn ? loadRendererFn(tNode, lView) : lView[RENDERER];\n            // It is assumed that the sanitizer is only added when the compiler determines that the property\n            // is risky, so sanitization can be done without further checks.\n            value = sanitizer != null ? sanitizer(value) : value;\n            ngDevMode && ngDevMode.rendererSetProperty++;\n            if (isProceduralRenderer(renderer)) {\n                renderer.setProperty(element, propName, value);\n            }\n            else if (!isAnimationProp(propName)) {\n                element.setProperty ? element.setProperty(propName, value) :\n                    element[propName] = value;\n            }\n        }\n    }\n    /**\n     * Constructs a TNode object from the arguments.\n     *\n     * @param type The type of the node\n     * @param adjustedIndex The index of the TNode in TView.data, adjusted for HEADER_OFFSET\n     * @param tagName The tag name of the node\n     * @param attrs The attributes defined on this node\n     * @param tViews Any TViews attached to this node\n     * @returns the TNode object\n     */\n    function createTNode(lView, type, adjustedIndex, tagName, attrs, tViews) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        ngDevMode && ngDevMode.tNode++;\n        var parent = getIsParent() ? previousOrParentTNode : previousOrParentTNode && previousOrParentTNode.parent;\n        // Parents cannot cross component boundaries because components will be used in multiple places,\n        // so it's only set if the view is the same.\n        var parentInSameView = parent && lView && parent !== lView[HOST_NODE];\n        var tParent = parentInSameView ? parent : null;\n        return {\n            type: type,\n            index: adjustedIndex,\n            injectorIndex: tParent ? tParent.injectorIndex : -1,\n            directiveStart: -1,\n            directiveEnd: -1,\n            flags: 0,\n            providerIndexes: 0,\n            tagName: tagName,\n            attrs: attrs,\n            localNames: null,\n            initialInputs: undefined,\n            inputs: undefined,\n            outputs: undefined,\n            tViews: tViews,\n            next: null,\n            child: null,\n            parent: tParent,\n            detached: null,\n            stylingTemplate: null,\n            projection: null\n        };\n    }\n    /**\n     * Given a list of directive indices and minified input names, sets the\n     * input properties on the corresponding directives.\n     */\n    function setInputsForProperty(lView, inputs, value) {\n        for (var i = 0; i < inputs.length; i += 2) {\n            ngDevMode && assertDataInRange(lView, inputs[i]);\n            lView[inputs[i]][inputs[i + 1]] = value;\n        }\n    }\n    function setNgReflectProperties(lView, element, type, inputs, value) {\n        var _a;\n        for (var i = 0; i < inputs.length; i += 2) {\n            var renderer = lView[RENDERER];\n            var attrName = normalizeDebugBindingName(inputs[i + 1]);\n            var debugValue = normalizeDebugBindingValue(value);\n            if (type === 3 /* Element */) {\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(element, attrName, debugValue) :\n                    element.setAttribute(attrName, debugValue);\n            }\n            else if (value !== undefined) {\n                var value_1 = \"bindings=\" + JSON.stringify((_a = {}, _a[attrName] = debugValue, _a), null, 2);\n                if (isProceduralRenderer(renderer)) {\n                    renderer.setValue(element, value_1);\n                }\n                else {\n                    element.textContent = value_1;\n                }\n            }\n        }\n    }\n    /**\n     * Consolidates all inputs or outputs of all directives on this logical node.\n     *\n     * @param tNodeFlags node flags\n     * @param direction whether to consider inputs or outputs\n     * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n     */\n    function generatePropertyAliases(tNode, direction) {\n        var tView = getLView()[TVIEW];\n        var propStore = null;\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (end > start) {\n            var isInput = direction === 0 /* Input */;\n            var defs = tView.data;\n            for (var i = start; i < end; i++) {\n                var directiveDef = defs[i];\n                var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n                for (var publicName in propertyAliasMap) {\n                    if (propertyAliasMap.hasOwnProperty(publicName)) {\n                        propStore = propStore || {};\n                        var internalName = propertyAliasMap[publicName];\n                        var hasProperty = propStore.hasOwnProperty(publicName);\n                        hasProperty ? propStore[publicName].push(i, internalName) :\n                            (propStore[publicName] = [i, internalName]);\n                    }\n                }\n            }\n        }\n        return propStore;\n    }\n    /**\n     * Assign any inline style values to the element during creation mode.\n     *\n     * This instruction is meant to be called during creation mode to register all\n     * dynamic style and class bindings on the element. Note for static values (no binding)\n     * see `elementStart` and `elementHostAttrs`.\n     *\n     * @param classBindingNames An array containing bindable class names.\n     *        The `elementClassProp` refers to the class name by index in this array.\n     *        (i.e. `['foo', 'bar']` means `foo=0` and `bar=1`).\n     * @param styleBindingNames An array containing bindable style properties.\n     *        The `elementStyleProp` refers to the class name by index in this array.\n     *        (i.e. `['width', 'height']` means `width=0` and `height=1`).\n     * @param styleSanitizer An optional sanitizer function that will be used to sanitize any CSS\n     *        property values that are applied to the element (during rendering).\n     *        Note that the sanitizer instance itself is tied to the `directive` (if  provided).\n     * @param directive A directive instance the styling is associated with. If not provided\n     *        current view's controller instance is assumed.\n     *\n     * @publicApi\n     */\n    function elementStyling(classBindingNames, styleBindingNames, styleSanitizer, directive) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = createEmptyStylingContext();\n        }\n        updateContextWithBindings(tNode.stylingTemplate, directive || null, classBindingNames, styleBindingNames, styleSanitizer, hasClassInput(tNode));\n    }\n    /**\n     * Assign static styling values to a host element.\n     *\n     * NOTE: This instruction is meant to used from `hostBindings` function only.\n     *\n     * @param directive A directive instance the styling is associated with.\n     * @param attrs An array containing class and styling information. The values must be marked with\n     *              `AttributeMarker`.\n     *\n     *        ```\n     *        var attrs = [AttributeMarker.Classes, 'foo', 'bar',\n     *                     AttributeMarker.Styles, 'width', '100px', 'height, '200px']\n     *        elementHostAttrs(directive, attrs);\n     *        ```\n     *\n     * @publicApi\n     */\n    function elementHostAttrs(directive, attrs) {\n        var tNode = getPreviousOrParentTNode();\n        if (!tNode.stylingTemplate) {\n            tNode.stylingTemplate = initializeStaticContext(attrs);\n        }\n        patchContextWithStaticAttrs(tNode.stylingTemplate, attrs, directive);\n    }\n    /**\n     * Apply styling binding to the element.\n     *\n     * This instruction is meant to be run after `elementStyle` and/or `elementStyleProp`.\n     * if any styling bindings have changed then the changes are flushed to the element.\n     *\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStylingApply(index, directive) {\n        var lView = getLView();\n        var isFirstRender = (lView[FLAGS] & 2 /* FirstLViewPass */) !== 0;\n        var totalPlayersQueued = renderStyling(getStylingContext(index + HEADER_OFFSET, lView), lView[RENDERER], lView, isFirstRender, null, null, directive);\n        if (totalPlayersQueued > 0) {\n            var rootContext = getRootContext(lView);\n            scheduleTick(rootContext, 2 /* FlushPlayers */);\n        }\n    }\n    /**\n     * Update a style bindings value on an element.\n     *\n     * If the style value is `null` then it will be removed from the element\n     * (or assigned a different value depending if there are any styles placed\n     * on the element with `elementStyle` or any styles that are present\n     * from when the element was created (with `elementStyling`).\n     *\n     * (Note that the styling element is updated as part of `elementStylingApply`.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param styleIndex Index of style to update. This index value refers to the\n     *        index of the style in the style bindings array that was passed into\n     *        `elementStlyingBindings`.\n     * @param value New value to write (null to remove). Note that if a directive also\n     *        attempts to write to the same binding value then it will only be able to\n     *        do so if the template binding value is `null` (or doesn't exist at all).\n     * @param suffix Optional suffix. Used with scalar values to add unit such as `px`.\n     *        Note that when a suffix is provided then the underlying sanitizer will\n     *        be ignored.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementStyleProp(index, styleIndex, value, suffix, directive) {\n        var valueToAdd = null;\n        if (value !== null) {\n            if (suffix) {\n                // when a suffix is applied then it will bypass\n                // sanitization entirely (b/c a new string is created)\n                valueToAdd = stringify$1(value) + suffix;\n            }\n            else {\n                // sanitization happens by dealing with a String value\n                // this means that the string value will be passed through\n                // into the style rendering later (which is where the value\n                // will be sanitized before it is applied)\n                valueToAdd = value;\n            }\n        }\n        updateStyleProp(getStylingContext(index + HEADER_OFFSET, getLView()), styleIndex, valueToAdd, directive);\n    }\n    /**\n     * Add or remove a class via a class binding on a DOM element.\n     *\n     * This instruction is meant to handle the [class.foo]=\"exp\" case and, therefore,\n     * the class itself must already be applied using `elementStyling` within\n     * the creation block.\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classIndex Index of class to toggle. This index value refers to the\n     *        index of the class in the class bindings array that was passed into\n     *        `elementStlyingBindings` (which is meant to be called before this\n     *        function is).\n     * @param value A true/false value which will turn the class on or off.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n    components\n     *\n     * @publicApi\n     */\n    function elementClassProp(index, classIndex, value, directive) {\n        var onOrOffClassValue = (value instanceof BoundPlayerFactory) ? value : (!!value);\n        updateClassProp(getStylingContext(index + HEADER_OFFSET, getLView()), classIndex, onOrOffClassValue, directive);\n    }\n    /**\n     * Update style and/or class bindings using object literal.\n     *\n     * This instruction is meant apply styling via the `[style]=\"exp\"` and `[class]=\"exp\"` template\n     * bindings. When styles are applied to the Element they will then be placed with respect to\n     * any styles set with `elementStyleProp`. If any styles are set to `null` then they will be\n     * removed from the element.\n     *\n     * (Note that the styling instruction will not be applied until `elementStylingApply` is called.)\n     *\n     * @param index Index of the element's with which styling is associated.\n     * @param classes A key/value style map of CSS classes that will be added to the given element.\n     *        Any missing classes (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's list of CSS classes.\n     * @param styles A key/value style map of the styles that will be applied to the given element.\n     *        Any missing styles (that have already been applied to the element beforehand) will be\n     *        removed (unset) from the element's styling.\n     * @param directive Directive instance that is attempting to change styling. (Defaults to the\n     *        component of the current view).\n     *\n     * @publicApi\n     */\n    function elementStylingMap(index, classes, styles, directive) {\n        if (directive != undefined)\n            return hackImplementationOfElementStylingMap(index, classes, styles, directive); // supported in next PR\n        var lView = getLView();\n        var tNode = getTNode(index, lView);\n        var stylingContext = getStylingContext(index + HEADER_OFFSET, lView);\n        if (hasClassInput(tNode) && classes !== NO_CHANGE) {\n            var initialClasses = getInitialClassNameValue(stylingContext);\n            var classInputVal = (initialClasses.length ? (initialClasses + ' ') : '') + classes;\n            setInputsForProperty(lView, tNode.inputs['class'], classInputVal);\n        }\n        else {\n            updateStylingMap(stylingContext, classes, styles);\n        }\n    }\n    /* START OF HACK BLOCK */\n    function hackImplementationOfElementStylingMap(index, classes, styles, directive) {\n        throw new Error('unimplemented. Should not be needed by ViewEngine compatibility');\n    }\n    /* END OF HACK BLOCK */\n    //////////////////////////\n    //// Text\n    //////////////////////////\n    /**\n     * Create static text node\n     *\n     * @param index Index of the node in the data array\n     * @param value Value to write. This value will be stringified.\n     */\n    function text(index, value) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'text nodes should be created before any bindings');\n        ngDevMode && ngDevMode.rendererCreateTextNode++;\n        var textNative = createTextNode(value, lView[RENDERER]);\n        var tNode = createNodeAtIndex(index, 3 /* Element */, textNative, null, null);\n        // Text nodes are self closing.\n        setIsParent(false);\n        appendChild(textNative, tNode, lView);\n    }\n    /**\n     * Create text node with binding\n     * Bindings should be handled externally with the proper interpolation(1-8) method\n     *\n     * @param index Index of the node in the data array.\n     * @param value Stringified value to write.\n     */\n    function textBinding(index, value) {\n        if (value !== NO_CHANGE) {\n            var lView = getLView();\n            ngDevMode && assertDataInRange(lView, index + HEADER_OFFSET);\n            var element_2 = getNativeByIndex(index, lView);\n            ngDevMode && assertDefined(element_2, 'native element should exist');\n            ngDevMode && ngDevMode.rendererSetText++;\n            var renderer = lView[RENDERER];\n            isProceduralRenderer(renderer) ? renderer.setValue(element_2, stringify$1(value)) :\n                element_2.textContent = stringify$1(value);\n        }\n    }\n    //////////////////////////\n    //// Directive\n    //////////////////////////\n    /**\n     * Instantiate a root component.\n     */\n    function instantiateRootComponent(tView, viewData, def) {\n        var rootTNode = getPreviousOrParentTNode();\n        if (tView.firstTemplatePass) {\n            if (def.providersResolver)\n                def.providersResolver(def);\n            generateExpandoInstructionBlock(tView, rootTNode, 1);\n            baseResolveDirective(tView, viewData, def, def.factory);\n        }\n        var directive = getNodeInjectable(tView.data, viewData, viewData.length - 1, rootTNode);\n        postProcessBaseDirective(viewData, rootTNode, directive, def);\n        return directive;\n    }\n    /**\n     * Resolve the matched directives on a node.\n     */\n    function resolveDirectives(tView, viewData, directives, tNode, localRefs) {\n        // Please make sure to have explicit type for `exportsMap`. Inferred type triggers bug in tsickle.\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var exportsMap = localRefs ? { '': -1 } : null;\n        if (directives) {\n            initNodeFlags(tNode, tView.data.length, directives.length);\n            // When the same token is provided by several directives on the same node, some rules apply in\n            // the viewEngine:\n            // - viewProviders have priority over providers\n            // - the last directive in NgModule.declarations has priority over the previous one\n            // So to match these rules, the order in which providers are added in the arrays is very\n            // important.\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                if (def.providersResolver)\n                    def.providersResolver(def);\n            }\n            generateExpandoInstructionBlock(tView, tNode, directives.length);\n            for (var i = 0; i < directives.length; i++) {\n                var def = directives[i];\n                var directiveDefIdx = tView.data.length;\n                baseResolveDirective(tView, viewData, def, def.factory);\n                saveNameToExportMap(tView.data.length - 1, def, exportsMap);\n                // Init hooks are queued now so ngOnInit is called in host components before\n                // any projected components.\n                queueInitHooks(directiveDefIdx, def.onInit, def.doCheck, tView);\n            }\n        }\n        if (exportsMap)\n            cacheMatchingLocalNames(tNode, localRefs, exportsMap);\n    }\n    /**\n     * Instantiate all the directives that were previously resolved on the current node.\n     */\n    function instantiateAllDirectives(tView, lView, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        if (!getFirstTemplatePass() && start < end) {\n            getOrCreateNodeInjectorForNode(tNode, lView);\n        }\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            if (isComponentDef(def)) {\n                addComponentLogic(lView, tNode, def);\n            }\n            var directive = getNodeInjectable(tView.data, lView, i, tNode);\n            postProcessDirective(lView, directive, def, i);\n        }\n    }\n    function invokeDirectivesHostBindings(tView, viewData, tNode) {\n        var start = tNode.directiveStart;\n        var end = tNode.directiveEnd;\n        var expando = tView.expandoInstructions;\n        var firstTemplatePass = getFirstTemplatePass();\n        for (var i = start; i < end; i++) {\n            var def = tView.data[i];\n            var directive = viewData[i];\n            if (def.hostBindings) {\n                var previousExpandoLength = expando.length;\n                setCurrentDirectiveDef(def);\n                def.hostBindings(1 /* Create */, directive, tNode.index - HEADER_OFFSET);\n                setCurrentDirectiveDef(null);\n                // `hostBindings` function may or may not contain `allocHostVars` call\n                // (e.g. it may not if it only contains host listeners), so we need to check whether\n                // `expandoInstructions` has changed and if not - we still push `hostBindings` to\n                // expando block, to make sure we execute it for DI cycle\n                if (previousExpandoLength === expando.length && firstTemplatePass) {\n                    expando.push(def.hostBindings);\n                }\n            }\n            else if (firstTemplatePass) {\n                expando.push(null);\n            }\n        }\n    }\n    /**\n    * Generates a new block in TView.expandoInstructions for this node.\n    *\n    * Each expando block starts with the element index (turned negative so we can distinguish\n    * it from the hostVar count) and the directive count. See more in VIEW_DATA.md.\n    */\n    function generateExpandoInstructionBlock(tView, tNode, directiveCount) {\n        ngDevMode && assertEqual(tView.firstTemplatePass, true, 'Expando block should only be generated on first template pass.');\n        var elementIndex = -(tNode.index - HEADER_OFFSET);\n        var providerStartIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n        var providerCount = tView.data.length - providerStartIndex;\n        (tView.expandoInstructions || (tView.expandoInstructions = [])).push(elementIndex, providerCount, directiveCount);\n    }\n    /**\n    * On the first template pass, we need to reserve space for host binding values\n    * after directives are matched (so all directives are saved, then bindings).\n    * Because we are updating the blueprint, we only need to do this once.\n    */\n    function prefillHostVars(tView, lView, totalHostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        for (var i = 0; i < totalHostVars; i++) {\n            lView.push(NO_CHANGE);\n            tView.blueprint.push(NO_CHANGE);\n            tView.data.push(null);\n        }\n    }\n    /**\n     * Process a directive on the current node after its creation.\n     */\n    function postProcessDirective(viewData, directive, def, directiveDefIdx) {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        postProcessBaseDirective(viewData, previousOrParentTNode, directive, def);\n        ngDevMode && assertDefined(previousOrParentTNode, 'previousOrParentTNode');\n        if (previousOrParentTNode && previousOrParentTNode.attrs) {\n            setInputsFromAttrs(directiveDefIdx, directive, def.inputs, previousOrParentTNode);\n        }\n        if (def.contentQueries) {\n            def.contentQueries(directiveDefIdx);\n        }\n        if (isComponentDef(def)) {\n            var componentView = getComponentViewByIndex(previousOrParentTNode.index, viewData);\n            componentView[CONTEXT] = directive;\n        }\n    }\n    /**\n     * A lighter version of postProcessDirective() that is used for the root component.\n     */\n    function postProcessBaseDirective(lView, previousOrParentTNode, directive, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'directives should be created before any bindings');\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        attachPatchData(directive, lView);\n        if (native) {\n            attachPatchData(native, lView);\n        }\n        // TODO(misko): setUpAttributes should be a feature for better treeshakability.\n        if (def.attributes != null && previousOrParentTNode.type == 3 /* Element */) {\n            setUpAttributes(native, def.attributes);\n        }\n    }\n    /**\n    * Matches the current node against all available selectors.\n    * If a component is matched (at most one), it is returned in first position in the array.\n    */\n    function findDirectiveMatches(tView, viewData, tNode) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'should run on first template pass only');\n        var registry = tView.directiveRegistry;\n        var matches = null;\n        if (registry) {\n            for (var i = 0; i < registry.length; i++) {\n                var def = registry[i];\n                if (isNodeMatchingSelectorList(tNode, def.selectors, /* isProjectionMode */ false)) {\n                    matches || (matches = []);\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(getPreviousOrParentTNode(), viewData), viewData, def.type);\n                    if (isComponentDef(def)) {\n                        if (tNode.flags & 1 /* isComponent */)\n                            throwMultipleComponentError(tNode);\n                        tNode.flags = 1 /* isComponent */;\n                        // The component is always stored first with directives after.\n                        matches.unshift(def);\n                    }\n                    else {\n                        matches.push(def);\n                    }\n                }\n            }\n        }\n        return matches;\n    }\n    /** Stores index of component's host element so it will be queued for view refresh during CD. */\n    function queueComponentIndexForCheck(previousOrParentTNode) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var tView = getLView()[TVIEW];\n        (tView.components || (tView.components = [])).push(previousOrParentTNode.index);\n    }\n    /**\n     * Stores host binding fn and number of host vars so it will be queued for binding refresh during\n     * CD.\n    */\n    function queueHostBindingForCheck(tView, def, hostVars) {\n        ngDevMode &&\n            assertEqual(getFirstTemplatePass(), true, 'Should only be called in first template pass.');\n        var expando = tView.expandoInstructions;\n        var length = expando.length;\n        // Check whether a given `hostBindings` function already exists in expandoInstructions,\n        // which can happen in case directive definition was extended from base definition (as a part of\n        // the `InheritDefinitionFeature` logic). If we found the same `hostBindings` function in the\n        // list, we just increase the number of host vars associated with that function, but do not add it\n        // into the list again.\n        if (length >= 2 && expando[length - 2] === def.hostBindings) {\n            expando[length - 1] = expando[length - 1] + hostVars;\n        }\n        else {\n            expando.push(def.hostBindings, hostVars);\n        }\n    }\n    /** Caches local names and their matching directive indices for query and template lookups. */\n    function cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n        if (localRefs) {\n            var localNames = tNode.localNames = [];\n            // Local names must be stored in tNode in the same order that localRefs are defined\n            // in the template to ensure the data is loaded in the same slots as their refs\n            // in the template (for template queries).\n            for (var i = 0; i < localRefs.length; i += 2) {\n                var index = exportsMap[localRefs[i + 1]];\n                if (index == null)\n                    throw new Error(\"Export of name '\" + localRefs[i + 1] + \"' not found!\");\n                localNames.push(localRefs[i], index);\n            }\n        }\n    }\n    /**\n    * Builds up an export map as directives are created, so local refs can be quickly mapped\n    * to their directive instances.\n    */\n    function saveNameToExportMap(index, def, exportsMap) {\n        if (exportsMap) {\n            if (def.exportAs)\n                exportsMap[def.exportAs] = index;\n            if (def.template)\n                exportsMap[''] = index;\n        }\n    }\n    /**\n     * Initializes the flags on the current node, setting all indices to the initial index,\n     * the directive count to 0, and adding the isComponent flag.\n     * @param index the initial index\n     */\n    function initNodeFlags(tNode, index, numberOfDirectives) {\n        ngDevMode && assertEqual(getFirstTemplatePass(), true, 'expected firstTemplatePass to be true');\n        var flags = tNode.flags;\n        ngDevMode && assertEqual(flags === 0 || flags === 1 /* isComponent */, true, 'expected node flags to not be initialized');\n        ngDevMode && assertNotEqual(numberOfDirectives, tNode.directiveEnd - tNode.directiveStart, 'Reached the max number of directives');\n        // When the first directive is created on a node, save the index\n        tNode.flags = flags & 1 /* isComponent */;\n        tNode.directiveStart = index;\n        tNode.directiveEnd = index + numberOfDirectives;\n        tNode.providerIndexes = index;\n    }\n    function baseResolveDirective(tView, viewData, def, directiveFactory) {\n        tView.data.push(def);\n        var nodeInjectorFactory = new NodeInjectorFactory(directiveFactory, isComponentDef(def), null);\n        tView.blueprint.push(nodeInjectorFactory);\n        viewData.push(nodeInjectorFactory);\n    }\n    function addComponentLogic(lView, previousOrParentTNode, def) {\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        var tView = getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery);\n        // Only component views should be added to the view tree directly. Embedded views are\n        // accessed through their containers because they may be removed / re-added later.\n        var rendererFactory = lView[RENDERER_FACTORY];\n        var componentView = addToViewTree(lView, previousOrParentTNode.index, createLView(lView, tView, null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, lView[RENDERER_FACTORY].createRenderer(native, def)));\n        componentView[HOST_NODE] = previousOrParentTNode;\n        // Component view will always be created before any injected LContainers,\n        // so this is a regular element, wrap it with the component view\n        componentView[HOST] = lView[previousOrParentTNode.index];\n        lView[previousOrParentTNode.index] = componentView;\n        if (getFirstTemplatePass()) {\n            queueComponentIndexForCheck(previousOrParentTNode);\n        }\n    }\n    /**\n     * Sets initial input properties on directive instances from attribute data\n     *\n     * @param directiveIndex Index of the directive in directives array\n     * @param instance Instance of the directive on which to set the initial inputs\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data for this node\n     */\n    function setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n        var initialInputData = tNode.initialInputs;\n        if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n            initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n        }\n        var initialInputs = initialInputData[directiveIndex];\n        if (initialInputs) {\n            for (var i = 0; i < initialInputs.length; i += 2) {\n                instance[initialInputs[i]] = initialInputs[i + 1];\n            }\n        }\n    }\n    /**\n     * Generates initialInputData for a node and stores it in the template's static storage\n     * so subsequent template invocations don't have to recalculate it.\n     *\n     * initialInputData is an array containing values that need to be set as input properties\n     * for directives on this node, but only once on creation. We need this array to support\n     * the case where you set an @Input property of a directive using attribute-like syntax.\n     * e.g. if you have a `name` @Input, you can set it once like this:\n     *\n     * <my-component name=\"Bess\"></my-component>\n     *\n     * @param directiveIndex Index to store the initial input data\n     * @param inputs The list of inputs from the directive def\n     * @param tNode The static data on this node\n     */\n    function generateInitialInputs(directiveIndex, inputs, tNode) {\n        var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n        initialInputData[directiveIndex] = null;\n        var attrs = tNode.attrs;\n        var i = 0;\n        while (i < attrs.length) {\n            var attrName = attrs[i];\n            if (attrName === 3 /* SelectOnly */)\n                break;\n            if (attrName === 0 /* NamespaceURI */) {\n                // We do not allow inputs on namespaced attributes.\n                i += 4;\n                continue;\n            }\n            var minifiedInputName = inputs[attrName];\n            var attrValue = attrs[i + 1];\n            if (minifiedInputName !== undefined) {\n                var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n                inputsToStore.push(minifiedInputName, attrValue);\n            }\n            i += 2;\n        }\n        return initialInputData;\n    }\n    //////////////////////////\n    //// ViewContainer & View\n    //////////////////////////\n    /**\n     * Creates a LContainer, either from a container instruction, or for a ViewContainerRef.\n     *\n     * @param hostNative The host element for the LContainer\n     * @param hostTNode The host TNode for the LContainer\n     * @param currentView The parent view of the LContainer\n     * @param native The native comment element\n     * @param isForViewContainerRef Optional a flag indicating the ViewContainerRef case\n     * @returns LContainer\n     */\n    function createLContainer(hostNative, hostTNode, currentView, native, isForViewContainerRef) {\n        return [\n            isForViewContainerRef ? -1 : 0,\n            [],\n            currentView,\n            null,\n            null,\n            hostNative,\n            native,\n            getRenderParent(hostTNode, currentView) // renderParent\n        ];\n    }\n    /**\n     * Creates an LContainer for an ng-template (dynamically-inserted view), e.g.\n     *\n     * <ng-template #foo>\n     *    <div></div>\n     * </ng-template>\n     *\n     * @param index The index of the container in the data array\n     * @param templateFn Inline template\n     * @param consts The number of nodes, local refs, and pipes for this template\n     * @param vars The number of bindings for this template\n     * @param tagName The name of the container element, if applicable\n     * @param attrs The attrs attached to the container, if applicable\n     * @param localRefs A set of local reference bindings on the element.\n     * @param localRefExtractor A function which extracts local-refs values from the template.\n     *        Defaults to the current element associated with the local-ref.\n     */\n    function template(index, templateFn, consts, vars, tagName, attrs, localRefs, localRefExtractor) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // TODO: consider a separate node type for templates\n        var tNode = containerInternal(index, tagName || null, attrs || null);\n        if (getFirstTemplatePass()) {\n            tNode.tViews = createTView(-1, templateFn, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        createDirectivesAndLocals(tView, lView, localRefs, localRefExtractor);\n        var currentQueries = lView[QUERIES];\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var native = getNativeByTNode(previousOrParentTNode, lView);\n        attachPatchData(native, lView);\n        if (currentQueries) {\n            lView[QUERIES] = currentQueries.addNode(previousOrParentTNode);\n        }\n        queueLifecycleHooks(tView, tNode);\n        setIsParent(false);\n    }\n    /**\n     * Creates an LContainer for inline views, e.g.\n     *\n     * % if (showing) {\n     *   <div></div>\n     * % }\n     *\n     * @param index The index of the container in the data array\n     */\n    function container(index) {\n        var tNode = containerInternal(index, null, null);\n        getFirstTemplatePass() && (tNode.tViews = []);\n        setIsParent(false);\n    }\n    function containerInternal(index, tagName, attrs) {\n        var lView = getLView();\n        ngDevMode && assertEqual(lView[BINDING_INDEX], lView[TVIEW].bindingStartIndex, 'container nodes should be created before any bindings');\n        var adjustedIndex = index + HEADER_OFFSET;\n        var comment = lView[RENDERER].createComment(ngDevMode ? 'container' : '');\n        ngDevMode && ngDevMode.rendererCreateComment++;\n        var tNode = createNodeAtIndex(index, 0 /* Container */, comment, tagName, attrs);\n        var lContainer = lView[adjustedIndex] =\n            createLContainer(lView[adjustedIndex], tNode, lView, comment);\n        appendChild(comment, tNode, lView);\n        // Containers are added to the current view tree instead of their embedded views\n        // because views can be removed and re-inserted.\n        addToViewTree(lView, index + HEADER_OFFSET, lContainer);\n        var currentQueries = lView[QUERIES];\n        if (currentQueries) {\n            // prepare place for matching nodes from views inserted into a given container\n            lContainer[QUERIES] = currentQueries.container();\n        }\n        ngDevMode && assertNodeType(getPreviousOrParentTNode(), 0 /* Container */);\n        return tNode;\n    }\n    /**\n     * Sets a container up to receive views.\n     *\n     * @param index The index of the container in the data array\n     */\n    function containerRefreshStart(index) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        var previousOrParentTNode = loadInternal(tView.data, index);\n        setPreviousOrParentTNode(previousOrParentTNode);\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        setIsParent(true);\n        lView[index + HEADER_OFFSET][ACTIVE_INDEX] = 0;\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(lView, tView, getCheckNoChangesMode());\n    }\n    /**\n     * Marks the end of the LContainer.\n     *\n     * Marking the end of LContainer is the time when to child views get inserted or removed.\n     */\n    function containerRefreshEnd() {\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        if (getIsParent()) {\n            setIsParent(false);\n        }\n        else {\n            ngDevMode && assertNodeType(previousOrParentTNode, 2 /* View */);\n            ngDevMode && assertHasParent(previousOrParentTNode);\n            previousOrParentTNode = previousOrParentTNode.parent;\n            setPreviousOrParentTNode(previousOrParentTNode);\n        }\n        ngDevMode && assertNodeType(previousOrParentTNode, 0 /* Container */);\n        var lContainer = getLView()[previousOrParentTNode.index];\n        var nextIndex = lContainer[ACTIVE_INDEX];\n        // remove extra views at the end of the container\n        while (nextIndex < lContainer[VIEWS].length) {\n            removeView(lContainer, previousOrParentTNode, nextIndex);\n        }\n    }\n    /**\n     * Goes over dynamic embedded views (ones created through ViewContainerRef APIs) and refreshes them\n     * by executing an associated template function.\n     */\n    function refreshDynamicEmbeddedViews(lView) {\n        for (var current = getLViewChild(lView); current !== null; current = current[NEXT]) {\n            // Note: current can be an LView or an LContainer instance, but here we are only interested\n            // in LContainer. We can tell it's an LContainer because its length is less than the LView\n            // header.\n            if (current.length < HEADER_OFFSET && current[ACTIVE_INDEX] === -1) {\n                var container_1 = current;\n                for (var i = 0; i < container_1[VIEWS].length; i++) {\n                    var dynamicViewData = container_1[VIEWS][i];\n                    // The directives and pipes are not needed here as an existing view is only being refreshed.\n                    ngDevMode && assertDefined(dynamicViewData[TVIEW], 'TView must be allocated');\n                    renderEmbeddedTemplate(dynamicViewData, dynamicViewData[TVIEW], dynamicViewData[CONTEXT]);\n                }\n            }\n        }\n    }\n    /**\n     * Looks for a view with a given view block id inside a provided LContainer.\n     * Removes views that need to be deleted in the process.\n     *\n     * @param lContainer to search for views\n     * @param tContainerNode to search for views\n     * @param startIdx starting index in the views array to search from\n     * @param viewBlockId exact view block id to look for\n     * @returns index of a found view or -1 if not found\n     */\n    function scanForView(lContainer, tContainerNode, startIdx, viewBlockId) {\n        var views = lContainer[VIEWS];\n        for (var i = startIdx; i < views.length; i++) {\n            var viewAtPositionId = views[i][TVIEW].id;\n            if (viewAtPositionId === viewBlockId) {\n                return views[i];\n            }\n            else if (viewAtPositionId < viewBlockId) {\n                // found a view that should not be at this position - remove\n                removeView(lContainer, tContainerNode, i);\n            }\n            else {\n                // found a view with id greater than the one we are searching for\n                // which means that required view doesn't exist and can't be found at\n                // later positions in the views array - stop the searchdef.cont here\n                break;\n            }\n        }\n        return null;\n    }\n    /**\n     * Marks the start of an embedded view.\n     *\n     * @param viewBlockId The ID of this view\n     * @return boolean Whether or not this view is in creation mode\n     */\n    function embeddedViewStart(viewBlockId, consts, vars) {\n        var lView = getLView();\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        // The previous node can be a view node if we are processing an inline for loop\n        var containerTNode = previousOrParentTNode.type === 2 /* View */ ?\n            previousOrParentTNode.parent :\n            previousOrParentTNode;\n        var lContainer = lView[containerTNode.index];\n        ngDevMode && assertNodeType(containerTNode, 0 /* Container */);\n        var viewToRender = scanForView(lContainer, containerTNode, lContainer[ACTIVE_INDEX], viewBlockId);\n        if (viewToRender) {\n            setIsParent(true);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        else {\n            // When we create a new LView, we always reset the state of the instructions.\n            viewToRender = createLView(lView, getOrCreateEmbeddedTView(viewBlockId, consts, vars, containerTNode), null, 4 /* CheckAlways */);\n            if (lContainer[QUERIES]) {\n                viewToRender[QUERIES] = lContainer[QUERIES].createView();\n            }\n            createViewNode(viewBlockId, viewToRender);\n            enterView(viewToRender, viewToRender[TVIEW].node);\n        }\n        if (lContainer) {\n            if (isCreationMode(viewToRender)) {\n                // it is a new view, insert it into collection of views for a given container\n                insertView(viewToRender, lContainer, lView, lContainer[ACTIVE_INDEX], -1);\n            }\n            lContainer[ACTIVE_INDEX]++;\n        }\n        return isCreationMode(viewToRender) ? 1 /* Create */ | 2 /* Update */ :\n            2 /* Update */;\n    }\n    /**\n     * Initialize the TView (e.g. static data) for the active embedded view.\n     *\n     * Each embedded view block must create or retrieve its own TView. Otherwise, the embedded view's\n     * static data for a particular node would overwrite the static data for a node in the view above\n     * it with the same index (since it's in the same template).\n     *\n     * @param viewIndex The index of the TView in TNode.tViews\n     * @param consts The number of nodes, local refs, and pipes in this template\n     * @param vars The number of bindings and pure function bindings in this template\n     * @param container The parent container in which to look for the view's static data\n     * @returns TView\n     */\n    function getOrCreateEmbeddedTView(viewIndex, consts, vars, parent) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertNodeType(parent, 0 /* Container */);\n        var containerTViews = parent.tViews;\n        ngDevMode && assertDefined(containerTViews, 'TView expected');\n        ngDevMode && assertEqual(Array.isArray(containerTViews), true, 'TViews should be in an array');\n        if (viewIndex >= containerTViews.length || containerTViews[viewIndex] == null) {\n            containerTViews[viewIndex] = createTView(viewIndex, null, consts, vars, tView.directiveRegistry, tView.pipeRegistry, null);\n        }\n        return containerTViews[viewIndex];\n    }\n    /** Marks the end of an embedded view. */\n    function embeddedViewEnd() {\n        var lView = getLView();\n        var viewHost = lView[HOST_NODE];\n        if (isCreationMode(lView)) {\n            refreshDescendantViews(lView); // creation mode pass\n            lView[FLAGS] &= ~1 /* CreationMode */;\n        }\n        refreshDescendantViews(lView); // update mode pass\n        leaveView(lView[PARENT]);\n        setPreviousOrParentTNode(viewHost);\n        setIsParent(false);\n    }\n    /////////////\n    /**\n     * Refreshes components by entering the component view and processing its bindings, queries, etc.\n     *\n     * @param adjustedElementIndex  Element index in LView[] (adjusted for HEADER_OFFSET)\n     */\n    function componentRefresh(adjustedElementIndex) {\n        var lView = getLView();\n        ngDevMode && assertDataInRange(lView, adjustedElementIndex);\n        var hostView = getComponentViewByIndex(adjustedElementIndex, lView);\n        ngDevMode && assertNodeType(lView[TVIEW].data[adjustedElementIndex], 3 /* Element */);\n        // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n        if (viewAttached(hostView) && hostView[FLAGS] & (4 /* CheckAlways */ | 8 /* Dirty */)) {\n            syncViewWithBlueprint(hostView);\n            checkView(hostView, hostView[CONTEXT]);\n        }\n    }\n    /**\n     * Syncs an LView instance with its blueprint if they have gotten out of sync.\n     *\n     * Typically, blueprints and their view instances should always be in sync, so the loop here\n     * will be skipped. However, consider this case of two components side-by-side:\n     *\n     * App template:\n     * ```\n     * <comp></comp>\n     * <comp></comp>\n     * ```\n     *\n     * The following will happen:\n     * 1. App template begins processing.\n     * 2. First <comp> is matched as a component and its LView is created.\n     * 3. Second <comp> is matched as a component and its LView is created.\n     * 4. App template completes processing, so it's time to check child templates.\n     * 5. First <comp> template is checked. It has a directive, so its def is pushed to blueprint.\n     * 6. Second <comp> template is checked. Its blueprint has been updated by the first\n     * <comp> template, but its LView was created before this update, so it is out of sync.\n     *\n     * Note that embedded views inside ngFor loops will never be out of sync because these views\n     * are processed as soon as they are created.\n     *\n     * @param componentView The view to sync\n     */\n    function syncViewWithBlueprint(componentView) {\n        var componentTView = componentView[TVIEW];\n        for (var i = componentView.length; i < componentTView.blueprint.length; i++) {\n            componentView[i] = componentTView.blueprint[i];\n        }\n    }\n    /** Returns a boolean for whether the view is attached */\n    function viewAttached(view) {\n        return (view[FLAGS] & 16 /* Attached */) === 16 /* Attached */;\n    }\n    /**\n     * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n     * It takes all the selectors from the entire component's template and decides where\n     * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n     * backed by a selector).\n     *\n     * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n     * un-parsed form.\n     *\n     * The parsed form is needed for efficient matching of a node against a given CSS selector.\n     * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n     *\n     * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n     * drawbacks:\n     * - having only a textual form would require runtime parsing of CSS selectors;\n     * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n     * template author).\n     *\n     * @param selectors A collection of parsed CSS selectors\n     * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n     */\n    function projectionDef(selectors, textSelectors) {\n        var componentNode = findComponentView(getLView())[HOST_NODE];\n        if (!componentNode.projection) {\n            var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n            var pData = componentNode.projection =\n                new Array(noOfNodeBuckets).fill(null);\n            var tails = pData.slice();\n            var componentChild = componentNode.child;\n            while (componentChild !== null) {\n                var bucketIndex = selectors ? matchingSelectorIndex(componentChild, selectors, textSelectors) : 0;\n                var nextNode = componentChild.next;\n                if (tails[bucketIndex]) {\n                    tails[bucketIndex].next = componentChild;\n                }\n                else {\n                    pData[bucketIndex] = componentChild;\n                    componentChild.next = null;\n                }\n                tails[bucketIndex] = componentChild;\n                componentChild = nextNode;\n            }\n        }\n    }\n    /**\n     * Stack used to keep track of projection nodes in projection() instruction.\n     *\n     * This is deliberately created outside of projection() to avoid allocating\n     * a new array each time the function is called. Instead the array will be\n     * re-used by each invocation. This works because the function is not reentrant.\n     */\n    var projectionNodeStack$1 = [];\n    /**\n     * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n     * to the projectionDef instruction.\n     *\n     * @param nodeIndex\n     * @param selectorIndex:\n     *        - 0 when the selector is `*` (or unspecified as this is the default value),\n     *        - 1 based index of the selector from the {@link projectionDef}\n     */\n    function projection(nodeIndex, selectorIndex, attrs) {\n        if (selectorIndex === void 0) { selectorIndex = 0; }\n        var lView = getLView();\n        var tProjectionNode = createNodeAtIndex(nodeIndex, 1 /* Projection */, null, null, attrs || null);\n        // We can't use viewData[HOST_NODE] because projection nodes can be nested in embedded views.\n        if (tProjectionNode.projection === null)\n            tProjectionNode.projection = selectorIndex;\n        // `<ng-content>` has no content\n        setIsParent(false);\n        // re-distribution of projectable nodes is stored on a component's view level\n        var componentView = findComponentView(lView);\n        var componentNode = componentView[HOST_NODE];\n        var nodeToProject = componentNode.projection[selectorIndex];\n        var projectedView = componentView[PARENT];\n        var projectionNodeIndex = -1;\n        while (nodeToProject) {\n            if (nodeToProject.type === 1 /* Projection */) {\n                // This node is re-projected, so we must go up the tree to get its projected nodes.\n                var currentComponentView = findComponentView(projectedView);\n                var currentComponentHost = currentComponentView[HOST_NODE];\n                var firstProjectedNode = currentComponentHost.projection[nodeToProject.projection];\n                if (firstProjectedNode) {\n                    projectionNodeStack$1[++projectionNodeIndex] = nodeToProject;\n                    projectionNodeStack$1[++projectionNodeIndex] = projectedView;\n                    nodeToProject = firstProjectedNode;\n                    projectedView = currentComponentView[PARENT];\n                    continue;\n                }\n            }\n            else {\n                // This flag must be set now or we won't know that this node is projected\n                // if the nodes are inserted into a container later.\n                nodeToProject.flags |= 2 /* isProjected */;\n                appendProjectedNode(nodeToProject, tProjectionNode, lView, projectedView);\n            }\n            // If we are finished with a list of re-projected nodes, we need to get\n            // back to the root projection node that was re-projected.\n            if (nodeToProject.next === null && projectedView !== componentView[PARENT]) {\n                projectedView = projectionNodeStack$1[projectionNodeIndex--];\n                nodeToProject = projectionNodeStack$1[projectionNodeIndex--];\n            }\n            nodeToProject = nodeToProject.next;\n        }\n    }\n    /**\n     * Adds LView or LContainer to the end of the current view tree.\n     *\n     * This structure will be used to traverse through nested views to remove listeners\n     * and call onDestroy callbacks.\n     *\n     * @param lView The view where LView or LContainer should be added\n     * @param adjustedHostIndex Index of the view's host node in LView[], adjusted for header\n     * @param state The LView or LContainer to add to the view tree\n     * @returns The state passed in\n     */\n    function addToViewTree(lView, adjustedHostIndex, state) {\n        var tView = lView[TVIEW];\n        var firstTemplatePass = getFirstTemplatePass();\n        if (lView[TAIL]) {\n            lView[TAIL][NEXT] = state;\n        }\n        else if (firstTemplatePass) {\n            tView.childIndex = adjustedHostIndex;\n        }\n        lView[TAIL] = state;\n        return state;\n    }\n    ///////////////////////////////\n    //// Change detection\n    ///////////////////////////////\n    /** If node is an OnPush component, marks its LView dirty. */\n    function markDirtyIfOnPush(lView, viewIndex) {\n        var childComponentLView = getComponentViewByIndex(viewIndex, lView);\n        if (!(childComponentLView[FLAGS] & 4 /* CheckAlways */)) {\n            childComponentLView[FLAGS] |= 8 /* Dirty */;\n        }\n    }\n    /** Wraps an event listener with preventDefault behavior. */\n    function wrapListenerWithPreventDefault(listenerFn) {\n        return function wrapListenerIn_preventDefault(e) {\n            if (listenerFn(e) === false) {\n                e.preventDefault();\n                // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n                e.returnValue = false;\n            }\n        };\n    }\n    /** Marks current view and all ancestors dirty */\n    function markViewDirty(lView) {\n        while (lView && !(lView[FLAGS] & 128 /* IsRoot */)) {\n            lView[FLAGS] |= 8 /* Dirty */;\n            lView = lView[PARENT];\n        }\n        lView[FLAGS] |= 8 /* Dirty */;\n        ngDevMode && assertDefined(lView[CONTEXT], 'rootContext should be defined');\n        var rootContext = lView[CONTEXT];\n        scheduleTick(rootContext, 1 /* DetectChanges */);\n    }\n    /**\n     * Used to schedule change detection on the whole application.\n     *\n     * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n     * It is usually called indirectly by calling `markDirty` when the view needs to be\n     * re-rendered.\n     *\n     * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n     * `scheduleTick` requests. The scheduling function can be overridden in\n     * `renderComponent`'s `scheduler` option.\n     */\n    function scheduleTick(rootContext, flags) {\n        var nothingScheduled = rootContext.flags === 0 /* Empty */;\n        rootContext.flags |= flags;\n        if (nothingScheduled && rootContext.clean == _CLEAN_PROMISE) {\n            var res_1;\n            rootContext.clean = new Promise(function (r) { return res_1 = r; });\n            rootContext.scheduler(function () {\n                if (rootContext.flags & 1 /* DetectChanges */) {\n                    rootContext.flags &= ~1 /* DetectChanges */;\n                    tickRootContext(rootContext);\n                }\n                if (rootContext.flags & 2 /* FlushPlayers */) {\n                    rootContext.flags &= ~2 /* FlushPlayers */;\n                    var playerHandler = rootContext.playerHandler;\n                    if (playerHandler) {\n                        playerHandler.flushPlayers();\n                    }\n                }\n                rootContext.clean = _CLEAN_PROMISE;\n                res_1(null);\n            });\n        }\n    }\n    function tickRootContext(rootContext) {\n        for (var i = 0; i < rootContext.components.length; i++) {\n            var rootComponent = rootContext.components[i];\n            renderComponentOrTemplate(readPatchedLView(rootComponent), rootComponent);\n        }\n    }\n    /**\n     * Synchronously perform change detection on a component (and possibly its sub-components).\n     *\n     * This function triggers change detection in a synchronous way on a component. There should\n     * be very little reason to call this function directly since a preferred way to do change\n     * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n     * at some future point in time. This is because a single user action often results in many\n     * components being invalidated and calling change detection on each component synchronously\n     * would be inefficient. It is better to wait until all components are marked as dirty and\n     * then perform single change detection across all of the components\n     *\n     * @param component The component which the change detection should be performed on.\n     */\n    function detectChanges(component) {\n        var view = getComponentViewByInstance(component);\n        detectChangesInternal(view, component);\n    }\n    function detectChangesInternal(view, context) {\n        var rendererFactory = view[RENDERER_FACTORY];\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        if (isCreationMode(view)) {\n            checkView(view, context); // creation mode pass\n        }\n        checkView(view, context); // update mode pass\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    /**\n     * Synchronously perform change detection on a root view and its components.\n     *\n     * @param lView The view which the change detection should be performed on.\n     */\n    function detectChangesInRootView(lView) {\n        tickRootContext(lView[CONTEXT]);\n    }\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    function checkNoChanges(component) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChanges(component);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /**\n     * Checks the change detector on a root view and its components, and throws if any changes are\n     * detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     *\n     * @param lView The view which the change detection should be checked on.\n     */\n    function checkNoChangesInRootView(lView) {\n        setCheckNoChangesMode(true);\n        try {\n            detectChangesInRootView(lView);\n        }\n        finally {\n            setCheckNoChangesMode(false);\n        }\n    }\n    /** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\n    function checkView(hostView, component) {\n        var hostTView = hostView[TVIEW];\n        var oldView = enterView(hostView, hostView[HOST_NODE]);\n        var templateFn = hostTView.template;\n        var viewQuery = hostTView.viewQuery;\n        try {\n            namespaceHTML();\n            createViewQuery(viewQuery, hostView, component);\n            templateFn(getRenderFlags(hostView), component);\n            refreshDescendantViews(hostView);\n            updateViewQuery(viewQuery, hostView, component);\n        }\n        finally {\n            leaveView(oldView);\n        }\n    }\n    function createViewQuery(viewQuery, view, component) {\n        if (viewQuery && isCreationMode(view)) {\n            viewQuery(1 /* Create */, component);\n        }\n    }\n    function updateViewQuery(viewQuery, view, component) {\n        if (viewQuery && !isCreationMode(view)) {\n            viewQuery(2 /* Update */, component);\n        }\n    }\n    /**\n     * Mark the component as dirty (needing change detection).\n     *\n     * Marking a component dirty will schedule a change detection on this\n     * component at some point in the future. Marking an already dirty\n     * component as dirty is a noop. Only one outstanding change detection\n     * can be scheduled per component tree. (Two components bootstrapped with\n     * separate `renderComponent` will have separate schedulers)\n     *\n     * When the root component is bootstrapped with `renderComponent`, a scheduler\n     * can be provided.\n     *\n     * @param component Component to mark as dirty.\n     *\n     * @publicApi\n     */\n    function markDirty(component) {\n        ngDevMode && assertDefined(component, 'component');\n        markViewDirty(getComponentViewByInstance(component));\n    }\n    ///////////////////////////////\n    //// Bindings & interpolations\n    ///////////////////////////////\n    /**\n     * Creates a single value binding.\n     *\n     * @param value Value to diff\n     */\n    function bind(value) {\n        var lView = getLView();\n        return bindingUpdated(lView, lView[BINDING_INDEX]++, value) ? value : NO_CHANGE;\n    }\n    /**\n     * Allocates the necessary amount of slots for host vars.\n     *\n     * @param count Amount of vars to be allocated\n     */\n    function allocHostVars(count) {\n        if (!getFirstTemplatePass())\n            return;\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        queueHostBindingForCheck(tView, getCurrentDirectiveDef(), count);\n        prefillHostVars(tView, lView, count);\n    }\n    /**\n     * Create interpolation bindings with a variable number of expressions.\n     *\n     * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n     * Those are faster because there is no need to create an array of expressions and iterate over it.\n     *\n     * `values`:\n     * - has static text at even indexes,\n     * - has evaluated expressions at odd indexes.\n     *\n     * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n     */\n    function interpolationV(values) {\n        ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n        ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n        var different = false;\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        for (var i = 1; i < values.length; i += 2) {\n            // Check if bindings (odd indexes) have changed\n            bindingUpdated(lView, bindingIndex++, values[i]) && (different = true);\n        }\n        lView[BINDING_INDEX] = bindingIndex;\n        if (!different) {\n            return NO_CHANGE;\n        }\n        // Build the updated content\n        var content = values[0];\n        for (var i = 1; i < values.length; i += 2) {\n            content += stringify$1(values[i]) + values[i + 1];\n        }\n        return content;\n    }\n    /**\n     * Creates an interpolation binding with 1 expression.\n     *\n     * @param prefix static value used for concatenation only.\n     * @param v0 value checked for change.\n     * @param suffix static value used for concatenation only.\n     */\n    function interpolation1(prefix, v0, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated(lView, lView[BINDING_INDEX], v0);\n        lView[BINDING_INDEX] += 1;\n        return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 2 expressions. */\n    function interpolation2(prefix, v0, i0, v1, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated2(lView, lView[BINDING_INDEX], v0, v1);\n        lView[BINDING_INDEX] += 2;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 3 expressions. */\n    function interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated3(lView, lView[BINDING_INDEX], v0, v1, v2);\n        lView[BINDING_INDEX] += 3;\n        return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n            NO_CHANGE;\n    }\n    /** Create an interpolation binding with 4 expressions. */\n    function interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n        var lView = getLView();\n        var different = bindingUpdated4(lView, lView[BINDING_INDEX], v0, v1, v2, v3);\n        lView[BINDING_INDEX] += 4;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n                suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 5 expressions. */\n    function interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated(lView, bindingIndex + 4, v4) || different;\n        lView[BINDING_INDEX] += 5;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 6 expressions. */\n    function interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated2(lView, bindingIndex + 4, v4, v5) || different;\n        lView[BINDING_INDEX] += 6;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 7 expressions. */\n    function interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated3(lView, bindingIndex + 4, v4, v5, v6) || different;\n        lView[BINDING_INDEX] += 7;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n            NO_CHANGE;\n    }\n    /** Creates an interpolation binding with 8 expressions. */\n    function interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n        var lView = getLView();\n        var bindingIndex = lView[BINDING_INDEX];\n        var different = bindingUpdated4(lView, bindingIndex, v0, v1, v2, v3);\n        different = bindingUpdated4(lView, bindingIndex + 4, v4, v5, v6, v7) || different;\n        lView[BINDING_INDEX] += 8;\n        return different ?\n            prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n                stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n            NO_CHANGE;\n    }\n    /** Store a value in the `data` at a given `index`. */\n    function store(index, value) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        // We don't store any static data for local variables, so the first time\n        // we see the template, we should store as null to avoid a sparse array\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (adjustedIndex >= tView.data.length) {\n            tView.data[adjustedIndex] = null;\n        }\n        lView[adjustedIndex] = value;\n    }\n    /**\n     * Retrieves a local reference from the current contextViewData.\n     *\n     * If the reference to retrieve is in a parent view, this instruction is used in conjunction\n     * with a nextContext() call, which walks up the tree and updates the contextViewData instance.\n     *\n     * @param index The index of the local ref in contextViewData.\n     */\n    function reference(index) {\n        var contextLView = getContextLView();\n        return loadInternal(contextLView, index);\n    }\n    function loadQueryList(queryListIdx) {\n        var lView = getLView();\n        ngDevMode &&\n            assertDefined(lView[CONTENT_QUERIES], 'Content QueryList array should be defined if reading a query.');\n        ngDevMode && assertDataInRange(lView[CONTENT_QUERIES], queryListIdx);\n        return lView[CONTENT_QUERIES][queryListIdx];\n    }\n    /** Retrieves a value from current `viewData`. */\n    function load(index) {\n        return loadInternal(getLView(), index);\n    }\n    function directiveInject(token, flags) {\n        if (flags === void 0) { flags = exports.InjectFlags.Default; }\n        token = resolveForwardRef(token);\n        return getOrCreateInjectable(getPreviousOrParentTNode(), getLView(), token, flags);\n    }\n    /**\n     * Facade for the attribute injection from DI.\n     */\n    function injectAttribute(attrNameToInject) {\n        return injectAttributeImpl(getPreviousOrParentTNode(), attrNameToInject);\n    }\n    /**\n     * Registers a QueryList, associated with a content query, for later refresh (part of a view\n     * refresh).\n     */\n    function registerContentQuery(queryList, currentDirectiveIndex) {\n        var viewData = getLView();\n        var tView = viewData[TVIEW];\n        var savedContentQueriesLength = (viewData[CONTENT_QUERIES] || (viewData[CONTENT_QUERIES] = [])).push(queryList);\n        if (getFirstTemplatePass()) {\n            var tViewContentQueries = tView.contentQueries || (tView.contentQueries = []);\n            var lastSavedDirectiveIndex = tView.contentQueries.length ? tView.contentQueries[tView.contentQueries.length - 2] : -1;\n            if (currentDirectiveIndex !== lastSavedDirectiveIndex) {\n                tViewContentQueries.push(currentDirectiveIndex, savedContentQueriesLength - 1);\n            }\n        }\n    }\n    var CLEAN_PROMISE = _CLEAN_PROMISE;\n    function initializeTNodeInputs(tNode) {\n        // If tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n        // yet been checked.\n        if (tNode) {\n            if (tNode.inputs === undefined) {\n                // mark inputs as checked\n                tNode.inputs = generatePropertyAliases(tNode, 0 /* Input */);\n            }\n            return tNode.inputs;\n        }\n        return null;\n    }\n    /**\n     * Returns the current OpaqueViewState instance.\n     *\n     * Used in conjunction with the restoreView() instruction to save a snapshot\n     * of the current view and restore it when listeners are invoked. This allows\n     * walking the declaration view tree in listeners to get vars from parent views.\n     */\n    function getCurrentView() {\n        return getLView();\n    }\n    function getCleanup(view) {\n        // top level variables should not be exported for performance reasons (PERF_NOTES.md)\n        return view[CLEANUP] || (view[CLEANUP] = []);\n    }\n    function getTViewCleanup(view) {\n        return view[TVIEW].cleanup || (view[TVIEW].cleanup = []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds a player to an element, directive or component instance that will later be\n     * animated once change detection has passed.\n     *\n     * When a player is added to a reference it will stay active until `player.destroy()`\n     * is called. Once called then the player will be removed from the active players\n     * present on the associated ref instance.\n     *\n     * To get a list of all the active players on an element see [getPlayers].\n     *\n     * @param ref The element, directive or component that the player will be placed on.\n     * @param player The player that will be triggered to play once change detection has run.\n     */\n    function addPlayer(ref, player) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return;\n        }\n        var element$$1 = context.native;\n        var lView = context.lView;\n        var playerContext = getOrCreatePlayerContext(element$$1, context);\n        var rootContext = getRootContext$1(lView);\n        addPlayerInternal(playerContext, rootContext, element$$1, player, 0, ref);\n        scheduleTick(rootContext, 2 /* FlushPlayers */);\n    }\n    /**\n     * Returns a list of all the active players present on the provided ref instance (which can\n     * be an instance of a directive, component or element).\n     *\n     * This function will only return players that have been added to the ref instance using\n     * `addPlayer` or any players that are active through any template styling bindings\n     * (`[style]`, `[style.prop]`, `[class]` and `[class.name]`).\n     *\n     * @publicApi\n     */\n    function getPlayers(ref) {\n        var context = getLContext(ref);\n        if (!context) {\n            ngDevMode && throwInvalidRefError();\n            return [];\n        }\n        var stylingContext = getStylingContext(context.nodeIndex, context.lView);\n        var playerContext = stylingContext ? getPlayerContext(stylingContext) : null;\n        return playerContext ? getPlayersInternal(playerContext) : [];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file introduces series of globally accessible debug tools\n     * to allow for the Angular debugging story to function.\n     *\n     * To see this in action run the following command:\n     *\n     *   bazel run --define=compile=aot\n     *   //packages/core/test/bundling/todo:devserver\n     *\n     *  Then load `localhost:5432` and start using the console tools.\n     */\n    /**\n     * This value reflects the property on the window where the dev\n     * tools are patched (window.ng).\n     * */\n    var GLOBAL_PUBLISH_EXPANDO_KEY = 'ng';\n    /*\n     * Publishes a collection of default debug tools onto `window._ng_`.\n     *\n     * These functions are available globally when Angular is in development\n     * mode and are automatically stripped away from prod mode is on.\n     */\n    var _published = false;\n    function publishDefaultGlobalUtils() {\n        if (!_published) {\n            _published = true;\n            publishGlobalUtil('getComponent', getComponent);\n            publishGlobalUtil('getContext', getContext);\n            publishGlobalUtil('getListeners', getListeners);\n            publishGlobalUtil('getViewComponent', getViewComponent);\n            publishGlobalUtil('getHostElement', getHostElement);\n            publishGlobalUtil('getInjector', getInjector);\n            publishGlobalUtil('getRootComponents', getRootComponents);\n            publishGlobalUtil('getDirectives', getDirectives);\n            publishGlobalUtil('getPlayers', getPlayers);\n            publishGlobalUtil('markDirty', markDirty);\n        }\n    }\n    /**\n     * Publishes the given function to `window.ngDevMode` so that it can be\n     * used from the browser console when an application is not in production.\n     */\n    function publishGlobalUtil(name, fn) {\n        var w = _global;\n        ngDevMode && assertDefined(fn, 'function not defined');\n        if (w) {\n            var container = w[GLOBAL_PUBLISH_EXPANDO_KEY];\n            if (!container) {\n                container = w[GLOBAL_PUBLISH_EXPANDO_KEY] = {};\n            }\n            container[name] = fn;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bootstraps a Component into an existing host element and returns an instance\n     * of the component.\n     *\n     * Use this function to bootstrap a component into the DOM tree. Each invocation\n     * of this function will create a separate tree of components, injectors and\n     * change detection cycles and lifetimes. To dynamically insert a new component\n     * into an existing tree such that it shares the same injection, change detection\n     * and object lifetime, use {@link ViewContainer#createComponent}.\n     *\n     * @param componentType Component to bootstrap\n     * @param options Optional parameters which control bootstrapping\n     */\n    function renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n        if (opts === void 0) { opts = {}; }\n        ngDevMode && publishDefaultGlobalUtils();\n        ngDevMode && assertComponentType(componentType);\n        var rendererFactory = opts.rendererFactory || domRendererFactory3;\n        var sanitizer = opts.sanitizer || null;\n        var componentDef = getComponentDef(componentType);\n        if (componentDef.type != componentType)\n            componentDef.type = componentType;\n        // The first index of the first selector is the tag name.\n        var componentTag = componentDef.selectors[0][0];\n        var hostRNode = locateHostElement(rendererFactory, opts.host || componentTag);\n        var rootFlags = componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n            4 /* CheckAlways */ | 128 /* IsRoot */;\n        var rootContext = createRootContext(opts.scheduler, opts.playerHandler);\n        var renderer = rendererFactory.createRenderer(hostRNode, componentDef);\n        var rootView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, undefined, opts.injector || null);\n        var oldView = enterView(rootView, null);\n        var component;\n        try {\n            if (rendererFactory.begin)\n                rendererFactory.begin();\n            var componentView = createRootComponentView(hostRNode, componentDef, rootView, rendererFactory, renderer, sanitizer);\n            component = createRootComponent(componentView, componentDef, rootView, rootContext, opts.hostFeatures || null);\n            refreshDescendantViews(rootView); // creation mode pass\n            rootView[FLAGS] &= ~1 /* CreationMode */;\n            refreshDescendantViews(rootView); // update mode pass\n        }\n        finally {\n            leaveView(oldView);\n            if (rendererFactory.end)\n                rendererFactory.end();\n        }\n        return component;\n    }\n    /**\n     * Creates the root component view and the root component node.\n     *\n     * @param rNode Render host element.\n     * @param def ComponentDef\n     * @param rootView The parent view where the host node is stored\n     * @param renderer The current renderer\n     * @param sanitizer The sanitizer, if provided\n     *\n     * @returns Component view created\n     */\n    function createRootComponentView(rNode, def, rootView, rendererFactory, renderer, sanitizer) {\n        resetComponentState();\n        var tView = rootView[TVIEW];\n        var componentView = createLView(rootView, getOrCreateTView(def.template, def.consts, def.vars, def.directiveDefs, def.pipeDefs, def.viewQuery), null, def.onPush ? 8 /* Dirty */ : 4 /* CheckAlways */, rendererFactory, renderer, sanitizer);\n        var tNode = createNodeAtIndex(0, 3 /* Element */, rNode, null, null);\n        if (tView.firstTemplatePass) {\n            diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, rootView), rootView, def.type);\n            tNode.flags = 1 /* isComponent */;\n            initNodeFlags(tNode, rootView.length, 1);\n            queueComponentIndexForCheck(tNode);\n        }\n        // Store component view at node index, with node as the HOST\n        componentView[HOST] = rootView[HEADER_OFFSET];\n        componentView[HOST_NODE] = tNode;\n        return rootView[HEADER_OFFSET] = componentView;\n    }\n    /**\n     * Creates a root component and sets it up with features and host bindings. Shared by\n     * renderComponent() and ViewContainerRef.createComponent().\n     */\n    function createRootComponent(componentView, componentDef, rootView, rootContext, hostFeatures) {\n        var tView = rootView[TVIEW];\n        // Create directive instance with factory() and store at next index in viewData\n        var component = instantiateRootComponent(tView, rootView, componentDef);\n        rootContext.components.push(component);\n        componentView[CONTEXT] = component;\n        hostFeatures && hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        if (tView.firstTemplatePass && componentDef.hostBindings) {\n            var rootTNode = getPreviousOrParentTNode();\n            setCurrentDirectiveDef(componentDef);\n            componentDef.hostBindings(1 /* Create */, component, rootTNode.index - HEADER_OFFSET);\n            setCurrentDirectiveDef(null);\n        }\n        return component;\n    }\n    function createRootContext(scheduler, playerHandler) {\n        return {\n            components: [],\n            scheduler: scheduler || defaultScheduler,\n            clean: CLEAN_PROMISE,\n            playerHandler: playerHandler || null,\n            flags: 0 /* Empty */\n        };\n    }\n    /**\n     * Used to enable lifecycle hooks on the root component.\n     *\n     * Include this feature when calling `renderComponent` if the root component\n     * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n     * be called properly.\n     *\n     * Example:\n     *\n     * ```\n     * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n     * ```\n     */\n    function LifecycleHooksFeature(component, def) {\n        var rootTView = readPatchedLView(component)[TVIEW];\n        var dirIndex = rootTView.data.length - 1;\n        queueInitHooks(dirIndex, def.onInit, def.doCheck, rootTView);\n        // TODO(misko): replace `as TNode` with createTNode call. (needs refactoring to lose dep on\n        // LNode).\n        queueLifecycleHooks(rootTView, { directiveStart: dirIndex, directiveEnd: dirIndex + 1 });\n    }\n    /**\n     * Retrieve the root context for any component by walking the parent `LView` until\n     * reaching the root `LView`.\n     *\n     * @param component any component\n     */\n    function getRootContext$2(component) {\n        var rootContext = getRootView(component)[CONTEXT];\n        ngDevMode && assertDefined(rootContext, 'rootContext');\n        return rootContext;\n    }\n    /**\n     * Wait on component until it is rendered.\n     *\n     * This function returns a `Promise` which is resolved when the component's\n     * change detection is executed. This is determined by finding the scheduler\n     * associated with the `component`'s render tree and waiting until the scheduler\n     * flushes. If nothing is scheduled, the function returns a resolved promise.\n     *\n     * Example:\n     * ```\n     * await whenRendered(myComponent);\n     * ```\n     *\n     * @param component Component to wait upon\n     * @returns Promise which resolves when the component is rendered.\n     */\n    function whenRendered(component) {\n        return getRootContext$2(component).clean;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determines if a definition is a {@link ComponentDef} or a {@link DirectiveDef}\n     * @param definition The definition to examine\n     */\n    function isComponentDef$1(definition) {\n        var def = definition;\n        return typeof def.template === 'function';\n    }\n    function getSuperType(type) {\n        return Object.getPrototypeOf(type.prototype).constructor;\n    }\n    /**\n     * Merges the definition from a super class to a sub class.\n     * @param definition The definition that is a SubClass of another directive of component\n     */\n    function InheritDefinitionFeature(definition) {\n        var superType = getSuperType(definition.type);\n        var _loop_1 = function () {\n            var e_1, _a;\n            var superDef = undefined;\n            if (isComponentDef$1(definition)) {\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngComponentDef || superType.ngDirectiveDef;\n            }\n            else {\n                if (superType.ngComponentDef) {\n                    throw new Error('Directives cannot inherit Components');\n                }\n                // Don't use getComponentDef/getDirectiveDef. This logic relies on inheritance.\n                superDef = superType.ngDirectiveDef;\n            }\n            var baseDef = superType.ngBaseDef;\n            // Some fields in the definition may be empty, if there were no values to put in them that\n            // would've justified object creation. Unwrap them if necessary.\n            if (baseDef || superDef) {\n                var writeableDef = definition;\n                writeableDef.inputs = maybeUnwrapEmpty(definition.inputs);\n                writeableDef.declaredInputs = maybeUnwrapEmpty(definition.declaredInputs);\n                writeableDef.outputs = maybeUnwrapEmpty(definition.outputs);\n            }\n            if (baseDef) {\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, baseDef.inputs);\n                fillProperties(definition.declaredInputs, baseDef.declaredInputs);\n                fillProperties(definition.outputs, baseDef.outputs);\n            }\n            if (superDef) {\n                // Merge hostBindings\n                var prevHostBindings_1 = definition.hostBindings;\n                var superHostBindings_1 = superDef.hostBindings;\n                if (superHostBindings_1) {\n                    if (prevHostBindings_1) {\n                        definition.hostBindings = function (rf, ctx, elementIndex) {\n                            superHostBindings_1(rf, ctx, elementIndex);\n                            prevHostBindings_1(rf, ctx, elementIndex);\n                        };\n                    }\n                    else {\n                        definition.hostBindings = superHostBindings_1;\n                    }\n                }\n                // Merge View Queries\n                if (isComponentDef$1(definition) && isComponentDef$1(superDef)) {\n                    var prevViewQuery_1 = definition.viewQuery;\n                    var superViewQuery_1 = superDef.viewQuery;\n                    if (superViewQuery_1) {\n                        if (prevViewQuery_1) {\n                            definition.viewQuery = function (rf, ctx) {\n                                superViewQuery_1(rf, ctx);\n                                prevViewQuery_1(rf, ctx);\n                            };\n                        }\n                        else {\n                            definition.viewQuery = superViewQuery_1;\n                        }\n                    }\n                }\n                // Merge Content Queries\n                var prevContentQueries_1 = definition.contentQueries;\n                var superContentQueries_1 = superDef.contentQueries;\n                if (superContentQueries_1) {\n                    if (prevContentQueries_1) {\n                        definition.contentQueries = function (dirIndex) {\n                            superContentQueries_1(dirIndex);\n                            prevContentQueries_1(dirIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueries = superContentQueries_1;\n                    }\n                }\n                // Merge Content Queries Refresh\n                var prevContentQueriesRefresh_1 = definition.contentQueriesRefresh;\n                var superContentQueriesRefresh_1 = superDef.contentQueriesRefresh;\n                if (superContentQueriesRefresh_1) {\n                    if (prevContentQueriesRefresh_1) {\n                        definition.contentQueriesRefresh = function (directiveIndex, queryIndex) {\n                            superContentQueriesRefresh_1(directiveIndex, queryIndex);\n                            prevContentQueriesRefresh_1(directiveIndex, queryIndex);\n                        };\n                    }\n                    else {\n                        definition.contentQueriesRefresh = superContentQueriesRefresh_1;\n                    }\n                }\n                // Merge inputs and outputs\n                fillProperties(definition.inputs, superDef.inputs);\n                fillProperties(definition.declaredInputs, superDef.declaredInputs);\n                fillProperties(definition.outputs, superDef.outputs);\n                // Inherit hooks\n                // Assume super class inheritance feature has already run.\n                definition.afterContentChecked =\n                    definition.afterContentChecked || superDef.afterContentChecked;\n                definition.afterContentInit = definition.afterContentInit || superDef.afterContentInit;\n                definition.afterViewChecked = definition.afterViewChecked || superDef.afterViewChecked;\n                definition.afterViewInit = definition.afterViewInit || superDef.afterViewInit;\n                definition.doCheck = definition.doCheck || superDef.doCheck;\n                definition.onDestroy = definition.onDestroy || superDef.onDestroy;\n                definition.onInit = definition.onInit || superDef.onInit;\n                // Run parent features\n                var features = superDef.features;\n                if (features) {\n                    try {\n                        for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                            var feature = features_1_1.value;\n                            if (feature && feature.ngInherit) {\n                                feature(definition);\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                }\n                return \"break\";\n            }\n            else {\n                // Even if we don't have a definition, check the type for the hooks and use those if need be\n                var superPrototype = superType.prototype;\n                if (superPrototype) {\n                    definition.afterContentChecked =\n                        definition.afterContentChecked || superPrototype.afterContentChecked;\n                    definition.afterContentInit =\n                        definition.afterContentInit || superPrototype.afterContentInit;\n                    definition.afterViewChecked =\n                        definition.afterViewChecked || superPrototype.afterViewChecked;\n                    definition.afterViewInit = definition.afterViewInit || superPrototype.afterViewInit;\n                    definition.doCheck = definition.doCheck || superPrototype.doCheck;\n                    definition.onDestroy = definition.onDestroy || superPrototype.onDestroy;\n                    definition.onInit = definition.onInit || superPrototype.onInit;\n                }\n            }\n            superType = Object.getPrototypeOf(superType);\n        };\n        while (superType) {\n            var state_1 = _loop_1();\n            if (state_1 === \"break\")\n                break;\n        }\n    }\n    function maybeUnwrapEmpty(value) {\n        if (value === EMPTY_OBJ) {\n            return {};\n        }\n        else if (value === EMPTY_ARRAY) {\n            return [];\n        }\n        else {\n            return value;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var PRIVATE_PREFIX = '__ngOnChanges_';\n    /**\n     * The NgOnChangesFeature decorates a component with support for the ngOnChanges\n     * lifecycle hook, so it should be included in any component that implements\n     * that hook.\n     *\n     * If the component or directive uses inheritance, the NgOnChangesFeature MUST\n     * be included as a feature AFTER {@link InheritDefinitionFeature}, otherwise\n     * inherited properties will not be propagated to the ngOnChanges lifecycle\n     * hook.\n     *\n     * Example usage:\n     *\n     * ```\n     * static ngComponentDef = defineComponent({\n     *   ...\n     *   inputs: {name: 'publicName'},\n     *   features: [NgOnChangesFeature]\n     * });\n     * ```\n     */\n    function NgOnChangesFeature(definition) {\n        var publicToDeclaredInputs = definition.declaredInputs;\n        var publicToMinifiedInputs = definition.inputs;\n        var proto = definition.type.prototype;\n        var _loop_1 = function (publicName) {\n            if (publicToDeclaredInputs.hasOwnProperty(publicName)) {\n                var minifiedKey = publicToMinifiedInputs[publicName];\n                var declaredKey_1 = publicToDeclaredInputs[publicName];\n                var privateMinKey_1 = PRIVATE_PREFIX + minifiedKey;\n                // Walk the prototype chain to see if we find a property descriptor\n                // That way we can honor setters and getters that were inherited.\n                var originalProperty = undefined;\n                var checkProto = proto;\n                while (!originalProperty && checkProto &&\n                    Object.getPrototypeOf(checkProto) !== Object.getPrototypeOf(Object.prototype)) {\n                    originalProperty = Object.getOwnPropertyDescriptor(checkProto, minifiedKey);\n                    checkProto = Object.getPrototypeOf(checkProto);\n                }\n                var getter = originalProperty && originalProperty.get;\n                var setter_1 = originalProperty && originalProperty.set;\n                // create a getter and setter for property\n                Object.defineProperty(proto, minifiedKey, {\n                    get: getter ||\n                        (setter_1 ? undefined : function () { return this[privateMinKey_1]; }),\n                    set: function (value) {\n                        var simpleChanges = this[PRIVATE_PREFIX];\n                        if (!simpleChanges) {\n                            simpleChanges = {};\n                            // Place where we will store SimpleChanges if there is a change\n                            Object.defineProperty(this, PRIVATE_PREFIX, { value: simpleChanges, writable: true });\n                        }\n                        var isFirstChange = !this.hasOwnProperty(privateMinKey_1);\n                        var currentChange = simpleChanges[declaredKey_1];\n                        if (currentChange) {\n                            currentChange.currentValue = value;\n                        }\n                        else {\n                            simpleChanges[declaredKey_1] =\n                                new SimpleChange(this[privateMinKey_1], value, isFirstChange);\n                        }\n                        if (isFirstChange) {\n                            // Create a place where the actual value will be stored and make it non-enumerable\n                            Object.defineProperty(this, privateMinKey_1, { value: value, writable: true });\n                        }\n                        else {\n                            this[privateMinKey_1] = value;\n                        }\n                        if (setter_1)\n                            setter_1.call(this, value);\n                    },\n                    // Make the property configurable in dev mode to allow overriding in tests\n                    configurable: !!ngDevMode\n                });\n            }\n        };\n        for (var publicName in publicToDeclaredInputs) {\n            _loop_1(publicName);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    }\n    // This option ensures that the ngOnChanges lifecycle hook will be inherited\n    // from superclasses (in InheritDefinitionFeature).\n    NgOnChangesFeature.ngInherit = true;\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            if (delegateHook)\n                delegateHook.apply(this);\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noop() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        // Do nothing.\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SOURCE = '__source';\n    var _THROW_IF_NOT_FOUND = new Object();\n    var THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    /**\n     * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n     *\n     * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n     * project.\n     *\n     * @publicApi\n     */\n    var INJECTOR$1 = new InjectionToken('INJECTOR');\n    var NullInjector = /** @class */ (function () {\n        function NullInjector() {\n        }\n        NullInjector.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n            if (notFoundValue === _THROW_IF_NOT_FOUND) {\n                // Intentionally left behind: With dev tools open the debugger will stop here. There is no\n                // reason why correctly written application should cause this exception.\n                // TODO(misko): uncomment the next line once `ngDevMode` works with closure.\n                // if(ngDevMode) debugger;\n                throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n            }\n            return notFoundValue;\n        };\n        return NullInjector;\n    }());\n    /**\n     * Concrete injectors implement this interface.\n     *\n     * For more details, see the [\"Dependency Injection Guide\"](guide/dependency-injection).\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * {@example core/di/ts/injector_spec.ts region='Injector'}\n     *\n     * `Injector` returns itself when given `Injector` as a token:\n     *\n     * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n     *\n     * @publicApi\n     */\n    var Injector = /** @class */ (function () {\n        function Injector() {\n        }\n        /**\n         * Create a new Injector which is configure using `StaticProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n         */\n        Injector.create = function (options, parent) {\n            if (Array.isArray(options)) {\n                return new StaticInjector(options, parent);\n            }\n            else {\n                return new StaticInjector(options.providers, options.parent, options.name || null);\n            }\n        };\n        Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n        Injector.NULL = new NullInjector();\n        /** @nocollapse */\n        Injector.ngInjectableDef = defineInjectable({\n            providedIn: 'any',\n            factory: function () { return inject(INJECTOR$1); },\n        });\n        /** @internal */\n        Injector.__NG_ELEMENT_ID__ = function () { return SWITCH_INJECTOR_FACTORY(); };\n        return Injector;\n    }());\n    var SWITCH_INJECTOR_FACTORY__POST_R3__ = function () {\n        return injectInjector();\n    };\n    var SWITCH_INJECTOR_FACTORY__PRE_R3__ = noop;\n    var SWITCH_INJECTOR_FACTORY = SWITCH_INJECTOR_FACTORY__PRE_R3__;\n    var IDENT = function (value) {\n        return value;\n    };\n    var EMPTY = [];\n    var CIRCULAR = IDENT;\n    var MULTI_PROVIDER_FN = function () {\n        return Array.prototype.slice.call(arguments);\n    };\n    var USE_VALUE = getClosureSafeProperty({ provide: String, useValue: getClosureSafeProperty });\n    var NG_TOKEN_PATH = 'ngTokenPath';\n    var NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\n    var NULL_INJECTOR$1 = Injector.NULL;\n    var NEW_LINE = /\\n/gm;\n    var NO_NEW_LINE = 'ɵ';\n    var StaticInjector = /** @class */ (function () {\n        function StaticInjector(providers, parent, source) {\n            if (parent === void 0) { parent = NULL_INJECTOR$1; }\n            if (source === void 0) { source = null; }\n            this.parent = parent;\n            this.source = source;\n            var records = this._records = new Map();\n            records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            records.set(INJECTOR$1, { token: INJECTOR$1, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n            recursivelyProcessProviders(records, providers);\n        }\n        StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            var record = this._records.get(token);\n            try {\n                return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n            }\n            catch (e) {\n                var tokenPath = e[NG_TEMP_TOKEN_PATH];\n                if (token[SOURCE]) {\n                    tokenPath.unshift(token[SOURCE]);\n                }\n                e.message = formatError('\\n' + e.message, tokenPath, this.source);\n                e[NG_TOKEN_PATH] = tokenPath;\n                e[NG_TEMP_TOKEN_PATH] = null;\n                throw e;\n            }\n        };\n        StaticInjector.prototype.toString = function () {\n            var tokens = [], records = this._records;\n            records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n            return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n        };\n        return StaticInjector;\n    }());\n    function resolveProvider(provider) {\n        var deps = computeDeps(provider);\n        var fn = IDENT;\n        var value = EMPTY;\n        var useNew = false;\n        var provide = resolveForwardRef(provider.provide);\n        if (USE_VALUE in provider) {\n            // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n            value = provider.useValue;\n        }\n        else if (provider.useFactory) {\n            fn = provider.useFactory;\n        }\n        else if (provider.useExisting) ;\n        else if (provider.useClass) {\n            useNew = true;\n            fn = resolveForwardRef(provider.useClass);\n        }\n        else if (typeof provide == 'function') {\n            useNew = true;\n            fn = provide;\n        }\n        else {\n            throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n        }\n        return { deps: deps, fn: fn, useNew: useNew, value: value };\n    }\n    function multiProviderMixError(token) {\n        return staticError('Cannot mix multi providers and regular providers', token);\n    }\n    function recursivelyProcessProviders(records, provider) {\n        if (provider) {\n            provider = resolveForwardRef(provider);\n            if (provider instanceof Array) {\n                // if we have an array recurse into the array\n                for (var i = 0; i < provider.length; i++) {\n                    recursivelyProcessProviders(records, provider[i]);\n                }\n            }\n            else if (typeof provider === 'function') {\n                // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n                // error messages\n                throw staticError('Function/Class not supported', provider);\n            }\n            else if (provider && typeof provider === 'object' && provider.provide) {\n                // At this point we have what looks like a provider: {provide: ?, ....}\n                var token = resolveForwardRef(provider.provide);\n                var resolvedProvider = resolveProvider(provider);\n                if (provider.multi === true) {\n                    // This is a multi provider.\n                    var multiProvider = records.get(token);\n                    if (multiProvider) {\n                        if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                            throw multiProviderMixError(token);\n                        }\n                    }\n                    else {\n                        // Create a placeholder factory which will look up the constituents of the multi provider.\n                        records.set(token, multiProvider = {\n                            token: provider.provide,\n                            deps: [],\n                            useNew: false,\n                            fn: MULTI_PROVIDER_FN,\n                            value: EMPTY\n                        });\n                    }\n                    // Treat the provider as the token.\n                    token = provider;\n                    multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n                }\n                var record = records.get(token);\n                if (record && record.fn == MULTI_PROVIDER_FN) {\n                    throw multiProviderMixError(token);\n                }\n                records.set(token, resolvedProvider);\n            }\n            else {\n                throw staticError('Unexpected provider', provider);\n            }\n        }\n    }\n    function tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n        try {\n            return resolveToken(token, record, records, parent, notFoundValue, flags);\n        }\n        catch (e) {\n            // ensure that 'e' is of type Error.\n            if (!(e instanceof Error)) {\n                e = new Error(e);\n            }\n            var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n            path.unshift(token);\n            if (record && record.value == CIRCULAR) {\n                // Reset the Circular flag.\n                record.value = EMPTY;\n            }\n            throw e;\n        }\n    }\n    function resolveToken(token, record, records, parent, notFoundValue, flags) {\n        var _a;\n        var value;\n        if (record && !(flags & exports.InjectFlags.SkipSelf)) {\n            // If we don't have a record, this implies that we don't own the provider hence don't know how\n            // to resolve it.\n            value = record.value;\n            if (value == CIRCULAR) {\n                throw Error(NO_NEW_LINE + 'Circular dependency');\n            }\n            else if (value === EMPTY) {\n                record.value = CIRCULAR;\n                var obj = undefined;\n                var useNew = record.useNew;\n                var fn = record.fn;\n                var depRecords = record.deps;\n                var deps = EMPTY;\n                if (depRecords.length) {\n                    deps = [];\n                    for (var i = 0; i < depRecords.length; i++) {\n                        var depRecord = depRecords[i];\n                        var options = depRecord.options;\n                        var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                        deps.push(tryResolveToken(\n                        // Current Token to resolve\n                        depRecord.token, \n                        // A record which describes how to resolve the token.\n                        // If undefined, this means we don't have such a record\n                        childRecord, \n                        // Other records we know about.\n                        records, \n                        // If we don't know how to resolve dependency and we should not check parent for it,\n                        // than pass in Null injector.\n                        !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR$1 : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, exports.InjectFlags.Default));\n                    }\n                }\n                record.value = value = useNew ? new ((_a = fn).bind.apply(_a, __spread([void 0], deps)))() : fn.apply(obj, deps);\n            }\n        }\n        else if (!(flags & exports.InjectFlags.Self)) {\n            value = parent.get(token, notFoundValue, exports.InjectFlags.Default);\n        }\n        return value;\n    }\n    function computeDeps(provider) {\n        var deps = EMPTY;\n        var providerDeps = provider.deps;\n        if (providerDeps && providerDeps.length) {\n            deps = [];\n            for (var i = 0; i < providerDeps.length; i++) {\n                var options = 6 /* Default */;\n                var token = resolveForwardRef(providerDeps[i]);\n                if (token instanceof Array) {\n                    for (var j = 0, annotations = token; j < annotations.length; j++) {\n                        var annotation = annotations[j];\n                        if (annotation instanceof Optional || annotation == Optional) {\n                            options = options | 1 /* Optional */;\n                        }\n                        else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                            options = options & ~2 /* CheckSelf */;\n                        }\n                        else if (annotation instanceof Self || annotation == Self) {\n                            options = options & ~4 /* CheckParent */;\n                        }\n                        else if (annotation instanceof Inject) {\n                            token = annotation.token;\n                        }\n                        else {\n                            token = resolveForwardRef(annotation);\n                        }\n                    }\n                }\n                deps.push({ token: token, options: options });\n            }\n        }\n        else if (provider.useExisting) {\n            var token = resolveForwardRef(provider.useExisting);\n            deps = [{ token: token, options: 6 /* Default */ }];\n        }\n        else if (!providerDeps && !(USE_VALUE in provider)) {\n            // useValue & useExisting are the only ones which are exempt from deps all others need it.\n            throw staticError('\\'deps\\' required', provider);\n        }\n        return deps;\n    }\n    function formatError(text, obj, source) {\n        if (source === void 0) { source = null; }\n        text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n        var context = stringify(obj);\n        if (obj instanceof Array) {\n            context = obj.map(stringify).join(' -> ');\n        }\n        else if (typeof obj === 'object') {\n            var parts = [];\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    var value = obj[key];\n                    parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n                }\n            }\n            context = \"{\" + parts.join(', ') + \"}\";\n        }\n        return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n    }\n    function staticError(text, obj) {\n        return new Error(formatError(text, obj));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An internal token whose presence in an injector indicates that the injector should treat itself\n     * as a root scoped injector when processing requests for unknown tokens which may indicate\n     * they are provided in the root scope.\n     */\n    var APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marker which indicates that a value has not yet been created from the factory function.\n     */\n    var NOT_YET = {};\n    /**\n     * Marker which indicates that the factory function for a token is in the process of being called.\n     *\n     * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n     * injection of a dependency has recursively attempted to inject the original token, and there is\n     * a circular dependency among the providers.\n     */\n    var CIRCULAR$1 = {};\n    var EMPTY_ARRAY$1 = [];\n    /**\n     * A lazily initialized NullInjector.\n     */\n    var NULL_INJECTOR$2 = undefined;\n    function getNullInjector() {\n        if (NULL_INJECTOR$2 === undefined) {\n            NULL_INJECTOR$2 = new NullInjector();\n        }\n        return NULL_INJECTOR$2;\n    }\n    /**\n     * Create a new `Injector` which is configured using a `defType` of `InjectorType<any>`s.\n     *\n     * @publicApi\n     */\n    function createInjector(defType, parent, additionalProviders) {\n        if (parent === void 0) { parent = null; }\n        if (additionalProviders === void 0) { additionalProviders = null; }\n        parent = parent || getNullInjector();\n        return new R3Injector(defType, additionalProviders, parent);\n    }\n    var R3Injector = /** @class */ (function () {\n        function R3Injector(def, additionalProviders, parent) {\n            var _this = this;\n            this.parent = parent;\n            /**\n             * Map of tokens to records which contain the instances of those tokens.\n             */\n            this.records = new Map();\n            /**\n             * The transitive set of `InjectorType`s which define this injector.\n             */\n            this.injectorDefTypes = new Set();\n            /**\n             * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n             */\n            this.onDestroy = new Set();\n            /**\n             * Flag indicating that this injector was previously destroyed.\n             */\n            this.destroyed = false;\n            // Start off by creating Records for every provider declared in every InjectorType\n            // included transitively in `def`.\n            var dedupStack = [];\n            deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, [], dedupStack); });\n            additionalProviders && deepForEach(additionalProviders, function (provider) { return _this.processProvider(provider, def, additionalProviders); });\n            // Make sure the INJECTOR token provides this injector.\n            this.records.set(INJECTOR$1, makeRecord(undefined, this));\n            // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n            // any injectable scoped to APP_ROOT_SCOPE.\n            this.isRootInjector = this.records.has(APP_ROOT);\n            // Eagerly instantiate the InjectorType classes themselves.\n            this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n        }\n        /**\n         * Destroy the injector and release references to every instance or provider associated with it.\n         *\n         * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n         * hook was found.\n         */\n        R3Injector.prototype.destroy = function () {\n            this.assertNotDestroyed();\n            // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n            this.destroyed = true;\n            try {\n                // Call all the lifecycle hooks.\n                this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n            }\n            finally {\n                // Release all references.\n                this.records.clear();\n                this.onDestroy.clear();\n                this.injectorDefTypes.clear();\n            }\n        };\n        R3Injector.prototype.get = function (token, notFoundValue, flags) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            if (flags === void 0) { flags = exports.InjectFlags.Default; }\n            this.assertNotDestroyed();\n            // Set the injection context.\n            var previousInjector = setCurrentInjector(this);\n            try {\n                // Check for the SkipSelf flag.\n                if (!(flags & exports.InjectFlags.SkipSelf)) {\n                    // SkipSelf isn't set, check if the record belongs to this injector.\n                    var record = this.records.get(token);\n                    if (record === undefined) {\n                        // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                        // with a scope matching this injector.\n                        var def = couldBeInjectableType(token) && getInjectableDef(token);\n                        if (def && this.injectableDefInScope(def)) {\n                            // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                            // all along.\n                            record = makeRecord(injectableDefOrInjectorDefFactory(token), NOT_YET);\n                            this.records.set(token, record);\n                        }\n                    }\n                    // If a record was found, get the instance for it and return it.\n                    if (record !== undefined) {\n                        return this.hydrate(token, record);\n                    }\n                }\n                // Select the next injector based on the Self flag - if self is set, the next injector is\n                // the NullInjector, otherwise it's the parent.\n                var nextInjector = !(flags & exports.InjectFlags.Self) ? this.parent : getNullInjector();\n                return nextInjector.get(token, notFoundValue);\n            }\n            finally {\n                // Lastly, clean up the state by restoring the previous injector.\n                setCurrentInjector(previousInjector);\n            }\n        };\n        R3Injector.prototype.assertNotDestroyed = function () {\n            if (this.destroyed) {\n                throw new Error('Injector has already been destroyed.');\n            }\n        };\n        /**\n         * Add an `InjectorType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n         * to this injector.\n         */\n        R3Injector.prototype.processInjectorType = function (defOrWrappedDef, parents, dedupStack) {\n            var _this = this;\n            defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n            if (!defOrWrappedDef)\n                return;\n            // Either the defOrWrappedDef is an InjectorType (with ngInjectorDef) or an\n            // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n            // read, so care is taken to only do the read once.\n            // First attempt to read the ngInjectorDef.\n            var def = getInjectorDef(defOrWrappedDef);\n            // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n            var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n            // Determine the InjectorType. In the case where `defOrWrappedDef` is an `InjectorType`,\n            // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n            // is the `ngModule`.\n            var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n            // Check for circular dependencies.\n            if (ngDevMode && parents.indexOf(defType) !== -1) {\n                var defName = stringify(defType);\n                throw new Error(\"Circular dependency in DI detected for type \" + defName + \". Dependency path: \" + parents.map(function (defType) { return stringify(defType); }).join(' > ') + \" > \" + defName + \".\");\n            }\n            // Check for multiple imports of the same module\n            var isDuplicate = dedupStack.indexOf(defType) !== -1;\n            // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n            // extra providers.\n            var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n                EMPTY_ARRAY$1;\n            // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n            // `InjectorDef` is on its `ngModule`.\n            if (ngModule !== undefined) {\n                def = getInjectorDef(ngModule);\n            }\n            // If no definition was found, it might be from exports. Remove it.\n            if (def == null) {\n                return;\n            }\n            // Track the InjectorType and add a provider for it.\n            this.injectorDefTypes.add(defType);\n            this.records.set(defType, makeRecord(def.factory, NOT_YET));\n            // Add providers in the same way that @NgModule resolution did:\n            // First, include providers from any imports.\n            if (def.imports != null && !isDuplicate) {\n                // Before processing defType's imports, add it to the set of parents. This way, if it ends\n                // up deeply importing itself, this can be detected.\n                ngDevMode && parents.push(defType);\n                // Add it to the set of dedups. This way we can detect multiple imports of the same module\n                dedupStack.push(defType);\n                try {\n                    deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents, dedupStack); });\n                }\n                finally {\n                    // Remove it from the parents set when finished.\n                    ngDevMode && parents.pop();\n                }\n            }\n            // Next, include providers listed on the definition itself.\n            var defProviders = def.providers;\n            if (defProviders != null && !isDuplicate) {\n                var injectorType_1 = defOrWrappedDef;\n                deepForEach(defProviders, function (provider) { return _this.processProvider(provider, injectorType_1, defProviders); });\n            }\n            // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n            var ngModuleType = defOrWrappedDef.ngModule;\n            deepForEach(providers, function (provider) { return _this.processProvider(provider, ngModuleType, providers); });\n        };\n        /**\n         * Process a `SingleProvider` and add it.\n         */\n        R3Injector.prototype.processProvider = function (provider, ngModuleType, providers) {\n            // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n            // property.\n            provider = resolveForwardRef(provider);\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider && provider.provide);\n            // Construct a `Record` for the provider.\n            var record = providerToRecord(provider, ngModuleType, providers);\n            if (!isTypeProvider(provider) && provider.multi === true) {\n                // If the provider indicates that it's a multi-provider, process it specially.\n                // First check whether it's been defined already.\n                var multiRecord_1 = this.records.get(token);\n                if (multiRecord_1) {\n                    // It has. Throw a nice error if\n                    if (multiRecord_1.multi === undefined) {\n                        throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                    }\n                }\n                else {\n                    multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                    multiRecord_1.factory = function () { return injectArgs(multiRecord_1.multi); };\n                    this.records.set(token, multiRecord_1);\n                }\n                token = provider;\n                multiRecord_1.multi.push(provider);\n            }\n            else {\n                var existing = this.records.get(token);\n                if (existing && existing.multi !== undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + stringify(token));\n                }\n            }\n            this.records.set(token, record);\n        };\n        R3Injector.prototype.hydrate = function (token, record) {\n            if (record.value === CIRCULAR$1) {\n                throw new Error(\"Cannot instantiate cyclic dependency! \" + stringify(token));\n            }\n            else if (record.value === NOT_YET) {\n                record.value = CIRCULAR$1;\n                record.value = record.factory();\n            }\n            if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n                this.onDestroy.add(record.value);\n            }\n            return record.value;\n        };\n        R3Injector.prototype.injectableDefInScope = function (def) {\n            if (!def.providedIn) {\n                return false;\n            }\n            else if (typeof def.providedIn === 'string') {\n                return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n            }\n            else {\n                return this.injectorDefTypes.has(def.providedIn);\n            }\n        };\n        return R3Injector;\n    }());\n    function injectableDefOrInjectorDefFactory(token) {\n        var injectableDef = getInjectableDef(token);\n        if (injectableDef === null) {\n            var injectorDef = getInjectorDef(token);\n            if (injectorDef !== null) {\n                return injectorDef.factory;\n            }\n            else if (token instanceof InjectionToken) {\n                throw new Error(\"Token \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n            }\n            else if (token instanceof Function) {\n                var paramLength = token.length;\n                if (paramLength > 0) {\n                    var args = new Array(paramLength).fill('?');\n                    throw new Error(\"Can't resolve all parameters for \" + stringify(token) + \": (\" + args.join(', ') + \").\");\n                }\n                return function () { return new token(); };\n            }\n            throw new Error('unreachable');\n        }\n        return injectableDef.factory;\n    }\n    function providerToRecord(provider, ngModuleType, providers) {\n        var factory = providerToFactory(provider, ngModuleType, providers);\n        if (isValueProvider(provider)) {\n            return makeRecord(undefined, provider.useValue);\n        }\n        else {\n            return makeRecord(factory, NOT_YET);\n        }\n    }\n    /**\n     * Converts a `SingleProvider` into a factory function.\n     *\n     * @param provider provider to convert to factory\n     */\n    function providerToFactory(provider, ngModuleType, providers) {\n        var factory = undefined;\n        if (isTypeProvider(provider)) {\n            return injectableDefOrInjectorDefFactory(resolveForwardRef(provider));\n        }\n        else {\n            if (isValueProvider(provider)) {\n                factory = function () { return resolveForwardRef(provider.useValue); };\n            }\n            else if (isExistingProvider(provider)) {\n                factory = function () { return inject(resolveForwardRef(provider.useExisting)); };\n            }\n            else if (isFactoryProvider(provider)) {\n                factory = function () { return provider.useFactory.apply(provider, __spread(injectArgs(provider.deps || []))); };\n            }\n            else {\n                var classRef_1 = resolveForwardRef(provider &&\n                    (provider.useClass || provider.provide));\n                if (!classRef_1) {\n                    var ngModuleDetail = '';\n                    if (ngModuleType && providers) {\n                        var providerDetail = providers.map(function (v) { return v == provider ? '?' + provider + '?' : '...'; });\n                        ngModuleDetail =\n                            \" - only instances of Provider and Type are allowed, got: [\" + providerDetail.join(', ') + \"]\";\n                    }\n                    throw new Error(\"Invalid provider for the NgModule '\" + stringify(ngModuleType) + \"'\" + ngModuleDetail);\n                }\n                if (hasDeps(provider)) {\n                    factory = function () { return new ((classRef_1).bind.apply((classRef_1), __spread([void 0], injectArgs(provider.deps))))(); };\n                }\n                else {\n                    return injectableDefOrInjectorDefFactory(classRef_1);\n                }\n            }\n        }\n        return factory;\n    }\n    function makeRecord(factory, value, multi) {\n        if (multi === void 0) { multi = false; }\n        return {\n            factory: factory,\n            value: value,\n            multi: multi ? [] : undefined,\n        };\n    }\n    function deepForEach(input, fn) {\n        input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n    }\n    function isValueProvider(value) {\n        return value && typeof value == 'object' && USE_VALUE in value;\n    }\n    function isExistingProvider(value) {\n        return !!(value && value.useExisting);\n    }\n    function isFactoryProvider(value) {\n        return !!(value && value.useFactory);\n    }\n    function isTypeProvider(value) {\n        return typeof value === 'function';\n    }\n    function hasDeps(value) {\n        return !!value.deps;\n    }\n    function hasOnDestroy(value) {\n        return typeof value === 'object' && value != null && value.ngOnDestroy &&\n            typeof value.ngOnDestroy === 'function';\n    }\n    function couldBeInjectableType(value) {\n        return (typeof value === 'function') ||\n            (typeof value === 'object' && value instanceof InjectionToken);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Resolves the providers which are defined in the DirectiveDef.\n     *\n     * When inserting the tokens and the factories in their respective arrays, we can assume that\n     * this method is called first for the component (if any), and then for other directives on the same\n     * node.\n     * As a consequence,the providers are always processed in that order:\n     * 1) The view providers of the component\n     * 2) The providers of the component\n     * 3) The providers of the other directives\n     * This matches the structure of the injectables arrays of a view (for each node).\n     * So the tokens and the factories can be pushed at the end of the arrays, except\n     * in one case for multi providers.\n     *\n     * @param def the directive definition\n     * @param providers: Array of `providers`.\n     * @param viewProviders: Array of `viewProviders`.\n     */\n    function providersResolver(def, providers, viewProviders) {\n        var lView = getLView();\n        var tView = lView[TVIEW];\n        if (tView.firstTemplatePass) {\n            var isComponent$$1 = isComponentDef(def);\n            // The list of view providers is processed first, and the flags are updated\n            resolveProvider$1(viewProviders, tView.data, tView.blueprint, isComponent$$1, true);\n            // Then, the list of providers is processed, and the flags are updated\n            resolveProvider$1(providers, tView.data, tView.blueprint, isComponent$$1, false);\n        }\n    }\n    /**\n     * Resolves a provider and publishes it to the DI system.\n     */\n    function resolveProvider$1(provider, tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider) {\n        provider = resolveForwardRef(provider);\n        if (Array.isArray(provider)) {\n            // Recursively call `resolveProvider`\n            // Recursion is OK in this case because this code will not be in hot-path once we implement\n            // cloning of the initial state.\n            for (var i = 0; i < provider.length; i++) {\n                resolveProvider$1(provider[i], tInjectables, lInjectablesBlueprint, isComponent$$1, isViewProvider);\n            }\n        }\n        else {\n            var lView = getLView();\n            var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n            var providerFactory = providerToFactory(provider);\n            var tNode = getPreviousOrParentTNode();\n            var beginIndex = tNode.providerIndexes & 65535 /* ProvidersStartIndexMask */;\n            var endIndex = tNode.directiveStart;\n            var cptViewProvidersCount = tNode.providerIndexes >> 16 /* CptViewProvidersCountShift */;\n            if (isTypeProvider(provider) || !provider.multi) {\n                // Single provider case: the factory is created and pushed immediately\n                var factory = new NodeInjectorFactory(providerFactory, isViewProvider, directiveInject);\n                var existingFactoryIndex = indexOf(token, tInjectables, isViewProvider ? beginIndex : beginIndex + cptViewProvidersCount, endIndex);\n                if (existingFactoryIndex == -1) {\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    lInjectablesBlueprint[existingFactoryIndex] = factory;\n                    lView[existingFactoryIndex] = factory;\n                }\n            }\n            else {\n                // Multi provider case:\n                // We create a multi factory which is going to aggregate all the values.\n                // Since the output of such a factory depends on content or view injection,\n                // we create two of them, which are linked together.\n                //\n                // The first one (for view providers) is always in the first block of the injectables array,\n                // and the second one (for providers) is always in the second block.\n                // This is important because view providers have higher priority. When a multi token\n                // is being looked up, the view providers should be found first.\n                // Note that it is not possible to have a multi factory in the third block (directive block).\n                //\n                // The algorithm to process multi providers is as follows:\n                // 1) If the multi provider comes from the `viewProviders` of the component:\n                //   a) If the special view providers factory doesn't exist, it is created and pushed.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                // 2) If the multi provider comes from the `providers` of the component or of another\n                // directive:\n                //   a) If the multi factory doesn't exist, it is created and provider pushed into it.\n                //      It is also linked to the multi factory for view providers, if it exists.\n                //   b) Else, the multi provider is added to the existing multi factory.\n                var existingProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex + cptViewProvidersCount, endIndex);\n                var existingViewProvidersFactoryIndex = indexOf(token, tInjectables, beginIndex, beginIndex + cptViewProvidersCount);\n                var doesProvidersFactoryExist = existingProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingProvidersFactoryIndex];\n                var doesViewProvidersFactoryExist = existingViewProvidersFactoryIndex >= 0 &&\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex];\n                if (isViewProvider && !doesViewProvidersFactoryExist ||\n                    !isViewProvider && !doesProvidersFactoryExist) {\n                    // Cases 1.a and 2.a\n                    diPublicInInjector(getOrCreateNodeInjectorForNode(tNode, lView), lView, token);\n                    var factory = multiFactory(isViewProvider ? multiViewProvidersFactoryResolver : multiProvidersFactoryResolver, lInjectablesBlueprint.length, isViewProvider, isComponent$$1, providerFactory);\n                    if (!isViewProvider && doesViewProvidersFactoryExist) {\n                        lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory = factory;\n                    }\n                    tInjectables.push(token);\n                    tNode.directiveStart++;\n                    tNode.directiveEnd++;\n                    if (isViewProvider) {\n                        tNode.providerIndexes += 65536 /* CptViewProvidersCountShifter */;\n                    }\n                    lInjectablesBlueprint.push(factory);\n                    lView.push(factory);\n                }\n                else {\n                    // Cases 1.b and 2.b\n                    multiFactoryAdd(lInjectablesBlueprint[isViewProvider ? existingViewProvidersFactoryIndex : existingProvidersFactoryIndex], providerFactory, !isViewProvider && isComponent$$1);\n                }\n                if (!isViewProvider && isComponent$$1 && doesViewProvidersFactoryExist) {\n                    lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++;\n                }\n            }\n        }\n    }\n    /**\n     * Add a factory in a multi factory.\n     */\n    function multiFactoryAdd(multiFactory, factory, isComponentProvider) {\n        multiFactory.multi.push(factory);\n        if (isComponentProvider) {\n            multiFactory.componentProviders++;\n        }\n    }\n    /**\n     * Returns the index of item in the array, but only in the begin to end range.\n     */\n    function indexOf(item, arr, begin, end) {\n        for (var i = begin; i < end; i++) {\n            if (arr[i] === item)\n                return i;\n        }\n        return -1;\n    }\n    /**\n     * Use this with `multi` `providers`.\n     */\n    function multiProvidersFactoryResolver(_, tData, lData, tNode) {\n        return multiResolve(this.multi, []);\n    }\n    /**\n     * Use this with `multi` `viewProviders`.\n     *\n     * This factory knows how to concatenate itself with the existing `multi` `providers`.\n     */\n    function multiViewProvidersFactoryResolver(_, tData, lData, tNode) {\n        var factories = this.multi;\n        var result;\n        if (this.providerFactory) {\n            var componentCount = this.providerFactory.componentProviders;\n            var multiProviders = getNodeInjectable(tData, lData, this.providerFactory.index, tNode);\n            // Copy the section of the array which contains `multi` `providers` from the component\n            result = multiProviders.slice(0, componentCount);\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n            // Copy the section of the array which contains `multi` `providers` from other directives\n            for (var i = componentCount; i < multiProviders.length; i++) {\n                result.push(multiProviders[i]);\n            }\n        }\n        else {\n            result = [];\n            // Insert the `viewProvider` instances.\n            multiResolve(factories, result);\n        }\n        return result;\n    }\n    /**\n     * Maps an array of factories into an array of values.\n     */\n    function multiResolve(factories, result) {\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            result.push(factory());\n        }\n        return result;\n    }\n    /**\n     * Creates a multi factory.\n     */\n    function multiFactory(factoryFn, index, isViewProvider, isComponent$$1, f) {\n        var factory = new NodeInjectorFactory(factoryFn, isViewProvider, directiveInject);\n        factory.multi = [];\n        factory.index = index;\n        factory.componentProviders = 0;\n        multiFactoryAdd(factory, f, isComponent$$1 && !isViewProvider);\n        return factory;\n    }\n\n    /**\n     * This feature resolves the providers of a directive (or component),\n     * and publish them into the DI system, making it visible to others for injection.\n     *\n     * For example:\n     * class ComponentWithProviders {\n     *   constructor(private greeter: GreeterDE) {}\n     *\n     *   static ngComponentDef = defineComponent({\n     *     type: ComponentWithProviders,\n     *     selectors: [['component-with-providers']],\n     *    factory: () => new ComponentWithProviders(directiveInject(GreeterDE as any)),\n     *    consts: 1,\n     *    vars: 1,\n     *    template: function(fs: RenderFlags, ctx: ComponentWithProviders) {\n     *      if (fs & RenderFlags.Create) {\n     *        text(0);\n     *      }\n     *      if (fs & RenderFlags.Update) {\n     *        textBinding(0, bind(ctx.greeter.greet()));\n     *      }\n     *    },\n     *    features: [ProvidersFeature([GreeterDE])]\n     *  });\n     * }\n     *\n     * @param definition\n     */\n    function ProvidersFeature(providers, viewProviders) {\n        if (viewProviders === void 0) { viewProviders = []; }\n        return function (definition) {\n            definition.providersResolver = function (def) {\n                return providersResolver(def, providers, viewProviders);\n            };\n        };\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a component created by a `ComponentFactory`.\n     * Provides access to the component instance and related objects,\n     * and provides the means of destroying the instance.\n     *\n     * @publicApi\n     */\n    var ComponentRef = /** @class */ (function () {\n        function ComponentRef() {\n        }\n        return ComponentRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactory = /** @class */ (function () {\n        function ComponentFactory() {\n        }\n        return ComponentFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function noComponentFactoryError(component) {\n        var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n        error[ERROR_COMPONENT] = component;\n        return error;\n    }\n    var ERROR_COMPONENT = 'ngComponent';\n    var _NullComponentFactoryResolver = /** @class */ (function () {\n        function _NullComponentFactoryResolver() {\n        }\n        _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            throw noComponentFactoryError(component);\n        };\n        return _NullComponentFactoryResolver;\n    }());\n    /**\n     * @publicApi\n     */\n    var ComponentFactoryResolver = /** @class */ (function () {\n        function ComponentFactoryResolver() {\n        }\n        ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n        return ComponentFactoryResolver;\n    }());\n    var CodegenComponentFactoryResolver = /** @class */ (function () {\n        function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n            this._parent = _parent;\n            this._ngModule = _ngModule;\n            this._factories = new Map();\n            for (var i = 0; i < factories.length; i++) {\n                var factory = factories[i];\n                this._factories.set(factory.componentType, factory);\n            }\n        }\n        CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n            var factory = this._factories.get(component);\n            if (!factory && this._parent) {\n                factory = this._parent.resolveComponentFactory(component);\n            }\n            if (!factory) {\n                throw noComponentFactoryError(component);\n            }\n            return new ComponentFactoryBoundToModule(factory, this._ngModule);\n        };\n        return CodegenComponentFactoryResolver;\n    }());\n    var ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n        __extends(ComponentFactoryBoundToModule, _super);\n        function ComponentFactoryBoundToModule(factory, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.factory = factory;\n            _this.ngModule = ngModule;\n            _this.selector = factory.selector;\n            _this.componentType = factory.componentType;\n            _this.ngContentSelectors = factory.ngContentSelectors;\n            _this.inputs = factory.inputs;\n            _this.outputs = factory.outputs;\n            return _this;\n        }\n        ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n        };\n        return ComponentFactoryBoundToModule;\n    }(ComponentFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n     *\n     * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n     * NgModule Instance.\n     *\n     * @publicApi\n     */\n    var NgModuleRef = /** @class */ (function () {\n        function NgModuleRef() {\n        }\n        return NgModuleRef;\n    }());\n    /**\n     * @publicApi\n     */\n    var NgModuleFactory = /** @class */ (function () {\n        function NgModuleFactory() {\n        }\n        return NgModuleFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ViewRef = /** @class */ (function () {\n        function ViewRef(_lView, _context, _componentIndex) {\n            this._context = _context;\n            this._componentIndex = _componentIndex;\n            this._appRef = null;\n            this._viewContainerRef = null;\n            /**\n             * @internal\n             */\n            this._tViewNode = null;\n            this._lView = _lView;\n        }\n        Object.defineProperty(ViewRef.prototype, \"rootNodes\", {\n            get: function () {\n                if (this._lView[HOST] == null) {\n                    var tView = this._lView[HOST_NODE];\n                    return collectNativeNodes(this._lView, tView, []);\n                }\n                return [];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"context\", {\n            get: function () { return this._context ? this._context : this._lookUpContext(); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef.prototype, \"destroyed\", {\n            get: function () {\n                return (this._lView[FLAGS] & 64 /* Destroyed */) === 64 /* Destroyed */;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                var index = this._viewContainerRef.indexOf(this);\n                if (index > -1) {\n                    this._viewContainerRef.detach(index);\n                }\n                this._viewContainerRef = null;\n            }\n            destroyLView(this._lView);\n        };\n        ViewRef.prototype.onDestroy = function (callback) { storeCleanupFn(this._lView, callback); };\n        /**\n         * Marks a view and all of its ancestors dirty.\n         *\n         * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n         * multiple `markForCheck` calls to into one change detection run.\n         *\n         * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n         * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n         * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n         *\n         * <!-- TODO: Add a link to a chapter on OnPush components -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Component({\n         *   selector: 'my-app',\n         *   template: `Number of ticks: {{numberOfTicks}}`\n         *   changeDetection: ChangeDetectionStrategy.OnPush,\n         * })\n         * class AppComponent {\n         *   numberOfTicks = 0;\n         *\n         *   constructor(private ref: ChangeDetectorRef) {\n         *     setInterval(() => {\n         *       this.numberOfTicks++;\n         *       // the following is required, otherwise the view will not be updated\n         *       this.ref.markForCheck();\n         *     }, 1000);\n         *   }\n         * }\n         * ```\n         */\n        ViewRef.prototype.markForCheck = function () { markViewDirty(this._lView); };\n        /**\n         * Detaches the view from the change detection tree.\n         *\n         * Detached views will not be checked during change detection runs until they are\n         * re-attached, even if they are dirty. `detach` can be used in combination with\n         * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n         * detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds. We can do that by detaching\n         * the component's change detector and doing a local check every five seconds.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   // in a real application the returned data will be different every time\n         *   get data() {\n         *     return [1,2,3,4,5];\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'giant-list',\n         *   template: `\n         *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n         *   `,\n         * })\n         * class GiantList {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n         *     ref.detach();\n         *     setInterval(() => {\n         *       this.ref.detectChanges();\n         *     }, 5000);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     <giant-list><giant-list>\n         *   `,\n         * })\n         * class App {\n         * }\n         * ```\n         */\n        ViewRef.prototype.detach = function () { this._lView[FLAGS] &= ~16 /* Attached */; };\n        /**\n         * Re-attaches a view to the change detection tree.\n         *\n         * This can be used to re-attach views that were previously detached from the tree\n         * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example creates a component displaying `live` data. The component will detach\n         * its change detector from the main change detector tree when the component's live property\n         * is set to false.\n         *\n         * ```typescript\n         * class DataProvider {\n         *   data = 1;\n         *\n         *   constructor() {\n         *     setInterval(() => {\n         *       this.data = this.data * 2;\n         *     }, 500);\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'live-data',\n         *   inputs: ['live'],\n         *   template: 'Data: {{dataProvider.data}}'\n         * })\n         * class LiveData {\n         *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n         *\n         *   set live(value) {\n         *     if (value) {\n         *       this.ref.reattach();\n         *     } else {\n         *       this.ref.detach();\n         *     }\n         *   }\n         * }\n         *\n         * @Component({\n         *   selector: 'my-app',\n         *   providers: [DataProvider],\n         *   template: `\n         *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n         *     <live-data [live]=\"live\"><live-data>\n         *   `,\n         * })\n         * class AppComponent {\n         *   live = true;\n         * }\n         * ```\n         */\n        ViewRef.prototype.reattach = function () { this._lView[FLAGS] |= 16 /* Attached */; };\n        /**\n         * Checks the view and its children.\n         *\n         * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n         * local change detection checks.\n         *\n         * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n         * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example defines a component with a large list of readonly data.\n         * Imagine, the data changes constantly, many times per second. For performance reasons,\n         * we want to check and update the list every five seconds.\n         *\n         * We can do that by detaching the component's change detector and doing a local change detection\n         * check every five seconds.\n         *\n         * See {@link ChangeDetectorRef#detach detach} for more information.\n         */\n        ViewRef.prototype.detectChanges = function () { detectChangesInternal(this._lView, this.context); };\n        /**\n         * Checks the change detector and its children, and throws if any changes are detected.\n         *\n         * This is used in development mode to verify that running change detection doesn't\n         * introduce other changes.\n         */\n        ViewRef.prototype.checkNoChanges = function () { checkNoChanges(this.context); };\n        ViewRef.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        ViewRef.prototype.detachFromAppRef = function () { this._appRef = null; };\n        ViewRef.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef.prototype._lookUpContext = function () {\n            return this._context = this._lView[PARENT][this._componentIndex];\n        };\n        return ViewRef;\n    }());\n    /** @internal */\n    var RootViewRef = /** @class */ (function (_super) {\n        __extends(RootViewRef, _super);\n        function RootViewRef(_view) {\n            var _this = _super.call(this, _view, null, -1) || this;\n            _this._view = _view;\n            return _this;\n        }\n        RootViewRef.prototype.detectChanges = function () { detectChangesInRootView(this._view); };\n        RootViewRef.prototype.checkNoChanges = function () { checkNoChangesInRootView(this._view); };\n        Object.defineProperty(RootViewRef.prototype, \"context\", {\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return RootViewRef;\n    }(ViewRef));\n    function collectNativeNodes(lView, parentTNode, result) {\n        var tNodeChild = parentTNode.child;\n        while (tNodeChild) {\n            result.push(getNativeByTNode(tNodeChild, lView));\n            if (tNodeChild.type === 4 /* ElementContainer */) {\n                collectNativeNodes(lView, tNodeChild, result);\n            }\n            tNodeChild = tNodeChild.next;\n        }\n        return result;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Creates an ElementRef from the most recent node.\n     *\n     * @returns The ElementRef instance to use\n     */\n    function injectElementRef(ElementRefToken) {\n        return createElementRef(ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    var R3ElementRef;\n    /**\n     * Creates an ElementRef given a node.\n     *\n     * @param ElementRefToken The ElementRef type\n     * @param tNode The node for which you'd like an ElementRef\n     * @param view The view to which the node belongs\n     * @returns The ElementRef instance to use\n     */\n    function createElementRef(ElementRefToken, tNode, view) {\n        if (!R3ElementRef) {\n            // TODO: Fix class name, should be ElementRef, but there appears to be a rollup bug\n            R3ElementRef = /** @class */ (function (_super) {\n                __extends(ElementRef_, _super);\n                function ElementRef_() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return ElementRef_;\n            }(ElementRefToken));\n        }\n        return new R3ElementRef(getNativeByTNode(tNode, view));\n    }\n    var R3TemplateRef;\n    /**\n     * Creates a TemplateRef given a node.\n     *\n     * @returns The TemplateRef instance to use\n     */\n    function injectTemplateRef(TemplateRefToken, ElementRefToken) {\n        return createTemplateRef(TemplateRefToken, ElementRefToken, getPreviousOrParentTNode(), getLView());\n    }\n    /**\n     * Creates a TemplateRef and stores it on the injector.\n     *\n     * @param TemplateRefToken The TemplateRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a TemplateRef\n     * @param hostView The view to which the node belongs\n     * @returns The TemplateRef instance to use\n     */\n    function createTemplateRef(TemplateRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3TemplateRef) {\n            // TODO: Fix class name, should be TemplateRef, but there appears to be a rollup bug\n            R3TemplateRef = /** @class */ (function (_super) {\n                __extends(TemplateRef_, _super);\n                function TemplateRef_(_declarationParentView, elementRef, _tView, _renderer, _queries, _injectorIndex) {\n                    var _this = _super.call(this) || this;\n                    _this._declarationParentView = _declarationParentView;\n                    _this.elementRef = elementRef;\n                    _this._tView = _tView;\n                    _this._renderer = _renderer;\n                    _this._queries = _queries;\n                    _this._injectorIndex = _injectorIndex;\n                    return _this;\n                }\n                TemplateRef_.prototype.createEmbeddedView = function (context, container$$1, hostTNode, hostView, index) {\n                    var lView = createEmbeddedViewAndNode(this._tView, context, this._declarationParentView, this._renderer, this._queries, this._injectorIndex);\n                    if (container$$1) {\n                        insertView(lView, container$$1, hostView, index, hostTNode.index);\n                    }\n                    renderEmbeddedTemplate(lView, this._tView, context);\n                    var viewRef = new ViewRef(lView, context, -1);\n                    viewRef._tViewNode = lView[HOST_NODE];\n                    return viewRef;\n                };\n                return TemplateRef_;\n            }(TemplateRefToken));\n        }\n        if (hostTNode.type === 0 /* Container */) {\n            var hostContainer = hostView[hostTNode.index];\n            ngDevMode && assertDefined(hostTNode.tViews, 'TView must be allocated');\n            return new R3TemplateRef(hostView, createElementRef(ElementRefToken, hostTNode, hostView), hostTNode.tViews, getLView()[RENDERER], hostContainer[QUERIES], hostTNode.injectorIndex);\n        }\n        else {\n            return null;\n        }\n    }\n    var R3ViewContainerRef;\n    /**\n     * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n     * already exists, retrieves the existing ViewContainerRef.\n     *\n     * @returns The ViewContainerRef instance to use\n     */\n    function injectViewContainerRef(ViewContainerRefToken, ElementRefToken) {\n        var previousTNode = getPreviousOrParentTNode();\n        return createContainerRef(ViewContainerRefToken, ElementRefToken, previousTNode, getLView());\n    }\n    /**\n     * Creates a ViewContainerRef and stores it on the injector.\n     *\n     * @param ViewContainerRefToken The ViewContainerRef type\n     * @param ElementRefToken The ElementRef type\n     * @param hostTNode The node that is requesting a ViewContainerRef\n     * @param hostView The view to which the node belongs\n     * @returns The ViewContainerRef instance to use\n     */\n    function createContainerRef(ViewContainerRefToken, ElementRefToken, hostTNode, hostView) {\n        if (!R3ViewContainerRef) {\n            // TODO: Fix class name, should be ViewContainerRef, but there appears to be a rollup bug\n            R3ViewContainerRef = /** @class */ (function (_super) {\n                __extends(ViewContainerRef_, _super);\n                function ViewContainerRef_(_lContainer, _hostTNode, _hostView) {\n                    var _this = _super.call(this) || this;\n                    _this._lContainer = _lContainer;\n                    _this._hostTNode = _hostTNode;\n                    _this._hostView = _hostView;\n                    _this._viewRefs = [];\n                    return _this;\n                }\n                Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n                    get: function () {\n                        return createElementRef(ElementRefToken, this._hostTNode, this._hostView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n                    get: function () { return new NodeInjector(this._hostTNode, this._hostView); },\n                    enumerable: true,\n                    configurable: true\n                });\n                Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n                    /** @deprecated No replacement */\n                    get: function () {\n                        var parentLocation = getParentInjectorLocation(this._hostTNode, this._hostView);\n                        var parentView = getParentInjectorView(parentLocation, this._hostView);\n                        var parentTNode = getParentInjectorTNode(parentLocation, this._hostView, this._hostTNode);\n                        return !hasParentInjector(parentLocation) || parentTNode == null ?\n                            new NodeInjector(null, this._hostView) :\n                            new NodeInjector(parentTNode, parentView);\n                    },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.clear = function () {\n                    while (this._lContainer[VIEWS].length) {\n                        this.remove(0);\n                    }\n                };\n                ViewContainerRef_.prototype.get = function (index) { return this._viewRefs[index] || null; };\n                Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n                    get: function () { return this._lContainer[VIEWS].length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n                    var adjustedIdx = this._adjustIndex(index);\n                    var viewRef = templateRef\n                        .createEmbeddedView(context || {}, this._lContainer, this._hostTNode, this._hostView, adjustedIdx);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n                    var contextInjector = injector || this.parentInjector;\n                    if (!ngModuleRef && componentFactory.ngModule == null && contextInjector) {\n                        ngModuleRef = contextInjector.get(NgModuleRef, null);\n                    }\n                    var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n                    this.insert(componentRef.hostView, index);\n                    return componentRef;\n                };\n                ViewContainerRef_.prototype.insert = function (viewRef, index) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n                    }\n                    var lView = viewRef._lView;\n                    var adjustedIdx = this._adjustIndex(index);\n                    insertView(lView, this._lContainer, this._hostView, adjustedIdx, this._hostTNode.index);\n                    var beforeNode = getBeforeNodeForView(adjustedIdx, this._lContainer[VIEWS], this._lContainer[NATIVE]);\n                    addRemoveViewFromContainer(lView, true, beforeNode);\n                    viewRef.attachToViewContainerRef(this);\n                    this._viewRefs.splice(adjustedIdx, 0, viewRef);\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.move = function (viewRef, newIndex) {\n                    if (viewRef.destroyed) {\n                        throw new Error('Cannot move a destroyed View in a ViewContainer!');\n                    }\n                    var index = this.indexOf(viewRef);\n                    this.detach(index);\n                    this.insert(viewRef, this._adjustIndex(newIndex));\n                    return viewRef;\n                };\n                ViewContainerRef_.prototype.indexOf = function (viewRef) { return this._viewRefs.indexOf(viewRef); };\n                ViewContainerRef_.prototype.remove = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    removeView(this._lContainer, this._hostTNode, adjustedIdx);\n                    this._viewRefs.splice(adjustedIdx, 1);\n                };\n                ViewContainerRef_.prototype.detach = function (index) {\n                    var adjustedIdx = this._adjustIndex(index, -1);\n                    var view = detachView(this._lContainer, adjustedIdx, !!this._hostTNode.detached);\n                    var wasDetached = this._viewRefs.splice(adjustedIdx, 1)[0] != null;\n                    return wasDetached ? new ViewRef(view, view[CONTEXT], view[CONTAINER_INDEX]) : null;\n                };\n                ViewContainerRef_.prototype._adjustIndex = function (index, shift) {\n                    if (shift === void 0) { shift = 0; }\n                    if (index == null) {\n                        return this._lContainer[VIEWS].length + shift;\n                    }\n                    if (ngDevMode) {\n                        assertGreaterThan(index, -1, 'index must be positive');\n                        // +1 because it's legal to insert at the end.\n                        assertLessThan(index, this._lContainer[VIEWS].length + 1 + shift, 'index');\n                    }\n                    return index;\n                };\n                return ViewContainerRef_;\n            }(ViewContainerRefToken));\n        }\n        ngDevMode && assertNodeOfPossibleTypes(hostTNode, 0 /* Container */, 3 /* Element */, 4 /* ElementContainer */);\n        var lContainer;\n        var slotValue = hostView[hostTNode.index];\n        if (isLContainer(slotValue)) {\n            // If the host is a container, we don't need to create a new LContainer\n            lContainer = slotValue;\n            lContainer[ACTIVE_INDEX] = -1;\n        }\n        else {\n            var commentNode = hostView[RENDERER].createComment(ngDevMode ? 'container' : '');\n            ngDevMode && ngDevMode.rendererCreateComment++;\n            // A container can be created on the root (topmost / bootstrapped) component and in this case we\n            // can't use LTree to insert container's marker node (both parent of a comment node and the\n            // commend node itself is located outside of elements hold by LTree). In this specific case we\n            // use low-level DOM manipulation to insert container's marker (comment) node.\n            if (isRootView(hostView)) {\n                var renderer = hostView[RENDERER];\n                var hostNative = getNativeByTNode(hostTNode, hostView);\n                var parentOfHostNative = nativeParentNode(renderer, hostNative);\n                nativeInsertBefore(renderer, parentOfHostNative, commentNode, nativeNextSibling(renderer, hostNative));\n            }\n            else {\n                appendChild(commentNode, hostTNode, hostView);\n            }\n            hostView[hostTNode.index] = lContainer =\n                createLContainer(slotValue, hostTNode, hostView, commentNode, true);\n            addToViewTree(hostView, hostTNode.index, lContainer);\n        }\n        return new R3ViewContainerRef(lContainer, hostTNode, hostView);\n    }\n    /** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\n    function injectChangeDetectorRef() {\n        return createViewRef(getPreviousOrParentTNode(), getLView(), null);\n    }\n    /**\n     * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n     *\n     * @param hostTNode The node that is requesting a ChangeDetectorRef\n     * @param hostView The view to which the node belongs\n     * @param context The context for this change detector ref\n     * @returns The ChangeDetectorRef to use\n     */\n    function createViewRef(hostTNode, hostView, context) {\n        if (isComponent(hostTNode)) {\n            var componentIndex = hostTNode.directiveStart;\n            var componentView = getComponentViewByIndex(hostTNode.index, hostView);\n            return new ViewRef(componentView, context, componentIndex);\n        }\n        else if (hostTNode.type === 3 /* Element */) {\n            var hostComponentView = findComponentView(hostView);\n            return new ViewRef(hostComponentView, hostComponentView[CONTEXT], -1);\n        }\n        return null;\n    }\n    function getOrCreateRenderer2(view) {\n        var renderer = view[RENDERER];\n        if (isProceduralRenderer(renderer)) {\n            return renderer;\n        }\n        else {\n            throw new Error('Cannot inject Renderer2 when the application uses Renderer3!');\n        }\n    }\n    /** Returns a Renderer2 (or throws when application was bootstrapped with Renderer3) */\n    function injectRenderer2() {\n        return getOrCreateRenderer2(getLView());\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A wrapper around a native element inside of a View.\n     *\n     * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n     * element.\n     *\n     * @security Permitting direct access to the DOM can make your application more vulnerable to\n     * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n     * [Security Guide](http://g.co/ng/security).\n     *\n     * @publicApi\n     */\n    // Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n    // i.e. users have to ask for what they need. With that, we can build better analysis tools\n    // and could do better codegen in the future.\n    var ElementRef = /** @class */ (function () {\n        function ElementRef(nativeElement) {\n            this.nativeElement = nativeElement;\n        }\n        /** @internal */\n        ElementRef.__NG_ELEMENT_ID__ = function () { return SWITCH_ELEMENT_REF_FACTORY(ElementRef); };\n        return ElementRef;\n    }());\n    var SWITCH_ELEMENT_REF_FACTORY__POST_R3__ = injectElementRef;\n    var SWITCH_ELEMENT_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_ELEMENT_REF_FACTORY = SWITCH_ELEMENT_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n     * @publicApi\n     */\n    var RenderComponentType = /** @class */ (function () {\n        function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n            this.id = id;\n            this.templateUrl = templateUrl;\n            this.slotCount = slotCount;\n            this.encapsulation = encapsulation;\n            this.styles = styles;\n            this.animations = animations;\n        }\n        return RenderComponentType;\n    }());\n    /**\n     * @deprecated Debug info is handled internally in the view engine now.\n     */\n    var RenderDebugInfo = /** @class */ (function () {\n        function RenderDebugInfo() {\n        }\n        return RenderDebugInfo;\n    }());\n    /**\n     * @deprecated Use the `Renderer2` instead.\n     * @publicApi\n     */\n    var Renderer = /** @class */ (function () {\n        function Renderer() {\n        }\n        return Renderer;\n    }());\n    var Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n    /**\n     * Injectable service that provides a low-level interface for modifying the UI.\n     *\n     * Use this service to bypass Angular's templating and make custom UI changes that can't be\n     * expressed declaratively. For example if you need to set a property or an attribute whose name is\n     * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n     * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n     *\n     * If you are implementing a custom renderer, you must implement this interface.\n     *\n     * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n     *\n     * @deprecated Use `RendererFactory2` instead.\n     * @publicApi\n     */\n    var RootRenderer = /** @class */ (function () {\n        function RootRenderer() {\n        }\n        return RootRenderer;\n    }());\n    /**\n     * Creates and initializes a custom renderer that implements the `Renderer2` base class.\n     *\n     * @publicApi\n     */\n    var RendererFactory2 = /** @class */ (function () {\n        function RendererFactory2() {\n        }\n        return RendererFactory2;\n    }());\n    (function (RendererStyleFlags2) {\n        /**\n         * Marks a style as important.\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n        /**\n         * Marks a style as using dash case naming (this-is-dash-case).\n         */\n        RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n    })(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n    /**\n     * Extend this base class to implement custom rendering. By default, Angular\n     * renders a template into DOM. You can use custom rendering to intercept\n     * rendering calls, or to render to something other than DOM.\n     *\n     * Create your custom renderer using `RendererFactory2`.\n     *\n     * Use a custom renderer to bypass Angular's templating and\n     * make custom UI changes that can't be expressed declaratively.\n     * For example if you need to set a property or an attribute whose name is\n     * not statically known, use the `setProperty()` or\n     * `setAttribute()` method.\n     *\n     * @publicApi\n     */\n    var Renderer2 = /** @class */ (function () {\n        function Renderer2() {\n        }\n        /** @internal */\n        Renderer2.__NG_ELEMENT_ID__ = function () { return SWITCH_RENDERER2_FACTORY(); };\n        return Renderer2;\n    }());\n    var SWITCH_RENDERER2_FACTORY__POST_R3__ = injectRenderer2;\n    var SWITCH_RENDERER2_FACTORY__PRE_R3__ = noop;\n    var SWITCH_RENDERER2_FACTORY = SWITCH_RENDERER2_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    (function (SecurityContext) {\n        SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n        SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n        SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n        SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n        SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n        SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n    })(exports.SecurityContext || (exports.SecurityContext = {}));\n    /**\n     * Sanitizer is used by the views to sanitize potentially dangerous values.\n     *\n     * @publicApi\n     */\n    var Sanitizer = /** @class */ (function () {\n        function Sanitizer() {\n        }\n        return Sanitizer;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description Represents the version of Angular\n     *\n     * @publicApi\n     */\n    var Version = /** @class */ (function () {\n        function Version(full) {\n            this.full = full;\n            this.major = full.split('.')[0];\n            this.minor = full.split('.')[1];\n            this.patch = full.split('.').slice(2).join('.');\n        }\n        return Version;\n    }());\n    /**\n     * @publicApi\n     */\n    var VERSION = new Version('7.2.1');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ComponentFactoryResolver$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactoryResolver$$1, _super);\n        /**\n         * @param ngModule The NgModuleRef to which all resolved factories are bound.\n         */\n        function ComponentFactoryResolver$$1(ngModule) {\n            var _this = _super.call(this) || this;\n            _this.ngModule = ngModule;\n            return _this;\n        }\n        ComponentFactoryResolver$$1.prototype.resolveComponentFactory = function (component) {\n            ngDevMode && assertComponentType(component);\n            var componentDef = getComponentDef(component);\n            return new ComponentFactory$1(componentDef, this.ngModule);\n        };\n        return ComponentFactoryResolver$$1;\n    }(ComponentFactoryResolver));\n    function toRefArray(map) {\n        var array = [];\n        for (var nonMinified in map) {\n            if (map.hasOwnProperty(nonMinified)) {\n                var minified = map[nonMinified];\n                array.push({ propName: minified, templateName: nonMinified });\n            }\n        }\n        return array;\n    }\n    /**\n     * Default {@link RootContext} for all components rendered with {@link renderComponent}.\n     */\n    var ROOT_CONTEXT = new InjectionToken('ROOT_CONTEXT_TOKEN', { providedIn: 'root', factory: function () { return createRootContext(inject(SCHEDULER)); } });\n    /**\n     * A change detection scheduler token for {@link RootContext}. This token is the default value used\n     * for the default `RootContext` found in the {@link ROOT_CONTEXT} token.\n     */\n    var SCHEDULER = new InjectionToken('SCHEDULER_TOKEN', {\n        providedIn: 'root',\n        factory: function () { return defaultScheduler; },\n    });\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n    function createChainedInjector(rootViewInjector, moduleInjector) {\n        return {\n            get: function (token, notFoundValue) {\n                var value = rootViewInjector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n                if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n                    notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n                    // Return the value from the root element injector when\n                    // - it provides it\n                    //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    // - the module injector should not be checked\n                    //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n                    return value;\n                }\n                return moduleInjector.get(token, notFoundValue);\n            }\n        };\n    }\n    /**\n     * Render3 implementation of {@link viewEngine_ComponentFactory}.\n     */\n    var ComponentFactory$1 = /** @class */ (function (_super) {\n        __extends(ComponentFactory$$1, _super);\n        /**\n         * @param componentDef The component definition.\n         * @param ngModule The NgModuleRef to which the factory is bound.\n         */\n        function ComponentFactory$$1(componentDef, ngModule) {\n            var _this = _super.call(this) || this;\n            _this.componentDef = componentDef;\n            _this.ngModule = ngModule;\n            _this.componentType = componentDef.type;\n            _this.selector = componentDef.selectors[0][0];\n            _this.ngContentSelectors = [];\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory$$1.prototype, \"inputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.inputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory$$1.prototype, \"outputs\", {\n            get: function () {\n                return toRefArray(this.componentDef.outputs);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentFactory$$1.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            var isInternalRootView = rootSelectorOrNode === undefined;\n            ngModule = ngModule || this.ngModule;\n            var rootViewInjector = ngModule ? createChainedInjector(injector, ngModule.injector) : injector;\n            var rendererFactory = rootViewInjector.get(RendererFactory2, domRendererFactory3);\n            var sanitizer = rootViewInjector.get(Sanitizer, null);\n            var hostRNode = isInternalRootView ?\n                elementCreate(this.selector, rendererFactory.createRenderer(null, this.componentDef)) :\n                locateHostElement(rendererFactory, rootSelectorOrNode);\n            var rootFlags = this.componentDef.onPush ? 8 /* Dirty */ | 128 /* IsRoot */ :\n                4 /* CheckAlways */ | 128 /* IsRoot */;\n            var rootContext = !isInternalRootView ? rootViewInjector.get(ROOT_CONTEXT) : createRootContext();\n            var renderer = rendererFactory.createRenderer(hostRNode, this.componentDef);\n            if (rootSelectorOrNode && hostRNode) {\n                ngDevMode && ngDevMode.rendererSetAttribute++;\n                isProceduralRenderer(renderer) ?\n                    renderer.setAttribute(hostRNode, 'ng-version', VERSION.full) :\n                    hostRNode.setAttribute('ng-version', VERSION.full);\n            }\n            // Create the root view. Uses empty TView and ContentTemplate.\n            var rootLView = createLView(null, createTView(-1, null, 1, 0, null, null, null), rootContext, rootFlags, rendererFactory, renderer, sanitizer, rootViewInjector);\n            // rootView is the parent when bootstrapping\n            var oldLView = enterView(rootLView, null);\n            var component;\n            var tElementNode;\n            try {\n                if (rendererFactory.begin)\n                    rendererFactory.begin();\n                var componentView = createRootComponentView(hostRNode, this.componentDef, rootLView, rendererFactory, renderer);\n                tElementNode = getTNode(0, rootLView);\n                // Transform the arrays of native nodes into a structure that can be consumed by the\n                // projection instruction. This is needed to support the reprojection of these nodes.\n                if (projectableNodes) {\n                    var index = 0;\n                    var tView = rootLView[TVIEW];\n                    var projection$$1 = tElementNode.projection = [];\n                    for (var i = 0; i < projectableNodes.length; i++) {\n                        var nodeList = projectableNodes[i];\n                        var firstTNode = null;\n                        var previousTNode = null;\n                        for (var j = 0; j < nodeList.length; j++) {\n                            if (tView.firstTemplatePass) {\n                                // For dynamically created components such as ComponentRef, we create a new TView for\n                                // each insert. This is not ideal since we should be sharing the TViews.\n                                // Also the logic here should be shared with `component.ts`'s `renderComponent`\n                                // method.\n                                tView.expandoStartIndex++;\n                                tView.blueprint.splice(++index + HEADER_OFFSET, 0, null);\n                                tView.data.splice(index + HEADER_OFFSET, 0, null);\n                                rootLView.splice(index + HEADER_OFFSET, 0, null);\n                            }\n                            var tNode = createNodeAtIndex(index, 3 /* Element */, nodeList[j], null, null);\n                            previousTNode ? (previousTNode.next = tNode) : (firstTNode = tNode);\n                            previousTNode = tNode;\n                        }\n                        projection$$1.push(firstTNode);\n                    }\n                }\n                // TODO: should LifecycleHooksFeature and other host features be generated by the compiler and\n                // executed here?\n                // Angular 5 reference: https://stackblitz.com/edit/lifecycle-hooks-vcref\n                component = createRootComponent(componentView, this.componentDef, rootLView, rootContext, [LifecycleHooksFeature]);\n                addToViewTree(rootLView, HEADER_OFFSET, componentView);\n                refreshDescendantViews(rootLView);\n            }\n            finally {\n                leaveView(oldLView);\n                if (rendererFactory.end)\n                    rendererFactory.end();\n            }\n            var componentRef = new ComponentRef$1(this.componentType, component, createElementRef(ElementRef, tElementNode, rootLView), rootLView, tElementNode);\n            if (isInternalRootView) {\n                // The host element of the internal root view is attached to the component's host view node\n                componentRef.hostView._tViewNode.child = tElementNode;\n            }\n            return componentRef;\n        };\n        return ComponentFactory$$1;\n    }(ComponentFactory));\n    var componentFactoryResolver = new ComponentFactoryResolver$1();\n    /**\n     * Represents an instance of a Component created via a {@link ComponentFactory}.\n     *\n     * `ComponentRef` provides access to the Component Instance as well other objects related to this\n     * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n     * method.\n     *\n     */\n    var ComponentRef$1 = /** @class */ (function (_super) {\n        __extends(ComponentRef$$1, _super);\n        function ComponentRef$$1(componentType, instance, location, _rootLView, _tNode) {\n            var _this = _super.call(this) || this;\n            _this.location = location;\n            _this._rootLView = _rootLView;\n            _this._tNode = _tNode;\n            _this.destroyCbs = [];\n            _this.instance = instance;\n            _this.hostView = _this.changeDetectorRef = new RootViewRef(_rootLView);\n            _this.hostView._tViewNode = createViewNode(-1, _rootLView);\n            _this.componentType = componentType;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef$$1.prototype, \"injector\", {\n            get: function () { return new NodeInjector(this._tNode, this._rootLView); },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n            this.hostView.destroy();\n        };\n        ComponentRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return ComponentRef$$1;\n    }(ComponentRef));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This file is used to control if the default rendering pipeline should be `ViewEngine` or `Ivy`.\n     *\n     * For more information on how to run and debug tests with either Ivy or View Engine (legacy),\n     * please see [BAZEL.md](./docs/BAZEL.md).\n     */\n    var _devMode = true;\n    var _runModeLocked = false;\n    /**\n     * Returns whether Angular is in development mode. After called once,\n     * the value is locked and won't change any more.\n     *\n     * By default, this is true, unless a user calls `enableProdMode` before calling this.\n     *\n     * @publicApi\n     */\n    function isDevMode() {\n        _runModeLocked = true;\n        return _devMode;\n    }\n    /**\n     * Disable Angular's development mode, which turns off assertions and other\n     * checks within the framework.\n     *\n     * One important assertion this disables verifies that a change detection pass\n     * does not result in additional changes to any bindings (also known as\n     * unidirectional data flow).\n     *\n     * @publicApi\n     */\n    function enableProdMode() {\n        if (_runModeLocked) {\n            throw new Error('Cannot enable prod mode after platform setup.');\n        }\n        _devMode = false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n     * that needs sanitizing.\n     * Depending upon browser support we must use one of three strategies for doing this.\n     * Support: Safari 10.x -> XHR strategy\n     * Support: Firefox -> DomParser strategy\n     * Default: InertDocument strategy\n     */\n    var InertBodyHelper = /** @class */ (function () {\n        function InertBodyHelper(defaultDoc) {\n            this.defaultDoc = defaultDoc;\n            this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n            this.inertBodyElement = this.inertDocument.body;\n            if (this.inertBodyElement == null) {\n                // usually there should be only one body element in the document, but IE doesn't have any, so\n                // we need to create one.\n                var inertHtml = this.inertDocument.createElement('html');\n                this.inertDocument.appendChild(inertHtml);\n                this.inertBodyElement = this.inertDocument.createElement('body');\n                inertHtml.appendChild(this.inertBodyElement);\n            }\n            this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n            if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n                // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n                // so use the XHR strategy.\n                this.getInertBodyElement = this.getInertBodyElement_XHR;\n                return;\n            }\n            this.inertBodyElement.innerHTML =\n                '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n            if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n                // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n                // so use the DOMParser strategy, if it is available.\n                // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n                // fall through to the default strategy below.\n                if (isDOMParserAvailable()) {\n                    this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                    return;\n                }\n            }\n            // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n            this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n        }\n        /**\n         * Use XHR to create and fill an inert body element (on Safari 10.1)\n         * See\n         * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n         */\n        InertBodyHelper.prototype.getInertBodyElement_XHR = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                html = encodeURI(html);\n            }\n            catch (_a) {\n                return null;\n            }\n            var xhr = new XMLHttpRequest();\n            xhr.responseType = 'document';\n            xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n            xhr.send(undefined);\n            var body = xhr.response.body;\n            body.removeChild(body.firstChild);\n            return body;\n        };\n        /**\n         * Use DOMParser to create and fill an inert body element (on Firefox)\n         * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n         *\n         */\n        InertBodyHelper.prototype.getInertBodyElement_DOMParser = function (html) {\n            // We add these extra elements to ensure that the rest of the content is parsed as expected\n            // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n            // `<head>` tag.\n            html = '<body><remove></remove>' + html + '</body>';\n            try {\n                var body = new window\n                    .DOMParser()\n                    .parseFromString(html, 'text/html')\n                    .body;\n                body.removeChild(body.firstChild);\n                return body;\n            }\n            catch (_a) {\n                return null;\n            }\n        };\n        /**\n         * Use an HTML5 `template` element, if supported, or an inert body element created via\n         * `createHtmlDocument` to create and fill an inert DOM element.\n         * This is the default sane strategy to use if the browser does not require one of the specialised\n         * strategies above.\n         */\n        InertBodyHelper.prototype.getInertBodyElement_InertDocument = function (html) {\n            // Prefer using <template> element if supported.\n            var templateEl = this.inertDocument.createElement('template');\n            if ('content' in templateEl) {\n                templateEl.innerHTML = html;\n                return templateEl;\n            }\n            this.inertBodyElement.innerHTML = html;\n            // Support: IE 9-11 only\n            // strip custom-namespaced attributes on IE<=11\n            if (this.defaultDoc.documentMode) {\n                this.stripCustomNsAttrs(this.inertBodyElement);\n            }\n            return this.inertBodyElement;\n        };\n        /**\n         * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n         * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n         * 'ns1:xlink:foo').\n         *\n         * This is undesirable since we don't want to allow any of these custom attributes. This method\n         * strips them all.\n         */\n        InertBodyHelper.prototype.stripCustomNsAttrs = function (el) {\n            var elAttrs = el.attributes;\n            // loop backwards so that we can support removals.\n            for (var i = elAttrs.length - 1; 0 < i; i--) {\n                var attrib = elAttrs.item(i);\n                var attrName = attrib.name;\n                if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                    el.removeAttribute(attrName);\n                }\n            }\n            var childNode = el.firstChild;\n            while (childNode) {\n                if (childNode.nodeType === Node.ELEMENT_NODE)\n                    this.stripCustomNsAttrs(childNode);\n                childNode = childNode.nextSibling;\n            }\n        };\n        return InertBodyHelper;\n    }());\n    /**\n     * We need to determine whether the DOMParser exists in the global context.\n     * The try-catch is because, on some browsers, trying to access this property\n     * on window can actually throw an error.\n     *\n     * @suppress {uselessCode}\n     */\n    function isDOMParserAvailable() {\n        try {\n            return !!window.DOMParser;\n        }\n        catch (_a) {\n            return false;\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A pattern that recognizes a commonly useful subset of URLs that are safe.\n     *\n     * This regular expression matches a subset of URLs that will not cause script\n     * execution if used in URL context within a HTML document. Specifically, this\n     * regular expression matches if (comment from here on and regex copied from\n     * Soy's EscapingConventions):\n     * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n     * (2) or no protocol.  A protocol must be followed by a colon. The below\n     *     allows that by allowing colons only after one of the characters [/?#].\n     *     A colon after a hash (#) must be in the fragment.\n     *     Otherwise, a colon after a (?) must be in a query.\n     *     Otherwise, a colon after a single solidus (/) must be in a path.\n     *     Otherwise, a colon after a double solidus (//) must be in the authority\n     *     (before port).\n     *\n     * The pattern disallows &, used in HTML entity declarations before\n     * one of the characters in [/?#]. This disallows HTML entities used in the\n     * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n     * It also disallows HTML entities in the first path part of a relative path,\n     * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n     * that. More importantly, it disallows masking of a colon,\n     * e.g. \"javascript&#58;...\".\n     *\n     * This regular expression was taken from the Closure sanitization library.\n     */\n    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n    /** A pattern that matches safe data URLs. Only matches image, video and audio types. */\n    var DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n    function _sanitizeUrl(url) {\n        url = String(url);\n        if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n            return url;\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n        }\n        return 'unsafe:' + url;\n    }\n    function sanitizeSrcset(srcset) {\n        srcset = String(srcset);\n        return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function tagSet(tags) {\n        var e_1, _a;\n        var res = {};\n        try {\n            for (var _b = __values(tags.split(',')), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var t = _c.value;\n                res[t] = true;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return res;\n    }\n    function merge() {\n        var sets = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sets[_i] = arguments[_i];\n        }\n        var e_2, _a;\n        var res = {};\n        try {\n            for (var sets_1 = __values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n                var s = sets_1_1.value;\n                for (var v in s) {\n                    if (s.hasOwnProperty(v))\n                        res[v] = true;\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return res;\n    }\n    // Good source of info about elements and attributes\n    // http://dev.w3.org/html5/spec/Overview.html#semantics\n    // http://simon.html5.org/html-elements\n    // Safe Void Elements - HTML5\n    // http://dev.w3.org/html5/spec/Overview.html#void-elements\n    var VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n    // Elements that you can, intentionally, leave open (and which close themselves)\n    // http://dev.w3.org/html5/spec/Overview.html#optional-tags\n    var OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\n    var OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\n    var OPTIONAL_END_TAG_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n    // Safe Block Elements - HTML5\n    var BLOCK_ELEMENTS = merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n        'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n        'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n    // Inline Elements - HTML5\n    var INLINE_ELEMENTS = merge(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n        'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n        'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\n    var VALID_ELEMENTS = merge(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n    // Attributes that have href and hence need to be sanitized\n    var URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n    // Attributes that have special href set hence need to be sanitized\n    var SRCSET_ATTRS = tagSet('srcset');\n    var HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n        'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n        'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n        'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n        'valign,value,vspace,width');\n    // NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n    // issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n    // innerHTML is required, SVG attributes should be added here.\n    // NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n    // can be sanitized, but they increase security surface area without a legitimate use case, so they\n    // are left out here.\n    var VALID_ATTRS = merge(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n    /**\n     * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n     * attributes.\n     */\n    var SanitizingHtmlSerializer = /** @class */ (function () {\n        function SanitizingHtmlSerializer() {\n            // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n            // because characters were re-encoded.\n            this.sanitizedSomething = false;\n            this.buf = [];\n        }\n        SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n            // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n            // However this code never accesses properties off of `document` before deleting its contents\n            // again, so it shouldn't be vulnerable to DOM clobbering.\n            var current = el.firstChild;\n            var elementValid = true;\n            while (current) {\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    elementValid = this.startElement(current);\n                }\n                else if (current.nodeType === Node.TEXT_NODE) {\n                    this.chars(current.nodeValue);\n                }\n                else {\n                    // Strip non-element, non-text nodes.\n                    this.sanitizedSomething = true;\n                }\n                if (elementValid && current.firstChild) {\n                    current = current.firstChild;\n                    continue;\n                }\n                while (current) {\n                    // Leaving the element. Walk up and to the right, closing tags as we go.\n                    if (current.nodeType === Node.ELEMENT_NODE) {\n                        this.endElement(current);\n                    }\n                    var next = this.checkClobberedElement(current, current.nextSibling);\n                    if (next) {\n                        current = next;\n                        break;\n                    }\n                    current = this.checkClobberedElement(current, current.parentNode);\n                }\n            }\n            return this.buf.join('');\n        };\n        /**\n         * Outputs only valid Elements.\n         *\n         * Invalid elements are skipped.\n         *\n         * @param element element to sanitize\n         * Returns true if the element is valid.\n         */\n        SanitizingHtmlSerializer.prototype.startElement = function (element) {\n            var tagName = element.nodeName.toLowerCase();\n            if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.sanitizedSomething = true;\n                return false;\n            }\n            this.buf.push('<');\n            this.buf.push(tagName);\n            var elAttrs = element.attributes;\n            for (var i = 0; i < elAttrs.length; i++) {\n                var elAttr = elAttrs.item(i);\n                var attrName = elAttr.name;\n                var lower = attrName.toLowerCase();\n                if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                    this.sanitizedSomething = true;\n                    continue;\n                }\n                var value = elAttr.value;\n                // TODO(martinprobst): Special case image URIs for data:image/...\n                if (URI_ATTRS[lower])\n                    value = _sanitizeUrl(value);\n                if (SRCSET_ATTRS[lower])\n                    value = sanitizeSrcset(value);\n                this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n            }\n            this.buf.push('>');\n            return true;\n        };\n        SanitizingHtmlSerializer.prototype.endElement = function (current) {\n            var tagName = current.nodeName.toLowerCase();\n            if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n                this.buf.push('</');\n                this.buf.push(tagName);\n                this.buf.push('>');\n            }\n        };\n        SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n        SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n            if (nextNode &&\n                (node.compareDocumentPosition(nextNode) &\n                    Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n                throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n            }\n            return nextNode;\n        };\n        return SanitizingHtmlSerializer;\n    }());\n    // Regular Expressions for parsing tags and attributes\n    var SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n    // ! to ~ is the ASCII range.\n    var NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n    /**\n     * Escapes all potentially dangerous characters, so that the\n     * resulting string can be safely inserted into attribute or\n     * element text.\n     * @param value\n     */\n    function encodeEntities(value) {\n        return value.replace(/&/g, '&amp;')\n            .replace(SURROGATE_PAIR_REGEXP, function (match) {\n            var hi = match.charCodeAt(0);\n            var low = match.charCodeAt(1);\n            return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n        })\n            .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;');\n    }\n    var inertBodyHelper;\n    /**\n     * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n     * the DOM in a browser environment.\n     */\n    function _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n        var inertBodyElement = null;\n        try {\n            inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n            // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n            var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n            // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n            var mXSSAttempts = 5;\n            var parsedHtml = unsafeHtml;\n            do {\n                if (mXSSAttempts === 0) {\n                    throw new Error('Failed to sanitize html because the input is unstable');\n                }\n                mXSSAttempts--;\n                unsafeHtml = parsedHtml;\n                parsedHtml = inertBodyElement.innerHTML;\n                inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n            } while (unsafeHtml !== parsedHtml);\n            var sanitizer = new SanitizingHtmlSerializer();\n            var safeHtml = sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement) || inertBodyElement);\n            if (isDevMode() && sanitizer.sanitizedSomething) {\n                console.warn('WARNING: sanitizing HTML stripped some content, see http://g.co/ng/security#xss');\n            }\n            return safeHtml;\n        }\n        finally {\n            // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n            if (inertBodyElement) {\n                var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n                while (parent_1.firstChild) {\n                    parent_1.removeChild(parent_1.firstChild);\n                }\n            }\n        }\n    }\n    function getTemplateContent(el) {\n        return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n            el.content :\n            null;\n    }\n    function isTemplateElement(el) {\n        return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Marks that the next string is for element.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var ELEMENT_MARKER = {\n        marker: 'element'\n    };\n    /**\n     * Marks that the next string is for comment.\n     *\n     * See `I18nMutateOpCodes` documentation.\n     */\n    var COMMENT_MARKER = {\n        marker: 'comment'\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MARKER = \"\\uFFFD\";\n    var ICU_BLOCK_REGEX = /^\\s*(�\\d+:?\\d*�)\\s*,\\s*(select|plural)\\s*,/;\n    var SUBTEMPLATE_REGEXP = /�\\/?\\*(\\d+:\\d+)�/gi;\n    var PH_REGEXP = /�(\\/?[#*]\\d+):?\\d*�/gi;\n    var BINDING_REGEXP = /�(\\d+):?\\d*�/gi;\n    var ICU_REGEXP = /({\\s*�\\d+:?\\d*�\\s*,\\s*\\S{6}\\s*,[\\s\\S]*})/gi;\n    // i18nPostproocess regexps\n    var PP_PLACEHOLDERS = /\\[(�.+?�?)\\]/g;\n    var PP_ICU_VARS = /({\\s*)(VAR_(PLURAL|SELECT)(_\\d+)?)(\\s*,)/g;\n    var PP_ICUS = /�I18N_EXP_(ICU(_\\d+)?)�/g;\n    /**\n     * Breaks pattern into strings and top level {...} blocks.\n     * Can be used to break a message into text and ICU expressions, or to break an ICU expression into\n     * keys and cases.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern (sub)Pattern to be broken.\n     *\n     */\n    function extractParts(pattern) {\n        if (!pattern) {\n            return [];\n        }\n        var prevPos = 0;\n        var braceStack = [];\n        var results = [];\n        var braces = /[{}]/g;\n        // lastIndex doesn't get set to 0 so we have to.\n        braces.lastIndex = 0;\n        var match;\n        while (match = braces.exec(pattern)) {\n            var pos = match.index;\n            if (match[0] == '}') {\n                braceStack.pop();\n                if (braceStack.length == 0) {\n                    // End of the block.\n                    var block = pattern.substring(prevPos, pos);\n                    if (ICU_BLOCK_REGEX.test(block)) {\n                        results.push(parseICUBlock(block));\n                    }\n                    else if (block) { // Don't push empty strings\n                        results.push(block);\n                    }\n                    prevPos = pos + 1;\n                }\n            }\n            else {\n                if (braceStack.length == 0) {\n                    var substring_1 = pattern.substring(prevPos, pos);\n                    results.push(substring_1);\n                    prevPos = pos + 1;\n                }\n                braceStack.push('{');\n            }\n        }\n        var substring = pattern.substring(prevPos);\n        if (substring != '') {\n            results.push(substring);\n        }\n        return results;\n    }\n    /**\n     * Parses text containing an ICU expression and produces a JSON object for it.\n     * Original code from closure library, modified for Angular.\n     *\n     * @param pattern Text containing an ICU expression that needs to be parsed.\n     *\n     */\n    function parseICUBlock(pattern) {\n        var cases = [];\n        var values = [];\n        var icuType = 1 /* plural */;\n        var mainBinding = 0;\n        pattern = pattern.replace(ICU_BLOCK_REGEX, function (str, binding, type) {\n            if (type === 'select') {\n                icuType = 0 /* select */;\n            }\n            else {\n                icuType = 1 /* plural */;\n            }\n            mainBinding = parseInt(binding.substr(1), 10);\n            return '';\n        });\n        var parts = extractParts(pattern);\n        // Looking for (key block)+ sequence. One of the keys has to be \"other\".\n        for (var pos = 0; pos < parts.length;) {\n            var key = parts[pos++].trim();\n            if (icuType === 1 /* plural */) {\n                // Key can be \"=x\", we just want \"x\"\n                key = key.replace(/\\s*(?:=)?(\\w+)\\s*/, '$1');\n            }\n            if (key.length) {\n                cases.push(key);\n            }\n            var blocks = extractParts(parts[pos++]);\n            if (blocks.length) {\n                values.push(blocks);\n            }\n        }\n        assertGreaterThan(cases.indexOf('other'), -1, 'Missing key \"other\" in ICU statement.');\n        // TODO(ocombe): support ICU expressions in attributes, see #21615\n        return { type: icuType, mainBinding: mainBinding, cases: cases, values: values };\n    }\n    /**\n     * Removes everything inside the sub-templates of a message.\n     */\n    function removeInnerTemplateTranslation(message) {\n        var match;\n        var res = '';\n        var index = 0;\n        var inTemplate = false;\n        var tagMatched;\n        while ((match = SUBTEMPLATE_REGEXP.exec(message)) !== null) {\n            if (!inTemplate) {\n                res += message.substring(index, match.index + match[0].length);\n                tagMatched = match[1];\n                inTemplate = true;\n            }\n            else {\n                if (match[0] === MARKER + \"/*\" + tagMatched + MARKER) {\n                    index = match.index;\n                    inTemplate = false;\n                }\n            }\n        }\n        ngDevMode &&\n            assertEqual(inTemplate, false, \"Tag mismatch: unable to find the end of the sub-template in the translation \\\"\" + message + \"\\\"\");\n        res += message.substr(index);\n        return res;\n    }\n    /**\n     * Extracts a part of a message and removes the rest.\n     *\n     * This method is used for extracting a part of the message associated with a template. A translated\n     * message can span multiple templates.\n     *\n     * Example:\n     * ```\n     * <div i18n>Translate <span *ngIf>me</span>!</div>\n     * ```\n     *\n     * @param message The message to crop\n     * @param subTemplateIndex Index of the sub-template to extract. If undefined it returns the\n     * external template and removes all sub-templates.\n     */\n    function getTranslationForTemplate(message, subTemplateIndex) {\n        if (typeof subTemplateIndex !== 'number') {\n            // We want the root template message, ignore all sub-templates\n            return removeInnerTemplateTranslation(message);\n        }\n        else {\n            // We want a specific sub-template\n            var start = message.indexOf(\":\" + subTemplateIndex + MARKER) + 2 + subTemplateIndex.toString().length;\n            var end = message.search(new RegExp(MARKER + \"\\\\/\\\\*\\\\d+:\" + subTemplateIndex + MARKER));\n            return removeInnerTemplateTranslation(message.substring(start, end));\n        }\n    }\n    /**\n     * Generate the OpCodes to update the bindings of a string.\n     *\n     * @param str The string containing the bindings.\n     * @param destinationNode Index of the destination node which will receive the binding.\n     * @param attrName Name of the attribute, if the string belongs to an attribute.\n     * @param sanitizeFn Sanitization function used to sanitize the string after update, if necessary.\n     */\n    function generateBindingUpdateOpCodes(str, destinationNode, attrName, sanitizeFn) {\n        if (sanitizeFn === void 0) { sanitizeFn = null; }\n        var updateOpCodes = [null, null]; // Alloc space for mask and size\n        var textParts = str.split(BINDING_REGEXP);\n        var mask = 0;\n        for (var j = 0; j < textParts.length; j++) {\n            var textValue = textParts[j];\n            if (j & 1) {\n                // Odd indexes are bindings\n                var bindingIndex = parseInt(textValue, 10);\n                updateOpCodes.push(-1 - bindingIndex);\n                mask = mask | toMaskBit(bindingIndex);\n            }\n            else if (textValue !== '') {\n                // Even indexes are text\n                updateOpCodes.push(textValue);\n            }\n        }\n        updateOpCodes.push(destinationNode << 2 /* SHIFT_REF */ |\n            (attrName ? 1 /* Attr */ : 0 /* Text */));\n        if (attrName) {\n            updateOpCodes.push(attrName, sanitizeFn);\n        }\n        updateOpCodes[0] = mask;\n        updateOpCodes[1] = updateOpCodes.length - 2;\n        return updateOpCodes;\n    }\n    function getBindingMask(icuExpression, mask) {\n        if (mask === void 0) { mask = 0; }\n        mask = mask | toMaskBit(icuExpression.mainBinding);\n        var match;\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            var valueArr = icuExpression.values[i];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value === 'string') {\n                    while (match = BINDING_REGEXP.exec(value)) {\n                        mask = mask | toMaskBit(parseInt(match[1], 10));\n                    }\n                }\n                else {\n                    mask = getBindingMask(value, mask);\n                }\n            }\n        }\n        return mask;\n    }\n    var i18nIndexStack = [];\n    var i18nIndexStackPointer = -1;\n    /**\n     * Convert binding index to mask bit.\n     *\n     * Each index represents a single bit on the bit-mask. Because bit-mask only has 32 bits, we make\n     * the 32nd bit share all masks for all bindings higher than 32. Since it is extremely rare to have\n     * more than 32 bindings this will be hit very rarely. The downside of hitting this corner case is\n     * that we will execute binding code more often than necessary. (penalty of performance)\n     */\n    function toMaskBit(bindingIndex) {\n        return 1 << Math.min(bindingIndex, 31);\n    }\n    var parentIndexStack = [];\n    /**\n     * Marks a block of text as translatable.\n     *\n     * The instructions `i18nStart` and `i18nEnd` mark the translation block in the template.\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18nStart(index, message, subTemplateIndex) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nIndexStack[++i18nIndexStackPointer] = index;\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nStartFirstPass(tView, index, message, subTemplateIndex);\n        }\n    }\n    /**\n     * See `i18nStart` above.\n     */\n    function i18nStartFirstPass(tView, index, message, subTemplateIndex) {\n        var viewData = getLView();\n        var expandoStartIndex = tView.blueprint.length - HEADER_OFFSET;\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var parentTNode = getIsParent() ? getPreviousOrParentTNode() :\n            previousOrParentTNode && previousOrParentTNode.parent;\n        var parentIndex = parentTNode && parentTNode !== viewData[HOST_NODE] ?\n            parentTNode.index - HEADER_OFFSET :\n            index;\n        var parentIndexPointer = 0;\n        parentIndexStack[parentIndexPointer] = parentIndex;\n        var createOpCodes = [];\n        // If the previous node wasn't the direct parent then we have a translation without top level\n        // element and we need to keep a reference of the previous element if there is one\n        if (index > 0 && previousOrParentTNode !== parentTNode) {\n            // Create an OpCode to select the previous TNode\n            createOpCodes.push(previousOrParentTNode.index << 3 /* SHIFT_REF */ | 0 /* Select */);\n        }\n        var updateOpCodes = [];\n        var icuExpressions = [];\n        var templateTranslation = getTranslationForTemplate(message, subTemplateIndex);\n        var msgParts = templateTranslation.split(PH_REGEXP);\n        for (var i = 0; i < msgParts.length; i++) {\n            var value = msgParts[i];\n            if (i & 1) {\n                // Odd indexes are placeholders (elements and sub-templates)\n                if (value.charAt(0) === '/') {\n                    // It is a closing tag\n                    if (value.charAt(1) === '#') {\n                        var phIndex = parseInt(value.substr(2), 10);\n                        parentIndex = parentIndexStack[--parentIndexPointer];\n                        createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 5 /* ElementEnd */);\n                    }\n                }\n                else {\n                    var phIndex = parseInt(value.substr(1), 10);\n                    // The value represents a placeholder that we move to the designated index\n                    createOpCodes.push(phIndex << 3 /* SHIFT_REF */ | 0 /* Select */, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                    if (value.charAt(0) === '#') {\n                        parentIndexStack[++parentIndexPointer] = parentIndex = phIndex;\n                    }\n                }\n            }\n            else {\n                // Even indexes are text (including bindings & ICU expressions)\n                var parts = value.split(ICU_REGEXP);\n                for (var j = 0; j < parts.length; j++) {\n                    value = parts[j];\n                    if (j & 1) {\n                        // Odd indexes are ICU expressions\n                        // Create the comment node that will anchor the ICU expression\n                        allocExpando(viewData);\n                        var icuNodeIndex = tView.blueprint.length - 1 - HEADER_OFFSET;\n                        createOpCodes.push(COMMENT_MARKER, ngDevMode ? \"ICU \" + icuNodeIndex : '', parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        // Update codes for the ICU expression\n                        var icuExpression = parseICUBlock(value.substr(1, value.length - 2));\n                        var mask = getBindingMask(icuExpression);\n                        icuStart(icuExpressions, icuExpression, icuNodeIndex, icuNodeIndex);\n                        // Since this is recursive, the last TIcu that was pushed is the one we want\n                        var tIcuIndex = icuExpressions.length - 1;\n                        updateOpCodes.push(toMaskBit(icuExpression.mainBinding), // mask of the main binding\n                        3, // skip 3 opCodes if not changed\n                        -1 - icuExpression.mainBinding, icuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, tIcuIndex, mask, // mask of all the bindings of this ICU expression\n                        2, // skip 2 opCodes if not changed\n                        icuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, tIcuIndex);\n                    }\n                    else if (value !== '') {\n                        // Even indexes are text (including bindings)\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        // Create text nodes\n                        allocExpando(viewData);\n                        createOpCodes.push(\n                        // If there is a binding, the value will be set during update\n                        hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, tView.blueprint.length - 1 - HEADER_OFFSET), updateOpCodes);\n                        }\n                    }\n                }\n            }\n        }\n        // NOTE: local var needed to properly assert the type of `TI18n`.\n        var tI18n = {\n            vars: tView.blueprint.length - HEADER_OFFSET - expandoStartIndex,\n            expandoStartIndex: expandoStartIndex,\n            create: createOpCodes,\n            update: updateOpCodes,\n            icus: icuExpressions.length ? icuExpressions : null,\n        };\n        tView.data[index + HEADER_OFFSET] = tI18n;\n    }\n    function appendI18nNode(tNode, parentTNode, previousTNode) {\n        ngDevMode && ngDevMode.rendererMoveNode++;\n        var viewData = getLView();\n        if (!previousTNode) {\n            previousTNode = parentTNode;\n        }\n        // re-organize node tree to put this node in the correct position.\n        if (previousTNode === parentTNode && tNode !== parentTNode.child) {\n            tNode.next = parentTNode.child;\n            parentTNode.child = tNode;\n        }\n        else if (previousTNode !== parentTNode && tNode !== previousTNode.next) {\n            tNode.next = previousTNode.next;\n            previousTNode.next = tNode;\n        }\n        else {\n            tNode.next = null;\n        }\n        if (parentTNode !== viewData[HOST_NODE]) {\n            tNode.parent = parentTNode;\n        }\n        appendChild(getNativeByTNode(tNode, viewData), tNode, viewData);\n        var slotValue = viewData[tNode.index];\n        if (tNode.type !== 0 /* Container */ && isLContainer(slotValue)) {\n            // Nodes that inject ViewContainerRef also have a comment node that should be moved\n            appendChild(slotValue[NATIVE], tNode, viewData);\n        }\n        return tNode;\n    }\n    /**\n     * Handles message string post-processing for internationalization.\n     *\n     * Handles message string post-processing by transforming it from intermediate\n     * format (that might contain some markers that we need to replace) to the final\n     * form, consumable by i18nStart instruction. Post processing steps include:\n     *\n     * 1. Resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n     * 2. Replace all ICU vars (like \"VAR_PLURAL\")\n     * 3. Replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n     *    in case multiple ICUs have the same placeholder name\n     *\n     * @param message Raw translation string for post processing\n     * @param replacements Set of replacements that should be applied\n     *\n     * @returns Transformed string that can be consumed by i18nStart instruction\n     *\n     * @publicAPI\n     */\n    function i18nPostprocess(message, replacements) {\n        //\n        // Step 1: resolve all multi-value cases (like [�*1:1��#2:1�|�#4:1�|�5�])\n        //\n        var matches = {};\n        var result = message.replace(PP_PLACEHOLDERS, function (_match, content) {\n            if (!matches[content]) {\n                matches[content] = content.split('|');\n            }\n            if (!matches[content].length) {\n                throw new Error(\"i18n postprocess: unmatched placeholder - \" + content);\n            }\n            return matches[content].shift();\n        });\n        // verify that we injected all values\n        var hasUnmatchedValues = Object.keys(matches).some(function (key) { return !!matches[key].length; });\n        if (hasUnmatchedValues) {\n            throw new Error(\"i18n postprocess: unmatched values - \" + JSON.stringify(matches));\n        }\n        // return current result if no replacements specified\n        if (!Object.keys(replacements).length) {\n            return result;\n        }\n        //\n        // Step 2: replace all ICU vars (like \"VAR_PLURAL\")\n        //\n        result = result.replace(PP_ICU_VARS, function (match, start, key, _type, _idx, end) {\n            return replacements.hasOwnProperty(key) ? \"\" + start + replacements[key] + end : match;\n        });\n        //\n        // Step 3: replace all ICU references with corresponding values (like �ICU_EXP_ICU_1�)\n        // in case multiple ICUs have the same placeholder name\n        //\n        result = result.replace(PP_ICUS, function (match, key) {\n            if (replacements.hasOwnProperty(key)) {\n                var list = replacements[key];\n                if (!list.length) {\n                    throw new Error(\"i18n postprocess: unmatched ICU - \" + match + \" with key: \" + key);\n                }\n                return list.shift();\n            }\n            return match;\n        });\n        return result;\n    }\n    /**\n     * Translates a translation block marked by `i18nStart` and `i18nEnd`. It inserts the text/ICU nodes\n     * into the render tree, moves the placeholder nodes and removes the deleted nodes.\n     */\n    function i18nEnd() {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        i18nEndFirstPass(tView);\n    }\n    /**\n     * See `i18nEnd` above.\n     */\n    function i18nEndFirstPass(tView) {\n        var viewData = getLView();\n        ngDevMode && assertEqual(viewData[BINDING_INDEX], viewData[TVIEW].bindingStartIndex, 'i18nEnd should be called before any binding');\n        var rootIndex = i18nIndexStack[i18nIndexStackPointer--];\n        var tI18n = tView.data[rootIndex + HEADER_OFFSET];\n        ngDevMode && assertDefined(tI18n, \"You should call i18nStart before i18nEnd\");\n        // The last placeholder that was added before `i18nEnd`\n        var previousOrParentTNode = getPreviousOrParentTNode();\n        var visitedPlaceholders = readCreateOpCodes(rootIndex, tI18n.create, tI18n.expandoStartIndex, viewData);\n        // Remove deleted placeholders\n        // The last placeholder that was added before `i18nEnd` is `previousOrParentTNode`\n        for (var i = rootIndex + 1; i <= previousOrParentTNode.index - HEADER_OFFSET; i++) {\n            if (visitedPlaceholders.indexOf(i) === -1) {\n                removeNode(i, viewData);\n            }\n        }\n    }\n    function readCreateOpCodes(index, createOpCodes, expandoStartIndex, viewData) {\n        var renderer = getLView()[RENDERER];\n        var currentTNode = null;\n        var previousTNode = null;\n        var visitedPlaceholders = [];\n        for (var i = 0; i < createOpCodes.length; i++) {\n            var opCode = createOpCodes[i];\n            if (typeof opCode == 'string') {\n                var textRNode = createTextNode(opCode, renderer);\n                ngDevMode && ngDevMode.rendererCreateTextNode++;\n                previousTNode = currentTNode;\n                currentTNode =\n                    createNodeAtIndex(expandoStartIndex++, 3 /* Element */, textRNode, null, null);\n                setIsParent(false);\n            }\n            else if (typeof opCode == 'number') {\n                switch (opCode & 7 /* MASK_OPCODE */) {\n                    case 1 /* AppendChild */:\n                        var destinationNodeIndex = opCode >>> 17 /* SHIFT_PARENT */;\n                        var destinationTNode = void 0;\n                        if (destinationNodeIndex === index) {\n                            // If the destination node is `i18nStart`, we don't have a\n                            // top-level node and we should use the host node instead\n                            destinationTNode = viewData[HOST_NODE];\n                        }\n                        else {\n                            destinationTNode = getTNode(destinationNodeIndex, viewData);\n                        }\n                        ngDevMode &&\n                            assertDefined(currentTNode, \"You need to create or select a node before you can insert it into the DOM\");\n                        previousTNode = appendI18nNode(currentTNode, destinationTNode, previousTNode);\n                        destinationTNode.next = null;\n                        break;\n                    case 0 /* Select */:\n                        var nodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        visitedPlaceholders.push(nodeIndex);\n                        previousTNode = currentTNode;\n                        currentTNode = getTNode(nodeIndex, viewData);\n                        if (currentTNode) {\n                            setPreviousOrParentTNode(currentTNode);\n                            if (currentTNode.type === 3 /* Element */) {\n                                setIsParent(true);\n                            }\n                        }\n                        break;\n                    case 5 /* ElementEnd */:\n                        var elementIndex = opCode >>> 3 /* SHIFT_REF */;\n                        previousTNode = currentTNode = getTNode(elementIndex, viewData);\n                        setPreviousOrParentTNode(currentTNode);\n                        setIsParent(false);\n                        break;\n                    case 4 /* Attr */:\n                        var elementNodeIndex = opCode >>> 3 /* SHIFT_REF */;\n                        var attrName = createOpCodes[++i];\n                        var attrValue = createOpCodes[++i];\n                        elementAttribute(elementNodeIndex, attrName, attrValue);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n            else {\n                switch (opCode) {\n                    case COMMENT_MARKER:\n                        var commentValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof commentValue, 'string', \"Expected \\\"\" + commentValue + \"\\\" to be a comment node value\");\n                        var commentRNode = renderer.createComment(commentValue);\n                        ngDevMode && ngDevMode.rendererCreateComment++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 5 /* IcuContainer */, commentRNode, null, null);\n                        attachPatchData(commentRNode, viewData);\n                        currentTNode.activeCaseIndex = null;\n                        // We will add the case nodes later, during the update phase\n                        setIsParent(false);\n                        break;\n                    case ELEMENT_MARKER:\n                        var tagNameValue = createOpCodes[++i];\n                        ngDevMode && assertEqual(typeof tagNameValue, 'string', \"Expected \\\"\" + tagNameValue + \"\\\" to be an element node tag name\");\n                        var elementRNode = renderer.createElement(tagNameValue);\n                        ngDevMode && ngDevMode.rendererCreateElement++;\n                        previousTNode = currentTNode;\n                        currentTNode = createNodeAtIndex(expandoStartIndex++, 3 /* Element */, elementRNode, tagNameValue, null);\n                        break;\n                    default:\n                        throw new Error(\"Unable to determine the type of mutate operation for \\\"\" + opCode + \"\\\"\");\n                }\n            }\n        }\n        setIsParent(false);\n        return visitedPlaceholders;\n    }\n    function readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, viewData, bypassCheckBit) {\n        if (bypassCheckBit === void 0) { bypassCheckBit = false; }\n        var caseCreated = false;\n        for (var i = 0; i < updateOpCodes.length; i++) {\n            // bit code to check if we should apply the next update\n            var checkBit = updateOpCodes[i];\n            // Number of opCodes to skip until next set of update codes\n            var skipCodes = updateOpCodes[++i];\n            if (bypassCheckBit || (checkBit & changeMask)) {\n                // The value has been updated since last checked\n                var value = '';\n                for (var j = i + 1; j <= (i + skipCodes); j++) {\n                    var opCode = updateOpCodes[j];\n                    if (typeof opCode == 'string') {\n                        value += opCode;\n                    }\n                    else if (typeof opCode == 'number') {\n                        if (opCode < 0) {\n                            // It's a binding index whose value is negative\n                            value += stringify$1(viewData[bindingsStartIndex - opCode]);\n                        }\n                        else {\n                            var nodeIndex = opCode >>> 2 /* SHIFT_REF */;\n                            switch (opCode & 3 /* MASK_OPCODE */) {\n                                case 1 /* Attr */:\n                                    var attrName = updateOpCodes[++j];\n                                    var sanitizeFn = updateOpCodes[++j];\n                                    elementAttribute(nodeIndex, attrName, value, sanitizeFn);\n                                    break;\n                                case 0 /* Text */:\n                                    textBinding(nodeIndex, value);\n                                    break;\n                                case 2 /* IcuSwitch */:\n                                    var tIcuIndex = updateOpCodes[++j];\n                                    var tIcu = icus[tIcuIndex];\n                                    var icuTNode = getTNode(nodeIndex, viewData);\n                                    // If there is an active case, delete the old nodes\n                                    if (icuTNode.activeCaseIndex !== null) {\n                                        var removeCodes = tIcu.remove[icuTNode.activeCaseIndex];\n                                        for (var k = 0; k < removeCodes.length; k++) {\n                                            var removeOpCode = removeCodes[k];\n                                            switch (removeOpCode & 7 /* MASK_OPCODE */) {\n                                                case 3 /* Remove */:\n                                                    var nodeIndex_1 = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                    removeNode(nodeIndex_1, viewData);\n                                                    break;\n                                                case 6 /* RemoveNestedIcu */:\n                                                    var nestedIcuNodeIndex = removeCodes[k + 1] >>> 3 /* SHIFT_REF */;\n                                                    var nestedIcuTNode = getTNode(nestedIcuNodeIndex, viewData);\n                                                    var activeIndex = nestedIcuTNode.activeCaseIndex;\n                                                    if (activeIndex !== null) {\n                                                        var nestedIcuTIndex = removeOpCode >>> 3 /* SHIFT_REF */;\n                                                        var nestedTIcu = icus[nestedIcuTIndex];\n                                                        addAllToArray(nestedTIcu.remove[activeIndex], removeCodes);\n                                                    }\n                                                    break;\n                                            }\n                                        }\n                                    }\n                                    // Update the active caseIndex\n                                    var caseIndex = getCaseIndex(tIcu, value);\n                                    icuTNode.activeCaseIndex = caseIndex !== -1 ? caseIndex : null;\n                                    // Add the nodes for the new case\n                                    readCreateOpCodes(-1, tIcu.create[caseIndex], tIcu.expandoStartIndex, viewData);\n                                    caseCreated = true;\n                                    break;\n                                case 3 /* IcuUpdate */:\n                                    tIcuIndex = updateOpCodes[++j];\n                                    tIcu = icus[tIcuIndex];\n                                    icuTNode = getTNode(nodeIndex, viewData);\n                                    readUpdateOpCodes(tIcu.update[icuTNode.activeCaseIndex], icus, bindingsStartIndex, changeMask, viewData, caseCreated);\n                                    break;\n                            }\n                        }\n                    }\n                }\n            }\n            i += skipCodes;\n        }\n    }\n    function removeNode(index, viewData) {\n        var removedPhTNode = getTNode(index, viewData);\n        var removedPhRNode = getNativeByIndex(index, viewData);\n        removeChild(removedPhTNode, removedPhRNode || null, viewData);\n        removedPhTNode.detached = true;\n        ngDevMode && ngDevMode.rendererRemoveNode++;\n        var slotValue = load(index);\n        if (isLContainer(slotValue)) {\n            var lContainer = slotValue;\n            if (removedPhTNode.type !== 0 /* Container */) {\n                removeChild(removedPhTNode, lContainer[NATIVE] || null, viewData);\n            }\n            lContainer[RENDER_PARENT] = null;\n        }\n    }\n    /**\n     *\n     * Use this instruction to create a translation block that doesn't contain any placeholder.\n     * It calls both {@link i18nStart} and {@link i18nEnd} in one instruction.\n     *\n     * The translation `message` is the value which is locale specific. The translation string may\n     * contain placeholders which associate inner elements and sub-templates within the translation.\n     *\n     * The translation `message` placeholders are:\n     * - `�{index}(:{block})�`: *Binding Placeholder*: Marks a location where an expression will be\n     *   interpolated into. The placeholder `index` points to the expression binding index. An optional\n     *   `block` that matches the sub-template in which it was declared.\n     * - `�#{index}(:{block})�`/`�/#{index}(:{block})�`: *Element Placeholder*:  Marks the beginning\n     *   and end of DOM element that were embedded in the original translation block. The placeholder\n     *   `index` points to the element index in the template instructions set. An optional `block` that\n     *   matches the sub-template in which it was declared.\n     * - `�*{index}:{block}�`/`�/*{index}:{block}�`: *Sub-template Placeholder*: Sub-templates must be\n     *   split up and translated separately in each angular template function. The `index` points to the\n     *   `template` instruction index. A `block` that matches the sub-template in which it was declared.\n     *\n     * @param index A unique index of the translation in the static block.\n     * @param message The translation message.\n     * @param subTemplateIndex Optional sub-template index in the `message`.\n     */\n    function i18n(index, message, subTemplateIndex) {\n        i18nStart(index, message, subTemplateIndex);\n        i18nEnd();\n    }\n    /**\n     * Marks a list of attributes as translatable.\n     *\n     * @param index A unique index in the static block\n     * @param values\n     */\n    function i18nAttributes(index, values) {\n        var tView = getLView()[TVIEW];\n        ngDevMode && assertDefined(tView, \"tView should be defined\");\n        ngDevMode &&\n            assertEqual(tView.firstTemplatePass, true, \"You should only call i18nEnd on first template pass\");\n        if (tView.firstTemplatePass && tView.data[index + HEADER_OFFSET] === null) {\n            i18nAttributesFirstPass(tView, index, values);\n        }\n    }\n    /**\n     * See `i18nAttributes` above.\n     */\n    function i18nAttributesFirstPass(tView, index, values) {\n        var previousElement = getPreviousOrParentTNode();\n        var previousElementIndex = previousElement.index - HEADER_OFFSET;\n        var updateOpCodes = [];\n        for (var i = 0; i < values.length; i += 2) {\n            var attrName = values[i];\n            var message = values[i + 1];\n            var parts = message.split(ICU_REGEXP);\n            for (var j = 0; j < parts.length; j++) {\n                var value = parts[j];\n                if (j & 1) ;\n                else if (value !== '') {\n                    // Even indexes are text (including bindings)\n                    var hasBinding = !!value.match(BINDING_REGEXP);\n                    if (hasBinding) {\n                        addAllToArray(generateBindingUpdateOpCodes(value, previousElementIndex, attrName), updateOpCodes);\n                    }\n                    else {\n                        elementAttribute(previousElementIndex, attrName, value);\n                    }\n                }\n            }\n        }\n        tView.data[index + HEADER_OFFSET] = updateOpCodes;\n    }\n    var changeMask = 0;\n    var shiftsCounter = 0;\n    /**\n     * Stores the values of the bindings during each update cycle in order to determine if we need to\n     * update the translated nodes.\n     *\n     * @param expression The binding's new value or NO_CHANGE\n     */\n    function i18nExp(expression) {\n        if (expression !== NO_CHANGE) {\n            changeMask = changeMask | (1 << shiftsCounter);\n        }\n        shiftsCounter++;\n    }\n    /**\n     * Updates a translation block or an i18n attribute when the bindings have changed.\n     *\n     * @param index Index of either {@link i18nStart} (translation block) or {@link i18nAttributes}\n     * (i18n attribute) on which it should update the content.\n     */\n    function i18nApply(index) {\n        if (shiftsCounter) {\n            var lView = getLView();\n            var tView = lView[TVIEW];\n            ngDevMode && assertDefined(tView, \"tView should be defined\");\n            var tI18n = tView.data[index + HEADER_OFFSET];\n            var updateOpCodes = void 0;\n            var icus = null;\n            if (Array.isArray(tI18n)) {\n                updateOpCodes = tI18n;\n            }\n            else {\n                updateOpCodes = tI18n.update;\n                icus = tI18n.icus;\n            }\n            var bindingsStartIndex = lView[BINDING_INDEX] - shiftsCounter - 1;\n            readUpdateOpCodes(updateOpCodes, icus, bindingsStartIndex, changeMask, lView);\n            // Reset changeMask & maskBit to default for the next update cycle\n            changeMask = 0;\n            shiftsCounter = 0;\n        }\n    }\n    var Plural;\n    (function (Plural) {\n        Plural[Plural[\"Zero\"] = 0] = \"Zero\";\n        Plural[Plural[\"One\"] = 1] = \"One\";\n        Plural[Plural[\"Two\"] = 2] = \"Two\";\n        Plural[Plural[\"Few\"] = 3] = \"Few\";\n        Plural[Plural[\"Many\"] = 4] = \"Many\";\n        Plural[Plural[\"Other\"] = 5] = \"Other\";\n    })(Plural || (Plural = {}));\n    /**\n     * Returns the plural case based on the locale.\n     * This is a copy of the deprecated function that we used in Angular v4.\n     * // TODO(ocombe): remove this once we can the real getPluralCase function\n     *\n     * @deprecated from v5 the plural case function is in locale data files common/locales/*.ts\n     */\n    function getPluralCase(locale, nLike) {\n        if (typeof nLike === 'string') {\n            nLike = parseInt(nLike, 10);\n        }\n        var n = nLike;\n        var nDecimal = n.toString().replace(/^[^.]*\\.?/, '');\n        var i = Math.floor(Math.abs(n));\n        var v = nDecimal.length;\n        var f = parseInt(nDecimal, 10);\n        var t = parseInt(n.toString().replace(/^[^.]*\\.?|0+$/g, ''), 10) || 0;\n        var lang = locale.split('-')[0].toLowerCase();\n        switch (lang) {\n            case 'af':\n            case 'asa':\n            case 'az':\n            case 'bem':\n            case 'bez':\n            case 'bg':\n            case 'brx':\n            case 'ce':\n            case 'cgg':\n            case 'chr':\n            case 'ckb':\n            case 'ee':\n            case 'el':\n            case 'eo':\n            case 'es':\n            case 'eu':\n            case 'fo':\n            case 'fur':\n            case 'gsw':\n            case 'ha':\n            case 'haw':\n            case 'hu':\n            case 'jgo':\n            case 'jmc':\n            case 'ka':\n            case 'kk':\n            case 'kkj':\n            case 'kl':\n            case 'ks':\n            case 'ksb':\n            case 'ky':\n            case 'lb':\n            case 'lg':\n            case 'mas':\n            case 'mgo':\n            case 'ml':\n            case 'mn':\n            case 'nb':\n            case 'nd':\n            case 'ne':\n            case 'nn':\n            case 'nnh':\n            case 'nyn':\n            case 'om':\n            case 'or':\n            case 'os':\n            case 'ps':\n            case 'rm':\n            case 'rof':\n            case 'rwk':\n            case 'saq':\n            case 'seh':\n            case 'sn':\n            case 'so':\n            case 'sq':\n            case 'ta':\n            case 'te':\n            case 'teo':\n            case 'tk':\n            case 'tr':\n            case 'ug':\n            case 'uz':\n            case 'vo':\n            case 'vun':\n            case 'wae':\n            case 'xog':\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ak':\n            case 'ln':\n            case 'mg':\n            case 'pa':\n            case 'ti':\n                if (n === Math.floor(n) && n >= 0 && n <= 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'am':\n            case 'as':\n            case 'bn':\n            case 'fa':\n            case 'gu':\n            case 'hi':\n            case 'kn':\n            case 'mr':\n            case 'zu':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'ar':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 3 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 99)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'ast':\n            case 'ca':\n            case 'de':\n            case 'en':\n            case 'et':\n            case 'fi':\n            case 'fy':\n            case 'gl':\n            case 'it':\n            case 'nl':\n            case 'sv':\n            case 'sw':\n            case 'ur':\n            case 'yi':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                return Plural.Other;\n            case 'be':\n                if (n % 10 === 1 && !(n % 100 === 11))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 4 &&\n                    !(n % 100 >= 12 && n % 100 <= 14))\n                    return Plural.Few;\n                if (n % 10 === 0 || n % 10 === Math.floor(n % 10) && n % 10 >= 5 && n % 10 <= 9 ||\n                    n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'br':\n                if (n % 10 === 1 && !(n % 100 === 11 || n % 100 === 71 || n % 100 === 91))\n                    return Plural.One;\n                if (n % 10 === 2 && !(n % 100 === 12 || n % 100 === 72 || n % 100 === 92))\n                    return Plural.Two;\n                if (n % 10 === Math.floor(n % 10) && (n % 10 >= 3 && n % 10 <= 4 || n % 10 === 9) &&\n                    !(n % 100 >= 10 && n % 100 <= 19 || n % 100 >= 70 && n % 100 <= 79 ||\n                        n % 100 >= 90 && n % 100 <= 99))\n                    return Plural.Few;\n                if (!(n === 0) && n % 1e6 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'bs':\n            case 'hr':\n            case 'sr':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11) || f % 10 === 1 && !(f % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14) ||\n                    f % 10 === Math.floor(f % 10) && f % 10 >= 2 && f % 10 <= 4 &&\n                        !(f % 100 >= 12 && f % 100 <= 14))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'cs':\n            case 'sk':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === Math.floor(i) && i >= 2 && i <= 4 && v === 0)\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'cy':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === 3)\n                    return Plural.Few;\n                if (n === 6)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'da':\n                if (n === 1 || !(t === 0) && (i === 0 || i === 1))\n                    return Plural.One;\n                return Plural.Other;\n            case 'dsb':\n            case 'hsb':\n                if (v === 0 && i % 100 === 1 || f % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2 || f % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 ||\n                    f % 100 === Math.floor(f % 100) && f % 100 >= 3 && f % 100 <= 4)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ff':\n            case 'fr':\n            case 'hy':\n            case 'kab':\n                if (i === 0 || i === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'fil':\n                if (v === 0 && (i === 1 || i === 2 || i === 3) ||\n                    v === 0 && !(i % 10 === 4 || i % 10 === 6 || i % 10 === 9) ||\n                    !(v === 0) && !(f % 10 === 4 || f % 10 === 6 || f % 10 === 9))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ga':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                if (n === Math.floor(n) && n >= 3 && n <= 6)\n                    return Plural.Few;\n                if (n === Math.floor(n) && n >= 7 && n <= 10)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'gd':\n                if (n === 1 || n === 11)\n                    return Plural.One;\n                if (n === 2 || n === 12)\n                    return Plural.Two;\n                if (n === Math.floor(n) && (n >= 3 && n <= 10 || n >= 13 && n <= 19))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'gv':\n                if (v === 0 && i % 10 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 10 === 2)\n                    return Plural.Two;\n                if (v === 0 &&\n                    (i % 100 === 0 || i % 100 === 20 || i % 100 === 40 || i % 100 === 60 || i % 100 === 80))\n                    return Plural.Few;\n                if (!(v === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'he':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (i === 2 && v === 0)\n                    return Plural.Two;\n                if (v === 0 && !(n >= 0 && n <= 10) && n % 10 === 0)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'is':\n                if (t === 0 && i % 10 === 1 && !(i % 100 === 11) || !(t === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ksh':\n                if (n === 0)\n                    return Plural.Zero;\n                if (n === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'kw':\n            case 'naq':\n            case 'se':\n            case 'smn':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 2)\n                    return Plural.Two;\n                return Plural.Other;\n            case 'lag':\n                if (n === 0)\n                    return Plural.Zero;\n                if ((i === 0 || i === 1) && !(n === 0))\n                    return Plural.One;\n                return Plural.Other;\n            case 'lt':\n                if (n % 10 === 1 && !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.One;\n                if (n % 10 === Math.floor(n % 10) && n % 10 >= 2 && n % 10 <= 9 &&\n                    !(n % 100 >= 11 && n % 100 <= 19))\n                    return Plural.Few;\n                if (!(f === 0))\n                    return Plural.Many;\n                return Plural.Other;\n            case 'lv':\n            case 'prg':\n                if (n % 10 === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19 ||\n                    v === 2 && f % 100 === Math.floor(f % 100) && f % 100 >= 11 && f % 100 <= 19)\n                    return Plural.Zero;\n                if (n % 10 === 1 && !(n % 100 === 11) || v === 2 && f % 10 === 1 && !(f % 100 === 11) ||\n                    !(v === 2) && f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mk':\n                if (v === 0 && i % 10 === 1 || f % 10 === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'mt':\n                if (n === 1)\n                    return Plural.One;\n                if (n === 0 || n % 100 === Math.floor(n % 100) && n % 100 >= 2 && n % 100 <= 10)\n                    return Plural.Few;\n                if (n % 100 === Math.floor(n % 100) && n % 100 >= 11 && n % 100 <= 19)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pl':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && !(i === 1) && i % 10 === Math.floor(i % 10) && i % 10 >= 0 && i % 10 <= 1 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 12 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'pt':\n                if (n === Math.floor(n) && n >= 0 && n <= 2 && !(n === 2))\n                    return Plural.One;\n                return Plural.Other;\n            case 'ro':\n                if (i === 1 && v === 0)\n                    return Plural.One;\n                if (!(v === 0) || n === 0 ||\n                    !(n === 1) && n % 100 === Math.floor(n % 100) && n % 100 >= 1 && n % 100 <= 19)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'ru':\n            case 'uk':\n                if (v === 0 && i % 10 === 1 && !(i % 100 === 11))\n                    return Plural.One;\n                if (v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 2 && i % 10 <= 4 &&\n                    !(i % 100 >= 12 && i % 100 <= 14))\n                    return Plural.Few;\n                if (v === 0 && i % 10 === 0 ||\n                    v === 0 && i % 10 === Math.floor(i % 10) && i % 10 >= 5 && i % 10 <= 9 ||\n                    v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 11 && i % 100 <= 14)\n                    return Plural.Many;\n                return Plural.Other;\n            case 'shi':\n                if (i === 0 || n === 1)\n                    return Plural.One;\n                if (n === Math.floor(n) && n >= 2 && n <= 10)\n                    return Plural.Few;\n                return Plural.Other;\n            case 'si':\n                if (n === 0 || n === 1 || i === 0 && f === 1)\n                    return Plural.One;\n                return Plural.Other;\n            case 'sl':\n                if (v === 0 && i % 100 === 1)\n                    return Plural.One;\n                if (v === 0 && i % 100 === 2)\n                    return Plural.Two;\n                if (v === 0 && i % 100 === Math.floor(i % 100) && i % 100 >= 3 && i % 100 <= 4 || !(v === 0))\n                    return Plural.Few;\n                return Plural.Other;\n            case 'tzm':\n                if (n === Math.floor(n) && n >= 0 && n <= 1 || n === Math.floor(n) && n >= 11 && n <= 99)\n                    return Plural.One;\n                return Plural.Other;\n            // When there is no specification, the default is always \"other\"\n            // Spec: http://cldr.unicode.org/index/cldr-spec/plural-rules\n            // > other (required—general plural form — also used if the language only has a single form)\n            default:\n                return Plural.Other;\n        }\n    }\n    function getPluralCategory(value, locale) {\n        var plural = getPluralCase(locale, value);\n        switch (plural) {\n            case Plural.Zero:\n                return 'zero';\n            case Plural.One:\n                return 'one';\n            case Plural.Two:\n                return 'two';\n            case Plural.Few:\n                return 'few';\n            case Plural.Many:\n                return 'many';\n            default:\n                return 'other';\n        }\n    }\n    /**\n     * Returns the index of the current case of an ICU expression depending on the main binding value\n     *\n     * @param icuExpression\n     * @param bindingValue The value of the main binding used by this ICU expression\n     */\n    function getCaseIndex(icuExpression, bindingValue) {\n        var index = icuExpression.cases.indexOf(bindingValue);\n        if (index === -1) {\n            switch (icuExpression.type) {\n                case 1 /* plural */: {\n                    // TODO(ocombe): replace this hard-coded value by the real LOCALE_ID value\n                    var locale = 'en-US';\n                    var resolvedCase = getPluralCategory(bindingValue, locale);\n                    index = icuExpression.cases.indexOf(resolvedCase);\n                    if (index === -1 && resolvedCase !== 'other') {\n                        index = icuExpression.cases.indexOf('other');\n                    }\n                    break;\n                }\n                case 0 /* select */: {\n                    index = icuExpression.cases.indexOf('other');\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    /**\n     * Generate the OpCodes for ICU expressions.\n     *\n     * @param tIcus\n     * @param icuExpression\n     * @param startIndex\n     * @param expandoStartIndex\n     */\n    function icuStart(tIcus, icuExpression, startIndex, expandoStartIndex) {\n        var createCodes = [];\n        var removeCodes = [];\n        var updateCodes = [];\n        var vars = [];\n        var childIcus = [];\n        for (var i = 0; i < icuExpression.values.length; i++) {\n            // Each value is an array of strings & other ICU expressions\n            var valueArr = icuExpression.values[i];\n            var nestedIcus = [];\n            for (var j = 0; j < valueArr.length; j++) {\n                var value = valueArr[j];\n                if (typeof value !== 'string') {\n                    // It is an nested ICU expression\n                    var icuIndex = nestedIcus.push(value) - 1;\n                    // Replace nested ICU expression by a comment node\n                    valueArr[j] = \"<!--\\uFFFD\" + icuIndex + \"\\uFFFD-->\";\n                }\n            }\n            var icuCase = parseIcuCase(valueArr.join(''), startIndex, nestedIcus, tIcus, expandoStartIndex);\n            createCodes.push(icuCase.create);\n            removeCodes.push(icuCase.remove);\n            updateCodes.push(icuCase.update);\n            vars.push(icuCase.vars);\n            childIcus.push(icuCase.childIcus);\n        }\n        var tIcu = {\n            type: icuExpression.type,\n            vars: vars,\n            expandoStartIndex: expandoStartIndex + 1, childIcus: childIcus,\n            cases: icuExpression.cases,\n            create: createCodes,\n            remove: removeCodes,\n            update: updateCodes\n        };\n        tIcus.push(tIcu);\n        var lView = getLView();\n        var worstCaseSize = Math.max.apply(Math, __spread(vars));\n        for (var i = 0; i < worstCaseSize; i++) {\n            allocExpando(lView);\n        }\n    }\n    /**\n     * Transforms a string template into an HTML template and a list of instructions used to update\n     * attributes or nodes that contain bindings.\n     *\n     * @param unsafeHtml The string to parse\n     * @param parentIndex\n     * @param nestedIcus\n     * @param tIcus\n     * @param expandoStartIndex\n     */\n    function parseIcuCase(unsafeHtml, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        var inertBodyHelper = new InertBodyHelper(document);\n        var inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        if (!inertBodyElement) {\n            throw new Error('Unable to generate inert body element');\n        }\n        var wrapper = getTemplateContent(inertBodyElement) || inertBodyElement;\n        var opCodes = { vars: 0, childIcus: [], create: [], remove: [], update: [] };\n        parseNodes(wrapper.firstChild, opCodes, parentIndex, nestedIcus, tIcus, expandoStartIndex);\n        return opCodes;\n    }\n    var NESTED_ICU = /�(\\d+)�/;\n    /**\n     * Parses a node, its children and its siblings, and generates the mutate & update OpCodes.\n     *\n     * @param currentNode The first node to parse\n     * @param icuCase The data for the ICU expression case that contains those nodes\n     * @param parentIndex Index of the current node's parent\n     * @param nestedIcus Data for the nested ICU expressions that this case contains\n     * @param tIcus Data for all ICU expressions of the current message\n     * @param expandoStartIndex Expando start index for the current ICU expression\n     */\n    function parseNodes(currentNode, icuCase, parentIndex, nestedIcus, tIcus, expandoStartIndex) {\n        if (currentNode) {\n            var nestedIcusToCreate = [];\n            while (currentNode) {\n                var nextNode = currentNode.nextSibling;\n                var newIndex = expandoStartIndex + ++icuCase.vars;\n                switch (currentNode.nodeType) {\n                    case Node.ELEMENT_NODE:\n                        var element$$1 = currentNode;\n                        var tagName = element$$1.tagName.toLowerCase();\n                        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n                            // This isn't a valid element, we won't create an element for it\n                            icuCase.vars--;\n                        }\n                        else {\n                            icuCase.create.push(ELEMENT_MARKER, tagName, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var elAttrs = element$$1.attributes;\n                            for (var i = 0; i < elAttrs.length; i++) {\n                                var attr = elAttrs.item(i);\n                                var lowerAttrName = attr.name.toLowerCase();\n                                var hasBinding_1 = !!attr.value.match(BINDING_REGEXP);\n                                // we assume the input string is safe, unless it's using a binding\n                                if (hasBinding_1) {\n                                    if (VALID_ATTRS.hasOwnProperty(lowerAttrName)) {\n                                        if (URI_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, _sanitizeUrl), icuCase.update);\n                                        }\n                                        else if (SRCSET_ATTRS[lowerAttrName]) {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name, sanitizeSrcset), icuCase.update);\n                                        }\n                                        else {\n                                            addAllToArray(generateBindingUpdateOpCodes(attr.value, newIndex, attr.name), icuCase.update);\n                                        }\n                                    }\n                                    else {\n                                        ngDevMode &&\n                                            console.warn(\"WARNING: ignoring unsafe attribute value \" + lowerAttrName + \" on element \" + tagName + \" (see http://g.co/ng/security#xss)\");\n                                    }\n                                }\n                                else {\n                                    icuCase.create.push(newIndex << 3 /* SHIFT_REF */ | 4 /* Attr */, attr.name, attr.value);\n                                }\n                            }\n                            // Parse the children of this node (if any)\n                            parseNodes(currentNode.firstChild, icuCase, newIndex, nestedIcus, tIcus, expandoStartIndex);\n                            // Remove the parent node after the children\n                            icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        }\n                        break;\n                    case Node.TEXT_NODE:\n                        var value = currentNode.textContent || '';\n                        var hasBinding = value.match(BINDING_REGEXP);\n                        icuCase.create.push(hasBinding ? '' : value, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                        icuCase.remove.push(newIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n                        if (hasBinding) {\n                            addAllToArray(generateBindingUpdateOpCodes(value, newIndex), icuCase.update);\n                        }\n                        break;\n                    case Node.COMMENT_NODE:\n                        // Check if the comment node is a placeholder for a nested ICU\n                        var match = NESTED_ICU.exec(currentNode.textContent || '');\n                        if (match) {\n                            var nestedIcuIndex = parseInt(match[1], 10);\n                            var newLocal = ngDevMode ? \"nested ICU \" + nestedIcuIndex : '';\n                            // Create the comment node that will anchor the ICU expression\n                            icuCase.create.push(COMMENT_MARKER, newLocal, parentIndex << 17 /* SHIFT_PARENT */ | 1 /* AppendChild */);\n                            var nestedIcu = nestedIcus[nestedIcuIndex];\n                            nestedIcusToCreate.push([nestedIcu, newIndex]);\n                        }\n                        else {\n                            // We do not handle any other type of comment\n                            icuCase.vars--;\n                        }\n                        break;\n                    default:\n                        // We do not handle any other type of element\n                        icuCase.vars--;\n                }\n                currentNode = nextNode;\n            }\n            for (var i = 0; i < nestedIcusToCreate.length; i++) {\n                var nestedIcu = nestedIcusToCreate[i][0];\n                var nestedIcuNodeIndex = nestedIcusToCreate[i][1];\n                icuStart(tIcus, nestedIcu, nestedIcuNodeIndex, expandoStartIndex + icuCase.vars);\n                // Since this is recursive, the last TIcu that was pushed is the one we want\n                var nestTIcuIndex = tIcus.length - 1;\n                icuCase.vars += Math.max.apply(Math, __spread(tIcus[nestTIcuIndex].vars));\n                icuCase.childIcus.push(nestTIcuIndex);\n                var mask = getBindingMask(nestedIcu);\n                icuCase.update.push(toMaskBit(nestedIcu.mainBinding), // mask of the main binding\n                3, // skip 3 opCodes if not changed\n                -1 - nestedIcu.mainBinding, nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 2 /* IcuSwitch */, nestTIcuIndex, mask, // mask of all the bindings of this ICU expression\n                2, // skip 2 opCodes if not changed\n                nestedIcuNodeIndex << 2 /* SHIFT_REF */ | 3 /* IcuUpdate */, nestTIcuIndex);\n                icuCase.remove.push(nestTIcuIndex << 3 /* SHIFT_REF */ | 6 /* RemoveNestedIcu */, nestedIcuNodeIndex << 3 /* SHIFT_REF */ | 3 /* Remove */);\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var COMPONENT_FACTORY_RESOLVER = {\n        provide: ComponentFactoryResolver,\n        useClass: ComponentFactoryResolver$1,\n        deps: [NgModuleRef],\n    };\n    var NgModuleRef$1 = /** @class */ (function (_super) {\n        __extends(NgModuleRef$$1, _super);\n        function NgModuleRef$$1(ngModuleType, _parent) {\n            var _this = _super.call(this) || this;\n            _this._parent = _parent;\n            // tslint:disable-next-line:require-internal-with-underscore\n            _this._bootstrapComponents = [];\n            _this.injector = _this;\n            _this.destroyCbs = [];\n            var ngModuleDef = getNgModuleDef(ngModuleType);\n            ngDevMode && assertDefined(ngModuleDef, \"NgModule '\" + stringify(ngModuleType) + \"' is not a subtype of 'NgModuleType'.\");\n            _this._bootstrapComponents = ngModuleDef.bootstrap;\n            var additionalProviders = [\n                {\n                    provide: NgModuleRef,\n                    useValue: _this,\n                },\n                COMPONENT_FACTORY_RESOLVER\n            ];\n            _this._r3Injector = createInjector(ngModuleType, _parent, additionalProviders);\n            _this.instance = _this.get(ngModuleType);\n            return _this;\n        }\n        NgModuleRef$$1.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            if (token === Injector || token === NgModuleRef || token === INJECTOR$1) {\n                return this;\n            }\n            return this._r3Injector.get(token, notFoundValue, injectFlags);\n        };\n        Object.defineProperty(NgModuleRef$$1.prototype, \"componentFactoryResolver\", {\n            get: function () {\n                return this.get(ComponentFactoryResolver);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef$$1.prototype.destroy = function () {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.forEach(function (fn) { return fn(); });\n            this.destroyCbs = null;\n        };\n        NgModuleRef$$1.prototype.onDestroy = function (callback) {\n            ngDevMode && assertDefined(this.destroyCbs, 'NgModule already destroyed');\n            this.destroyCbs.push(callback);\n        };\n        return NgModuleRef$$1;\n    }(NgModuleRef));\n    var NgModuleFactory$1 = /** @class */ (function (_super) {\n        __extends(NgModuleFactory$$1, _super);\n        function NgModuleFactory$$1(moduleType) {\n            var _this = _super.call(this) || this;\n            _this.moduleType = moduleType;\n            return _this;\n        }\n        NgModuleFactory$$1.prototype.create = function (parentInjector) {\n            return new NgModuleRef$1(this.moduleType, parentInjector);\n        };\n        return NgModuleFactory$$1;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Adds decorator, constructor, and property metadata to a given type via static metadata fields\n     * on the type.\n     *\n     * These metadata fields can later be read with Angular's `ReflectionCapabilities` API.\n     *\n     * Calls to `setClassMetadata` can be marked as pure, resulting in the metadata assignments being\n     * tree-shaken away during production builds.\n     */\n    function setClassMetadata(type, decorators, ctorParameters, propDecorators) {\n        var _a;\n        var clazz = type;\n        if (decorators !== null) {\n            if (clazz.decorators !== undefined) {\n                (_a = clazz.decorators).push.apply(_a, __spread(decorators));\n            }\n            else {\n                clazz.decorators = decorators;\n            }\n        }\n        if (ctorParameters !== null) {\n            // Rather than merging, clobber the existing parameters. If other projects exist which use\n            // tsickle-style annotations and reflect over them in the same way, this could cause issues,\n            // but that is vanishingly unlikely.\n            clazz.ctorParameters = ctorParameters;\n        }\n        if (propDecorators !== null) {\n            // The property decorator objects are merged as it is possible different fields have different\n            // decorator types. Decorators on individual fields are not merged, as it's also incredibly\n            // unlikely that a field will be decorated both with an Angular decorator and a non-Angular\n            // decorator that's also been downleveled.\n            if (clazz.propDecorators !== undefined) {\n                clazz.propDecorators = __assign({}, clazz.propDecorators, propDecorators);\n            }\n            else {\n                clazz.propDecorators = propDecorators;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Bindings for pure functions are stored after regular bindings.\n     *\n     * |------consts------|---------vars---------|                 |----- hostVars (dir1) ------|\n     * ------------------------------------------------------------------------------------------\n     * | nodes/refs/pipes | bindings | fn slots  | injector | dir1 | host bindings | host slots |\n     * ------------------------------------------------------------------------------------------\n     *                    ^                      ^\n     *      TView.bindingStartIndex      TView.expandoStartIndex\n     *\n     * Pure function instructions are given an offset from the binding root. Adding the offset to the\n     * binding root gives the first index where the bindings are stored. In component views, the binding\n     * root is the bindingStartIndex. In host bindings, the binding root is the expandoStartIndex +\n     * any directive instances + any hostVars in directives evaluated before it.\n     *\n     * See VIEW_DATA.md for more information about host binding resolution.\n     */\n    /**\n     * If the value hasn't been saved, calls the pure function to store and return the\n     * value. If it has been saved, returns the saved value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns a value\n     * @param thisArg Optional calling context of pureFn\n     * @returns value\n     */\n    function pureFunction0(slotOffset, pureFn, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return isCreationMode() ?\n            updateBinding(lView, bindingIndex, thisArg ? pureFn.call(thisArg) : pureFn()) :\n            getBinding(lView, bindingIndex);\n    }\n    /**\n     * If the value of the provided exp has changed, calls the pure function to return\n     * an updated value. Or if the value has not changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn Function that returns an updated value\n     * @param exp Updated expression value\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction1(slotOffset, pureFn, exp, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var lView = getLView();\n        var bindingIndex = getBindingRoot() + slotOffset;\n        return bindingUpdated(lView, bindingIndex, exp) ?\n            updateBinding(lView, bindingIndex + 1, thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n            getBinding(lView, bindingIndex + 1);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction2(slotOffset, pureFn, exp1, exp2, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated2(lView, bindingIndex, exp1, exp2) ?\n            updateBinding(lView, bindingIndex + 2, thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n            getBinding(lView, bindingIndex + 2);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction3(slotOffset, pureFn, exp1, exp2, exp3, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated3(lView, bindingIndex, exp1, exp2, exp3) ?\n            updateBinding(lView, bindingIndex + 3, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n            getBinding(lView, bindingIndex + 3);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction4(slotOffset, pureFn, exp1, exp2, exp3, exp4, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        return bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4) ?\n            updateBinding(lView, bindingIndex + 4, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n            getBinding(lView, bindingIndex + 4);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction5(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated(lView, bindingIndex + 4, exp5) || different ?\n            updateBinding(lView, bindingIndex + 5, thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n                pureFn(exp1, exp2, exp3, exp4, exp5)) :\n            getBinding(lView, bindingIndex + 5);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction6(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated2(lView, bindingIndex + 4, exp5, exp6) || different ?\n            updateBinding(lView, bindingIndex + 6, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n            getBinding(lView, bindingIndex + 6);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction7(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated3(lView, bindingIndex + 4, exp5, exp6, exp7) || different ?\n            updateBinding(lView, bindingIndex + 7, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n            getBinding(lView, bindingIndex + 7);\n    }\n    /**\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn\n     * @param exp1\n     * @param exp2\n     * @param exp3\n     * @param exp4\n     * @param exp5\n     * @param exp6\n     * @param exp7\n     * @param exp8\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunction8(slotOffset, pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var lView = getLView();\n        var different = bindingUpdated4(lView, bindingIndex, exp1, exp2, exp3, exp4);\n        return bindingUpdated4(lView, bindingIndex + 4, exp5, exp6, exp7, exp8) || different ?\n            updateBinding(lView, bindingIndex + 8, thisArg ?\n                pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n                pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n            getBinding(lView, bindingIndex + 8);\n    }\n    /**\n     * pureFunction instruction that can support any number of bindings.\n     *\n     * If the value of any provided exp has changed, calls the pure function to return\n     * an updated value. Or if no values have changed, returns cached value.\n     *\n     * @param slotOffset the offset from binding root to the reserved slot\n     * @param pureFn A pure function that takes binding values and builds an object or array\n     * containing those values.\n     * @param exps An array of binding values\n     * @param thisArg Optional calling context of pureFn\n     * @returns Updated or cached value\n     */\n    function pureFunctionV(slotOffset, pureFn, exps, thisArg) {\n        // TODO(kara): use bindingRoot instead of bindingStartIndex when implementing host bindings\n        var bindingIndex = getBindingRoot() + slotOffset;\n        var different = false;\n        var lView = getLView();\n        for (var i = 0; i < exps.length; i++) {\n            bindingUpdated(lView, bindingIndex++, exps[i]) && (different = true);\n        }\n        return different ? updateBinding(lView, bindingIndex, pureFn.apply(thisArg, exps)) :\n            getBinding(lView, bindingIndex);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Create a pipe.\n     *\n     * @param index Pipe index where the pipe will be stored.\n     * @param pipeName The name of the pipe\n     * @returns T the instance of the pipe.\n     */\n    function pipe(index, pipeName) {\n        var tView = getLView()[TVIEW];\n        var pipeDef;\n        var adjustedIndex = index + HEADER_OFFSET;\n        if (tView.firstTemplatePass) {\n            pipeDef = getPipeDef$1(pipeName, tView.pipeRegistry);\n            tView.data[adjustedIndex] = pipeDef;\n            if (pipeDef.onDestroy) {\n                (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(adjustedIndex, pipeDef.onDestroy);\n            }\n        }\n        else {\n            pipeDef = tView.data[adjustedIndex];\n        }\n        var pipeInstance = pipeDef.factory(null);\n        store(index, pipeInstance);\n        return pipeInstance;\n    }\n    /**\n     * Searches the pipe registry for a pipe with the given name. If one is found,\n     * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n     *\n     * @param name Name of pipe to resolve\n     * @param registry Full list of available pipes\n     * @returns Matching PipeDef\n     */\n    function getPipeDef$1(name, registry) {\n        if (registry) {\n            for (var i = registry.length - 1; i >= 0; i--) {\n                var pipeDef = registry[i];\n                if (name === pipeDef.name) {\n                    return pipeDef;\n                }\n            }\n        }\n        throw new Error(\"The pipe '\" + name + \"' could not be found!\");\n    }\n    /**\n     * Invokes a pipe with 1 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind1(index, slotOffset, v1) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction1(slotOffset, pipeInstance.transform, v1, pipeInstance) :\n            pipeInstance.transform(v1));\n    }\n    /**\n     * Invokes a pipe with 2 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind2(index, slotOffset, v1, v2) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction2(slotOffset, pipeInstance.transform, v1, v2, pipeInstance) :\n            pipeInstance.transform(v1, v2));\n    }\n    /**\n     * Invokes a pipe with 3 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 4rd argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind3(index, slotOffset, v1, v2, v3) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunction3(slotOffset, pipeInstance.transform, v1, v2, v3, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3));\n    }\n    /**\n     * Invokes a pipe with 4 arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param v1 1st argument to {@link PipeTransform#transform}.\n     * @param v2 2nd argument to {@link PipeTransform#transform}.\n     * @param v3 3rd argument to {@link PipeTransform#transform}.\n     * @param v4 4th argument to {@link PipeTransform#transform}.\n     */\n    function pipeBind4(index, slotOffset, v1, v2, v3, v4) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ?\n            pureFunction4(slotOffset, pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n            pipeInstance.transform(v1, v2, v3, v4));\n    }\n    /**\n     * Invokes a pipe with variable number of arguments.\n     *\n     * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n     * the pipe only when an input to the pipe changes.\n     *\n     * @param index Pipe index where the pipe was stored on creation.\n     * @param slotOffset the offset in the reserved slot space\n     * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n     */\n    function pipeBindV(index, slotOffset, values) {\n        var pipeInstance = load(index);\n        return unwrapValue(isPure(index) ? pureFunctionV(slotOffset, pipeInstance.transform, values, pipeInstance) :\n            pipeInstance.transform.apply(pipeInstance, values));\n    }\n    function isPure(index) {\n        return getLView()[TVIEW].data[index + HEADER_OFFSET].pure;\n    }\n    /**\n     * Unwrap the output of a pipe transformation.\n     * In order to trick change detection into considering that the new value is always different from\n     * the old one, the old value is overwritten by NO_CHANGE.\n     *\n     * @param newValue the pipe transformation output.\n     */\n    function unwrapValue(newValue) {\n        if (WrappedValue.isWrapped(newValue)) {\n            newValue = WrappedValue.unwrap(newValue);\n            getLView()[getBindingRoot()] = NO_CHANGE;\n        }\n        return newValue;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Use in directives and components to emit custom events synchronously\n     * or asynchronously, and register handlers for those events by subscribing\n     * to an instance.\n     *\n     * @usageNotes\n     *\n     * In the following example, a component defines two output properties\n     * that create event emitters. When the title is clicked, the emitter\n     * emits an open or close event to toggle the current visibility state.\n     *\n     * ```\n     * @Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   @Output() open: EventEmitter<any> = new EventEmitter();\n     *   @Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * Access the event object with the `$event` argument passed to the output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * ### Notes\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     *\n     * @publicApi\n     */\n    var EventEmitter = /** @class */ (function (_super) {\n        __extends(EventEmitter, _super);\n        /**\n         * Creates an instance of this class that can\n         * deliver events synchronously or asynchronously.\n         *\n         * @param isAsync When true, deliver events asynchronously.\n         *\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            var _this = _super.call(this) || this;\n            _this.__isAsync = isAsync;\n            return _this;\n        }\n        /**\n         * Emits an event containing a given value.\n         * @param value The value to emit.\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * Registers handlers for events emitted by this instance.\n         * @param generatorOrNext When supplied, a custom handler for emitted events.\n         * @param error When supplied, a custom handler for an error notification\n         * from this emitter.\n         * @param complete When supplied, a custom handler for a completion\n         * notification from this emitter.\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var schedulerFn;\n            var errorFn = function (err) { return null; };\n            var completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n            if (generatorOrNext instanceof rxjs.Subscription) {\n                generatorOrNext.add(sink);\n            }\n            return sink;\n        };\n        return EventEmitter;\n    }(rxjs.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an embedded template that can be used to instantiate embedded views.\n     * To instantiate embedded views based on a template, use the `ViewContainerRef`\n     * method `createEmbeddedView()`.\n     *\n     * Access a `TemplateRef` instance by placing a directive on an `<ng-template>`\n     * element (or directive prefixed with `*`). The `TemplateRef` for the embedded view\n     * is injected into the constructor of the directive,\n     * using the `TemplateRef` token.\n     *\n     * You can also use a `Query` to find a `TemplateRef` associated with\n     * a component or a directive.\n     *\n     * @see `ViewContainerRef`\n     * @see [Navigate the Component Tree with DI](guide/dependency-injection-navtree)\n     *\n     * @publicApi\n     */\n    var TemplateRef = /** @class */ (function () {\n        function TemplateRef() {\n        }\n        /** @internal */\n        TemplateRef.__NG_ELEMENT_ID__ = function () { return SWITCH_TEMPLATE_REF_FACTORY(TemplateRef, ElementRef); };\n        return TemplateRef;\n    }());\n    var SWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = injectTemplateRef;\n    var SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_TEMPLATE_REF_FACTORY = SWITCH_TEMPLATE_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var LQueries_ = /** @class */ (function () {\n        function LQueries_(parent, shallow, deep) {\n            this.parent = parent;\n            this.shallow = shallow;\n            this.deep = deep;\n        }\n        LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n            if (descend) {\n                this.deep = createQuery(this.deep, queryList, predicate, read != null ? read : null);\n            }\n            else {\n                this.shallow = createQuery(this.shallow, queryList, predicate, read != null ? read : null);\n            }\n        };\n        LQueries_.prototype.clone = function () { return new LQueries_(this, null, this.deep); };\n        LQueries_.prototype.container = function () {\n            var shallowResults = copyQueriesToContainer(this.shallow);\n            var deepResults = copyQueriesToContainer(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.createView = function () {\n            var shallowResults = copyQueriesToView(this.shallow);\n            var deepResults = copyQueriesToView(this.deep);\n            return shallowResults || deepResults ? new LQueries_(this, shallowResults, deepResults) : null;\n        };\n        LQueries_.prototype.insertView = function (index) {\n            insertView$1(index, this.shallow);\n            insertView$1(index, this.deep);\n        };\n        LQueries_.prototype.addNode = function (tNode) {\n            add(this.deep, tNode);\n            if (isContentQueryHost(tNode)) {\n                add(this.shallow, tNode);\n                if (tNode.parent && isContentQueryHost(tNode.parent)) {\n                    // if node has a content query and parent also has a content query\n                    // both queries need to check this node for shallow matches\n                    add(this.parent.shallow, tNode);\n                }\n                return this.parent;\n            }\n            isRootNodeOfQuery(tNode) && add(this.shallow, tNode);\n            return this;\n        };\n        LQueries_.prototype.removeView = function () {\n            removeView$1(this.shallow);\n            removeView$1(this.deep);\n        };\n        return LQueries_;\n    }());\n    function isRootNodeOfQuery(tNode) {\n        return tNode.parent === null || isContentQueryHost(tNode.parent);\n    }\n    function copyQueriesToContainer(query) {\n        var result = null;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: containerValues,\n                containerValues: null\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function copyQueriesToView(query) {\n        var result = null;\n        while (query) {\n            var clonedQuery = {\n                next: result,\n                list: query.list,\n                predicate: query.predicate,\n                values: [],\n                containerValues: query.values\n            };\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result;\n    }\n    function insertView$1(index, query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            query.containerValues.splice(index, 0, query.values);\n            query = query.next;\n        }\n    }\n    function removeView$1(query) {\n        while (query) {\n            ngDevMode &&\n                assertDefined(query.containerValues, 'View queries need to have a pointer to container values.');\n            var containerValues = query.containerValues;\n            var viewValuesIdx = containerValues.indexOf(query.values);\n            var removed = containerValues.splice(viewValuesIdx, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    }\n    /**\n     * Iterates over local names for a given node and returns directive index\n     * (or -1 if a local name points to an element).\n     *\n     * @param tNode static data of a node to check\n     * @param selector selector to match\n     * @returns directive index, -1 or null if a selector didn't match any of the local names\n     */\n    function getIdxOfMatchingSelector(tNode, selector) {\n        var localNames = tNode.localNames;\n        if (localNames) {\n            for (var i = 0; i < localNames.length; i += 2) {\n                if (localNames[i] === selector) {\n                    return localNames[i + 1];\n                }\n            }\n        }\n        return null;\n    }\n    // TODO: \"read\" should be an AbstractType (FW-486)\n    function queryByReadToken(read, tNode, currentView) {\n        var factoryFn = read[NG_ELEMENT_ID];\n        if (typeof factoryFn === 'function') {\n            return factoryFn();\n        }\n        else {\n            var matchingIdx = locateDirectiveOrProvider(tNode, currentView, read, false, false);\n            if (matchingIdx !== null) {\n                return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n            }\n        }\n        return null;\n    }\n    function queryByTNodeType(tNode, currentView) {\n        if (tNode.type === 3 /* Element */ || tNode.type === 4 /* ElementContainer */) {\n            return createElementRef(ElementRef, tNode, currentView);\n        }\n        if (tNode.type === 0 /* Container */) {\n            return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n        }\n        return null;\n    }\n    function queryByTemplateRef(templateRefToken, tNode, currentView, read) {\n        var templateRefResult = templateRefToken[NG_ELEMENT_ID]();\n        if (read) {\n            return templateRefResult ? queryByReadToken(read, tNode, currentView) : null;\n        }\n        return templateRefResult;\n    }\n    function queryRead(tNode, currentView, read, matchingIdx) {\n        if (read) {\n            return queryByReadToken(read, tNode, currentView);\n        }\n        if (matchingIdx > -1) {\n            return getNodeInjectable(currentView[TVIEW].data, currentView, matchingIdx, tNode);\n        }\n        // if read token and / or strategy is not specified,\n        // detect it using appropriate tNode type\n        return queryByTNodeType(tNode, currentView);\n    }\n    function add(query, tNode) {\n        var currentView = getLView();\n        while (query) {\n            var predicate = query.predicate;\n            var type = predicate.type;\n            if (type) {\n                var result = null;\n                if (type === TemplateRef) {\n                    result = queryByTemplateRef(type, tNode, currentView, predicate.read);\n                }\n                else {\n                    var matchingIdx = locateDirectiveOrProvider(tNode, currentView, type, false, false);\n                    if (matchingIdx !== null) {\n                        result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                    }\n                }\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n            else {\n                var selector = predicate.selector;\n                for (var i = 0; i < selector.length; i++) {\n                    var matchingIdx = getIdxOfMatchingSelector(tNode, selector[i]);\n                    if (matchingIdx !== null) {\n                        var result = queryRead(tNode, currentView, predicate.read, matchingIdx);\n                        if (result !== null) {\n                            addMatch(query, result);\n                        }\n                    }\n                }\n            }\n            query = query.next;\n        }\n    }\n    function addMatch(query, matchingValue) {\n        query.values.push(matchingValue);\n        query.list.setDirty();\n    }\n    function createPredicate(predicate, read) {\n        var isArray = Array.isArray(predicate);\n        return {\n            type: isArray ? null : predicate,\n            selector: isArray ? predicate : null,\n            read: read\n        };\n    }\n    function createQuery(previous, queryList, predicate, read) {\n        return {\n            next: previous,\n            list: queryList,\n            predicate: createPredicate(predicate, read),\n            values: queryList._valuesTree,\n            containerValues: null\n        };\n    }\n    var QueryList_ = /** @class */ (function () {\n        function QueryList_() {\n            this.dirty = true;\n            this.changes = new EventEmitter();\n            this._values = [];\n            /** @internal */\n            this._valuesTree = [];\n        }\n        Object.defineProperty(QueryList_.prototype, \"length\", {\n            get: function () { return this._values.length; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"first\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[0] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(QueryList_.prototype, \"last\", {\n            get: function () {\n                var values = this._values;\n                return values.length ? values[values.length - 1] : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList_.prototype.map = function (fn) { return this._values.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList_.prototype.filter = function (fn) {\n            return this._values.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList_.prototype.find = function (fn) {\n            return this._values.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList_.prototype.reduce = function (fn, init) {\n            return this._values.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList_.prototype.forEach = function (fn) { this._values.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList_.prototype.some = function (fn) {\n            return this._values.some(fn);\n        };\n        QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n        QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n        QueryList_.prototype.toString = function () { return this._values.toString(); };\n        QueryList_.prototype.reset = function (res) {\n            this._values = flatten(res);\n            this.dirty = false;\n        };\n        QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        QueryList_.prototype.setDirty = function () { this.dirty = true; };\n        QueryList_.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList_;\n    }());\n    var QueryList = QueryList_;\n    /**\n     * Creates and returns a QueryList.\n     *\n     * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n     * this is is a content query and the QueryList will be saved later through directiveCreate.\n     * @param predicate The type for which the query will search\n     * @param descend Whether or not to descend into children\n     * @param read What to save in the query\n     * @returns QueryList<T>\n     */\n    function query(memoryIndex, predicate, descend, \n    // TODO: \"read\" should be an AbstractType (FW-486)\n    read) {\n        ngDevMode && assertPreviousIsParent(getIsParent());\n        var queryList = new QueryList();\n        var queries = getOrCreateCurrentQueries(LQueries_);\n        queries.track(queryList, predicate, descend, read);\n        storeCleanupWithContext(getLView(), queryList, queryList.destroy);\n        if (memoryIndex != null) {\n            store(memoryIndex, queryList);\n        }\n        return queryList;\n    }\n    /**\n     * Refreshes a query by combining matches from all active views and removing matches from deleted\n     * views.\n     * Returns true if a query got dirty during change detection, false otherwise.\n     */\n    function queryRefresh(queryList) {\n        var queryListImpl = queryList;\n        if (queryList.dirty) {\n            queryList.reset(queryListImpl._valuesTree);\n            queryList.notifyOnChanges();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Retrieves `TemplateRef` instance from `Injector` when a local reference is placed on the\n     * `<ng-template>` element.\n     */\n    function templateRefExtractor(tNode, currentView) {\n        return createTemplateRef(TemplateRef, ElementRef, tNode, currentView);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BRAND = '__SANITIZER_TRUSTED_BRAND__';\n    function allowSanitizationBypass(value, type) {\n        return (value instanceof String && value[BRAND] === type);\n    }\n    /**\n     * Mark `html` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedHtml `html` string which needs to be implicitly trusted.\n     * @returns a `html` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustHtml(trustedHtml) {\n        return bypassSanitizationTrustString(trustedHtml, \"Html\" /* Html */);\n    }\n    /**\n     * Mark `style` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link styleSanitizer} to be trusted implicitly.\n     *\n     * @param trustedStyle `style` string which needs to be implicitly trusted.\n     * @returns a `style` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustStyle(trustedStyle) {\n        return bypassSanitizationTrustString(trustedStyle, \"Style\" /* Style */);\n    }\n    /**\n     * Mark `script` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n     *\n     * @param trustedScript `script` string which needs to be implicitly trusted.\n     * @returns a `script` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustScript(trustedScript) {\n        return bypassSanitizationTrustString(trustedScript, \"Script\" /* Script */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link urlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustUrl(trustedUrl) {\n        return bypassSanitizationTrustString(trustedUrl, \"Url\" /* Url */);\n    }\n    /**\n     * Mark `url` string as trusted.\n     *\n     * This function wraps the trusted string in `String` and brands it in a way which makes it\n     * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n     *\n     * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n     * @returns a `url` `String` which has been branded to be implicitly trusted.\n     */\n    function bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n        return bypassSanitizationTrustString(trustedResourceUrl, \"ResourceUrl\" /* ResourceUrl */);\n    }\n    function bypassSanitizationTrustString(trustedString, mode) {\n        var trusted = new String(trustedString);\n        trusted[BRAND] = mode;\n        return trusted;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Regular expression for safe style values.\n     *\n     * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n     *\n     * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n     * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n     * of XSS.\n     *\n     * The function expression checks only for XSS safety, not for CSS validity.\n     *\n     * This regular expression was taken from the Closure sanitization library, and augmented for\n     * transformation values.\n     */\n    var VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\n    var TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\n    var COLOR_FNS = '(?:rgb|hsl)a?';\n    var GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\n    var CSS3_FNS = '(?:calc|attr)';\n    var FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\n    var SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n        (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n        (FN_ARGS + \")$\"), 'g');\n    /**\n     * Matches a `url(...)` value with an arbitrary argument as long as it does\n     * not contain parentheses.\n     *\n     * The URL value still needs to be sanitized separately.\n     *\n     * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n     * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n     * by observing whether scroll bars are displayed, or character ranges used by a font face\n     * definition.\n     *\n     * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n     * binding a URL value without further cooperation from the page will cause an information leak, and\n     * if so, it is just a leak, not a full blown XSS vulnerability.\n     *\n     * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n     * code is permissive and allows URLs that sanitize otherwise.\n     */\n    var URL_RE = /^url\\(([^)]+)\\)$/;\n    /**\n     * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n     * that neither escape (\\) nor any other character that could result in\n     * breaking out of a string parsing context are allowed;\n     * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n     *\n     * This code was taken from the Closure sanitization library.\n     */\n    function hasBalancedQuotes(value) {\n        var outsideSingle = true;\n        var outsideDouble = true;\n        for (var i = 0; i < value.length; i++) {\n            var c = value.charAt(i);\n            if (c === '\\'' && outsideDouble) {\n                outsideSingle = !outsideSingle;\n            }\n            else if (c === '\"' && outsideSingle) {\n                outsideDouble = !outsideDouble;\n            }\n        }\n        return outsideSingle && outsideDouble;\n    }\n    /**\n     * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n     * value) and returns a value that is safe to use in a browser environment.\n     */\n    function _sanitizeStyle(value) {\n        value = String(value).trim(); // Make sure it's actually a string.\n        if (!value)\n            return '';\n        // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n        // reasoning behind this.\n        var urlMatch = value.match(URL_RE);\n        if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n            value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n            return value; // Safe style values.\n        }\n        if (isDevMode()) {\n            console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n        }\n        return 'unsafe';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `html` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n     *\n     * @param unsafeHtml untrusted `html`, typically from the user.\n     * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n     * and urls have been removed.\n     */\n    function sanitizeHtml(unsafeHtml) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.HTML, unsafeHtml) || '';\n        }\n        if (allowSanitizationBypass(unsafeHtml, \"Html\" /* Html */)) {\n            return unsafeHtml.toString();\n        }\n        return _sanitizeHtml(document, stringify$1(unsafeHtml));\n    }\n    /**\n     * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n     * dangerous content.\n     *\n     * This method parses the `style` and locates potentially dangerous content (such as urls and\n     * javascript) and removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n     *\n     * @param unsafeStyle untrusted `style`, typically from the user.\n     * @returns `style` string which is safe to bind to the `style` properties, because all of the\n     * dangerous javascript and urls have been removed.\n     */\n    function sanitizeStyle(unsafeStyle) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.STYLE, unsafeStyle) || '';\n        }\n        if (allowSanitizationBypass(unsafeStyle, \"Style\" /* Style */)) {\n            return unsafeStyle.toString();\n        }\n        return _sanitizeStyle(stringify$1(unsafeStyle));\n    }\n    /**\n     * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n     * dangerous\n     * content.\n     *\n     * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n     * removes it.\n     *\n     * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n     *\n     * @param unsafeUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * all of the dangerous javascript has been removed.\n     */\n    function sanitizeUrl(unsafeUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.URL, unsafeUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeUrl, \"Url\" /* Url */)) {\n            return unsafeUrl.toString();\n        }\n        return _sanitizeUrl(stringify$1(unsafeUrl));\n    }\n    /**\n     * A `url` sanitizer which only lets trusted `url`s through.\n     *\n     * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n     *\n     * @param unsafeResourceUrl untrusted `url`, typically from the user.\n     * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n     * only trusted `url`s have been allowed to pass.\n     */\n    function sanitizeResourceUrl(unsafeResourceUrl) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.RESOURCE_URL, unsafeResourceUrl) || '';\n        }\n        if (allowSanitizationBypass(unsafeResourceUrl, \"ResourceUrl\" /* ResourceUrl */)) {\n            return unsafeResourceUrl.toString();\n        }\n        throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n    }\n    /**\n     * A `script` sanitizer which only lets trusted javascript through.\n     *\n     * This passes only `script`s marked trusted by calling {@link\n     * bypassSanitizationTrustScript}.\n     *\n     * @param unsafeScript untrusted `script`, typically from the user.\n     * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n     * because only trusted `scripts` have been allowed to pass.\n     */\n    function sanitizeScript(unsafeScript) {\n        var sanitizer = getSanitizer();\n        if (sanitizer) {\n            return sanitizer.sanitize(exports.SecurityContext.SCRIPT, unsafeScript) || '';\n        }\n        if (allowSanitizationBypass(unsafeScript, \"Script\" /* Script */)) {\n            return unsafeScript.toString();\n        }\n        throw new Error('unsafe value used in a script context');\n    }\n    /**\n     * The default style sanitizer will handle sanitization for style properties by\n     * sanitizing any CSS property that can include a `url` value (usually image-based properties)\n     */\n    var defaultStyleSanitizer = function (prop, value) {\n        if (value === undefined) {\n            return prop === 'background-image' || prop === 'background' || prop === 'border-image' ||\n                prop === 'filter' || prop === 'filter' || prop === 'list-style' ||\n                prop === 'list-style-image';\n        }\n        return sanitizeStyle(value);\n    };\n    function getSanitizer() {\n        var lView = getLView();\n        return lView && lView[SANITIZER];\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A mapping of the @angular/core API surface used in generated expressions to the actual symbols.\n     *\n     * This should be kept up to date with the public exports of @angular/core.\n     */\n    var angularCoreEnv = {\n        'ɵdefineBase': defineBase,\n        'ɵdefineComponent': defineComponent,\n        'ɵdefineDirective': defineDirective,\n        'defineInjectable': defineInjectable,\n        'defineInjector': defineInjector,\n        'ɵdefineNgModule': defineNgModule,\n        'ɵdefinePipe': definePipe,\n        'ɵdirectiveInject': directiveInject,\n        'ɵgetFactoryOf': getFactoryOf,\n        'ɵgetInheritedFactory': getInheritedFactory,\n        'inject': inject,\n        'ɵinjectAttribute': injectAttribute,\n        'ɵtemplateRefExtractor': templateRefExtractor,\n        'ɵNgOnChangesFeature': NgOnChangesFeature,\n        'ɵProvidersFeature': ProvidersFeature,\n        'ɵInheritDefinitionFeature': InheritDefinitionFeature,\n        'ɵelementAttribute': elementAttribute,\n        'ɵbind': bind,\n        'ɵcontainer': container,\n        'ɵnextContext': nextContext,\n        'ɵcontainerRefreshStart': containerRefreshStart,\n        'ɵcontainerRefreshEnd': containerRefreshEnd,\n        'ɵloadQueryList': loadQueryList,\n        'ɵnamespaceHTML': namespaceHTML,\n        'ɵnamespaceMathML': namespaceMathML,\n        'ɵnamespaceSVG': namespaceSVG,\n        'ɵenableBindings': enableBindings,\n        'ɵdisableBindings': disableBindings,\n        'ɵallocHostVars': allocHostVars,\n        'ɵelementStart': elementStart,\n        'ɵelementEnd': elementEnd,\n        'ɵelement': element,\n        'ɵelementContainerStart': elementContainerStart,\n        'ɵelementContainerEnd': elementContainerEnd,\n        'ɵpureFunction0': pureFunction0,\n        'ɵpureFunction1': pureFunction1,\n        'ɵpureFunction2': pureFunction2,\n        'ɵpureFunction3': pureFunction3,\n        'ɵpureFunction4': pureFunction4,\n        'ɵpureFunction5': pureFunction5,\n        'ɵpureFunction6': pureFunction6,\n        'ɵpureFunction7': pureFunction7,\n        'ɵpureFunction8': pureFunction8,\n        'ɵpureFunctionV': pureFunctionV,\n        'ɵgetCurrentView': getCurrentView,\n        'ɵrestoreView': restoreView,\n        'ɵinterpolation1': interpolation1,\n        'ɵinterpolation2': interpolation2,\n        'ɵinterpolation3': interpolation3,\n        'ɵinterpolation4': interpolation4,\n        'ɵinterpolation5': interpolation5,\n        'ɵinterpolation6': interpolation6,\n        'ɵinterpolation7': interpolation7,\n        'ɵinterpolation8': interpolation8,\n        'ɵinterpolationV': interpolationV,\n        'ɵelementClassProp': elementClassProp,\n        'ɵlistener': listener,\n        'ɵload': load,\n        'ɵprojection': projection,\n        'ɵelementProperty': elementProperty,\n        'ɵcomponentHostSyntheticProperty': componentHostSyntheticProperty,\n        'ɵpipeBind1': pipeBind1,\n        'ɵpipeBind2': pipeBind2,\n        'ɵpipeBind3': pipeBind3,\n        'ɵpipeBind4': pipeBind4,\n        'ɵpipeBindV': pipeBindV,\n        'ɵprojectionDef': projectionDef,\n        'ɵpipe': pipe,\n        'ɵquery': query,\n        'ɵqueryRefresh': queryRefresh,\n        'ɵregisterContentQuery': registerContentQuery,\n        'ɵreference': reference,\n        'ɵelementStyling': elementStyling,\n        'ɵelementHostAttrs': elementHostAttrs,\n        'ɵelementStylingMap': elementStylingMap,\n        'ɵelementStyleProp': elementStyleProp,\n        'ɵelementStylingApply': elementStylingApply,\n        'ɵtemplate': template,\n        'ɵtext': text,\n        'ɵtextBinding': textBinding,\n        'ɵembeddedViewStart': embeddedViewStart,\n        'ɵembeddedViewEnd': embeddedViewEnd,\n        'ɵi18n': i18n,\n        'ɵi18nAttributes': i18nAttributes,\n        'ɵi18nExp': i18nExp,\n        'ɵi18nStart': i18nStart,\n        'ɵi18nEnd': i18nEnd,\n        'ɵi18nApply': i18nApply,\n        'ɵi18nPostprocess': i18nPostprocess,\n        'ɵsanitizeHtml': sanitizeHtml,\n        'ɵsanitizeStyle': sanitizeStyle,\n        'ɵdefaultStyleSanitizer': defaultStyleSanitizer,\n        'ɵsanitizeResourceUrl': sanitizeResourceUrl,\n        'ɵsanitizeScript': sanitizeScript,\n        'ɵsanitizeUrl': sanitizeUrl\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Used to load ng module factories.\n     *\n     * @publicApi\n     */\n    var NgModuleFactoryLoader = /** @class */ (function () {\n        function NgModuleFactoryLoader() {\n        }\n        return NgModuleFactoryLoader;\n    }());\n    /**\n     * Map of module-id to the corresponding NgModule.\n     * - In pre Ivy we track NgModuleFactory,\n     * - In post Ivy we track the NgModuleType\n     */\n    var modules = new Map();\n    /**\n     * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n     * @publicApi\n     */\n    function registerModuleFactory(id, factory) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing && existing.moduleType);\n        modules.set(id, factory);\n    }\n    function assertNotExisting(id, type) {\n        if (type) {\n            throw new Error(\"Duplicate module registered for \" + id + \" - \" + stringify(type) + \" vs \" + stringify(type.name));\n        }\n    }\n    function registerNgModuleType(id, ngModuleType) {\n        var existing = modules.get(id);\n        assertNotExisting(id, existing);\n        modules.set(id, ngModuleType);\n    }\n    function getModuleFactory__PRE_R3__(id) {\n        var factory = modules.get(id);\n        if (!factory)\n            throw noModuleError(id);\n        return factory;\n    }\n    function getModuleFactory__POST_R3__(id) {\n        var type = modules.get(id);\n        if (!type)\n            throw noModuleError(id);\n        return new NgModuleFactory$1(type);\n    }\n    /**\n     * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n     * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n     * cannot be found.\n     * @publicApi\n     */\n    var getModuleFactory = getModuleFactory__PRE_R3__;\n    function noModuleError(id) {\n        return new Error(\"No module with ID \" + id + \" loaded\");\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @description\n     *\n     * Represents a type that a Component or other object is instances of.\n     *\n     * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n     * the `MyCustomComponent` constructor function.\n     *\n     * @publicApi\n     */\n    var Type = Function;\n    function isType(v) {\n        return typeof v === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Attention: These regex has to hold even if the code is minified!\n     */\n    var DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n    var INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{/;\n    var INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[^{]+{[\\s\\S]*constructor\\s*\\(/;\n    var ReflectionCapabilities = /** @class */ (function () {\n        function ReflectionCapabilities(reflect) {\n            this._reflect = reflect || _global['Reflect'];\n        }\n        ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n        ReflectionCapabilities.prototype.factory = function (t) { return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (t.bind.apply(t, __spread([void 0], args)))();\n        }; };\n        /** @internal */\n        ReflectionCapabilities.prototype._zipTypesAndAnnotations = function (paramTypes, paramAnnotations) {\n            var result;\n            if (typeof paramTypes === 'undefined') {\n                result = new Array(paramAnnotations.length);\n            }\n            else {\n                result = new Array(paramTypes.length);\n            }\n            for (var i = 0; i < result.length; i++) {\n                // TS outputs Object for parameters without types, while Traceur omits\n                // the annotations. For now we preserve the Traceur behavior to aid\n                // migration, but this can be revisited.\n                if (typeof paramTypes === 'undefined') {\n                    result[i] = [];\n                }\n                else if (paramTypes[i] != Object) {\n                    result[i] = [paramTypes[i]];\n                }\n                else {\n                    result[i] = [];\n                }\n                if (paramAnnotations && paramAnnotations[i] != null) {\n                    result[i] = result[i].concat(paramAnnotations[i]);\n                }\n            }\n            return result;\n        };\n        ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n            var typeStr = type.toString();\n            // If we have no decorators, we only have function.length as metadata.\n            // In that case, to detect whether a child class declared an own constructor or not,\n            // we need to look inside of that constructor to check whether it is\n            // just calling the parent.\n            // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n            // that sets 'design:paramtypes' to []\n            // if a class inherits from another class but has no ctor declared itself.\n            if (DELEGATE_CTOR.exec(typeStr) ||\n                (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n                return null;\n            }\n            // Prefer the direct API.\n            if (type.parameters && type.parameters !== parentCtor.parameters) {\n                return type.parameters;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            var tsickleCtorParams = type.ctorParameters;\n            if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n                // Newer tsickle uses a function closure\n                // Retain the non-function case for compatibility with older tsickle\n                var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n                var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n                var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                    return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n                });\n                return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n            }\n            // API for metadata created by invoking the decorators.\n            var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n            var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n                this._reflect.getOwnMetadata('design:paramtypes', type);\n            if (paramTypes || paramAnnotations) {\n                return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n            }\n            // If a class has no decorators, at least create metadata\n            // based on function.length.\n            // Note: We know that this is a real constructor as we checked\n            // the content of the constructor above.\n            return new Array(type.length).fill(undefined);\n        };\n        ReflectionCapabilities.prototype.parameters = function (type) {\n            // Note: only report metadata if we have at least one class decorator\n            // to stay in sync with the static reflector.\n            if (!isType(type)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(type);\n            var parameters = this._ownParameters(type, parentCtor);\n            if (!parameters && parentCtor !== Object) {\n                parameters = this.parameters(parentCtor);\n            }\n            return parameters || [];\n        };\n        ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n                var annotations = typeOrFunc.annotations;\n                if (typeof annotations === 'function' && annotations.annotations) {\n                    annotations = annotations.annotations;\n                }\n                return annotations;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n                return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n                return typeOrFunc[ANNOTATIONS];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return [];\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n            var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n            return parentAnnotations.concat(ownAnnotations);\n        };\n        ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n            // Prefer the direct API.\n            if (typeOrFunc.propMetadata &&\n                typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n                var propMetadata = typeOrFunc.propMetadata;\n                if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                    propMetadata = propMetadata.propMetadata;\n                }\n                return propMetadata;\n            }\n            // API of tsickle for lowering decorators to properties on the class.\n            if (typeOrFunc.propDecorators &&\n                typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n                var propDecorators_1 = typeOrFunc.propDecorators;\n                var propMetadata_1 = {};\n                Object.keys(propDecorators_1).forEach(function (prop) {\n                    propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n                });\n                return propMetadata_1;\n            }\n            // API for metadata created by invoking the decorators.\n            if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n                return typeOrFunc[PROP_METADATA];\n            }\n            return null;\n        };\n        ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n            if (!isType(typeOrFunc)) {\n                return {};\n            }\n            var parentCtor = getParentCtor(typeOrFunc);\n            var propMetadata = {};\n            if (parentCtor !== Object) {\n                var parentPropMetadata_1 = this.propMetadata(parentCtor);\n                Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                    propMetadata[propName] = parentPropMetadata_1[propName];\n                });\n            }\n            var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n            if (ownPropMetadata) {\n                Object.keys(ownPropMetadata).forEach(function (propName) {\n                    var decorators = [];\n                    if (propMetadata.hasOwnProperty(propName)) {\n                        decorators.push.apply(decorators, __spread(propMetadata[propName]));\n                    }\n                    decorators.push.apply(decorators, __spread(ownPropMetadata[propName]));\n                    propMetadata[propName] = decorators;\n                });\n            }\n            return propMetadata;\n        };\n        ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return type instanceof Type && lcProperty in type.prototype;\n        };\n        ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n        ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n        ReflectionCapabilities.prototype.setter = function (name) {\n            return new Function('o', 'v', 'return o.' + name + ' = v;');\n        };\n        ReflectionCapabilities.prototype.method = function (name) {\n            var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n            return new Function('o', 'args', functionBody);\n        };\n        // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n        ReflectionCapabilities.prototype.importUri = function (type) {\n            // StaticSymbol\n            if (typeof type === 'object' && type['filePath']) {\n                return type['filePath'];\n            }\n            // Runtime type\n            return \"./\" + stringify(type);\n        };\n        ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n        ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return runtime;\n        };\n        ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n        return ReflectionCapabilities;\n    }());\n    function convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n        if (!decoratorInvocations) {\n            return [];\n        }\n        return decoratorInvocations.map(function (decoratorInvocation) {\n            var decoratorType = decoratorInvocation.type;\n            var annotationCls = decoratorType.annotationCls;\n            var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n            return new (annotationCls.bind.apply(annotationCls, __spread([void 0], annotationArgs)))();\n        });\n    }\n    function getParentCtor(ctor) {\n        var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n        var parentCtor = parentProto ? parentProto.constructor : null;\n        // Note: We always use `Object` as the null value\n        // to simplify checking later on.\n        return parentCtor || Object;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _reflect = null;\n    function getReflect() {\n        return (_reflect = _reflect || new ReflectionCapabilities());\n    }\n    function reflectDependencies(type) {\n        return convertDependencies(getReflect().parameters(type));\n    }\n    function convertDependencies(deps) {\n        var compiler = getCompilerFacade();\n        return deps.map(function (dep) { return reflectDependency(compiler, dep); });\n    }\n    function reflectDependency(compiler, dep) {\n        var meta = {\n            token: null,\n            host: false,\n            optional: false,\n            resolved: compiler.R3ResolvedDependencyType.Token,\n            self: false,\n            skipSelf: false,\n        };\n        function setTokenAndResolvedType(token) {\n            meta.resolved = compiler.R3ResolvedDependencyType.Token;\n            meta.token = token;\n        }\n        if (Array.isArray(dep)) {\n            if (dep.length === 0) {\n                throw new Error('Dependency array must have arguments.');\n            }\n            for (var j = 0; j < dep.length; j++) {\n                var param = dep[j];\n                if (param === undefined) {\n                    // param may be undefined if type of dep is not set by ngtsc\n                    continue;\n                }\n                else if (param instanceof Optional || param.__proto__.ngMetadataName === 'Optional') {\n                    meta.optional = true;\n                }\n                else if (param instanceof SkipSelf || param.__proto__.ngMetadataName === 'SkipSelf') {\n                    meta.skipSelf = true;\n                }\n                else if (param instanceof Self || param.__proto__.ngMetadataName === 'Self') {\n                    meta.self = true;\n                }\n                else if (param instanceof Host || param.__proto__.ngMetadataName === 'Host') {\n                    meta.host = true;\n                }\n                else if (param instanceof Inject) {\n                    meta.token = param.token;\n                }\n                else if (param instanceof Attribute) {\n                    if (param.attributeName === undefined) {\n                        throw new Error(\"Attribute name must be defined.\");\n                    }\n                    meta.token = param.attributeName;\n                    meta.resolved = compiler.R3ResolvedDependencyType.Attribute;\n                }\n                else {\n                    setTokenAndResolvedType(param);\n                }\n            }\n        }\n        else {\n            setTokenAndResolvedType(dep);\n        }\n        return meta;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_ARRAY$2 = [];\n    var moduleQueue = [];\n    /**\n     * Enqueues moduleDef to be checked later to see if scope can be set on its\n     * component declarations.\n     */\n    function enqueueModuleForDelayedScoping(moduleType, ngModule) {\n        moduleQueue.push({ moduleType: moduleType, ngModule: ngModule });\n    }\n    var flushingModuleQueue = false;\n    /**\n     * Loops over queued module definitions, if a given module definition has all of its\n     * declarations resolved, it dequeues that module definition and sets the scope on\n     * its declarations.\n     */\n    function flushModuleScopingQueueAsMuchAsPossible() {\n        if (!flushingModuleQueue) {\n            flushingModuleQueue = true;\n            try {\n                for (var i = moduleQueue.length - 1; i >= 0; i--) {\n                    var _a = moduleQueue[i], moduleType = _a.moduleType, ngModule = _a.ngModule;\n                    if (ngModule.declarations && ngModule.declarations.every(isResolvedDeclaration)) {\n                        // dequeue\n                        moduleQueue.splice(i, 1);\n                        setScopeOnDeclaredComponents(moduleType, ngModule);\n                    }\n                }\n            }\n            finally {\n                flushingModuleQueue = false;\n            }\n        }\n    }\n    /**\n     * Returns truthy if a declaration has resolved. If the declaration happens to be\n     * an array of declarations, it will recurse to check each declaration in that array\n     * (which may also be arrays).\n     */\n    function isResolvedDeclaration(declaration) {\n        if (Array.isArray(declaration)) {\n            return declaration.every(isResolvedDeclaration);\n        }\n        return !!resolveForwardRef(declaration);\n    }\n    /**\n     * Compiles a module in JIT mode.\n     *\n     * This function automatically gets called when a class has a `@NgModule` decorator.\n     */\n    function compileNgModule(moduleType, ngModule) {\n        if (ngModule === void 0) { ngModule = {}; }\n        compileNgModuleDefs(moduleType, ngModule);\n        // Because we don't know if all declarations have resolved yet at the moment the\n        // NgModule decorator is executing, we're enqueueing the setting of module scope\n        // on its declarations to be run at a later time when all declarations for the module,\n        // including forward refs, have resolved.\n        enqueueModuleForDelayedScoping(moduleType, ngModule);\n    }\n    /**\n     * Compiles and adds the `ngModuleDef` and `ngInjectorDef` properties to the module class.\n     */\n    function compileNgModuleDefs(moduleType, ngModule) {\n        ngDevMode && assertDefined(moduleType, 'Required value moduleType');\n        ngDevMode && assertDefined(ngModule, 'Required value ngModule');\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var ngModuleDef = null;\n        Object.defineProperty(moduleType, NG_MODULE_DEF, {\n            configurable: true,\n            get: function () {\n                if (ngModuleDef === null) {\n                    ngModuleDef = getCompilerFacade().compileNgModule(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngModuleDef.js\", {\n                        type: moduleType,\n                        bootstrap: flatten$1(ngModule.bootstrap || EMPTY_ARRAY$2, resolveForwardRef),\n                        declarations: declarations.map(resolveForwardRef),\n                        imports: flatten$1(ngModule.imports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        exports: flatten$1(ngModule.exports || EMPTY_ARRAY$2, resolveForwardRef)\n                            .map(expandModuleWithProviders),\n                        emitInline: true,\n                    });\n                }\n                return ngModuleDef;\n            }\n        });\n        if (ngModule.id) {\n            registerNgModuleType(ngModule.id, moduleType);\n        }\n        var ngInjectorDef = null;\n        Object.defineProperty(moduleType, NG_INJECTOR_DEF, {\n            get: function () {\n                if (ngInjectorDef === null) {\n                    ngDevMode && verifySemanticsOfNgModuleDef(moduleType);\n                    var meta = {\n                        name: moduleType.name,\n                        type: moduleType,\n                        deps: reflectDependencies(moduleType),\n                        providers: ngModule.providers || EMPTY_ARRAY$2,\n                        imports: [\n                            (ngModule.imports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                            (ngModule.exports || EMPTY_ARRAY$2).map(resolveForwardRef),\n                        ],\n                    };\n                    ngInjectorDef = getCompilerFacade().compileInjector(angularCoreEnv, \"ng://\" + moduleType.name + \"/ngInjectorDef.js\", meta);\n                }\n                return ngInjectorDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function verifySemanticsOfNgModuleDef(moduleType) {\n        if (verifiedNgModule.get(moduleType))\n            return;\n        verifiedNgModule.set(moduleType, true);\n        moduleType = resolveForwardRef(moduleType);\n        var ngModuleDef = getNgModuleDef(moduleType, true);\n        var errors = [];\n        ngModuleDef.declarations.forEach(verifyDeclarationsHaveDefinitions);\n        var combinedDeclarations = __spread(ngModuleDef.declarations.map(resolveForwardRef), flatten$1(ngModuleDef.imports.map(computeCombinedExports), resolveForwardRef));\n        ngModuleDef.exports.forEach(verifyExportsAreDeclaredOrReExported);\n        ngModuleDef.declarations.forEach(verifyDeclarationIsUnique);\n        ngModuleDef.declarations.forEach(verifyComponentEntryComponentsIsPartOfNgModule);\n        var ngModule = getAnnotation(moduleType, 'NgModule');\n        if (ngModule) {\n            ngModule.imports &&\n                flatten$1(ngModule.imports, unwrapModuleWithProvidersImports)\n                    .forEach(verifySemanticsOfNgModuleDef);\n            ngModule.bootstrap && ngModule.bootstrap.forEach(verifyComponentIsPartOfNgModule);\n            ngModule.entryComponents && ngModule.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n        }\n        // Throw Error if any errors were detected.\n        if (errors.length) {\n            throw new Error(errors.join('\\n'));\n        }\n        ////////////////////////////////////////////////////////////////////////////////////////////////\n        function verifyDeclarationsHaveDefinitions(type) {\n            type = resolveForwardRef(type);\n            var def = getComponentDef(type) || getDirectiveDef(type) || getPipeDef(type);\n            if (!def) {\n                errors.push(\"Unexpected value '\" + stringify$1(type) + \"' declared by the module '\" + stringify$1(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\");\n            }\n        }\n        function verifyExportsAreDeclaredOrReExported(type) {\n            type = resolveForwardRef(type);\n            var kind = getComponentDef(type) && 'component' || getDirectiveDef(type) && 'directive' ||\n                getPipeDef(type) && 'pipe';\n            if (kind) {\n                // only checked if we are declared as Component, Directive, or Pipe\n                // Modules don't need to be declared or imported.\n                if (combinedDeclarations.lastIndexOf(type) === -1) {\n                    // We are exporting something which we don't explicitly declare or import.\n                    errors.push(\"Can't export \" + kind + \" \" + stringify$1(type) + \" from \" + stringify$1(moduleType) + \" as it was neither declared nor imported!\");\n                }\n            }\n        }\n        function verifyDeclarationIsUnique(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (existingModule && existingModule !== moduleType) {\n                var modules = [existingModule, moduleType].map(stringify$1).sort();\n                errors.push(\"Type \" + stringify$1(type) + \" is part of the declarations of 2 modules: \" + modules[0] + \" and \" + modules[1] + \"! \" +\n                    (\"Please consider moving \" + stringify$1(type) + \" to a higher module that imports \" + modules[0] + \" and \" + modules[1] + \". \") +\n                    (\"You can also create a new NgModule that exports and includes \" + stringify$1(type) + \" then import that NgModule in \" + modules[0] + \" and \" + modules[1] + \".\"));\n            }\n            else {\n                // Mark type as having owner.\n                ownerNgModule.set(type, moduleType);\n            }\n        }\n        function verifyComponentIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            var existingModule = ownerNgModule.get(type);\n            if (!existingModule) {\n                errors.push(\"Component \" + stringify$1(type) + \" is not part of any NgModule or the module has not been imported into your module.\");\n            }\n        }\n        function verifyComponentEntryComponentsIsPartOfNgModule(type) {\n            type = resolveForwardRef(type);\n            if (getComponentDef(type)) {\n                // We know we are component\n                var component = getAnnotation(type, 'Component');\n                if (component && component.entryComponents) {\n                    component.entryComponents.forEach(verifyComponentIsPartOfNgModule);\n                }\n            }\n        }\n    }\n    function unwrapModuleWithProvidersImports(typeOrWithProviders) {\n        typeOrWithProviders = resolveForwardRef(typeOrWithProviders);\n        return typeOrWithProviders.ngModule || typeOrWithProviders;\n    }\n    function getAnnotation(type, name) {\n        var annotation = null;\n        collect(type.__annotations__);\n        collect(type.decorators);\n        return annotation;\n        function collect(annotations) {\n            if (annotations) {\n                annotations.forEach(readAnnotation);\n            }\n        }\n        function readAnnotation(decorator) {\n            if (!annotation) {\n                var proto = Object.getPrototypeOf(decorator);\n                if (proto.ngMetadataName == name) {\n                    annotation = decorator;\n                }\n                else if (decorator.type) {\n                    var proto_1 = Object.getPrototypeOf(decorator.type);\n                    if (proto_1.ngMetadataName == name) {\n                        annotation = decorator.args[0];\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Keep track of compiled components. This is needed because in tests we often want to compile the\n     * same component with more than one NgModule. This would cause an error unless we reset which\n     * NgModule the component belongs to. We keep the list of compiled components here so that the\n     * TestBed can reset it later.\n     */\n    var ownerNgModule = new Map();\n    var verifiedNgModule = new Map();\n    function resetCompiledComponents() {\n        ownerNgModule = new Map();\n        verifiedNgModule = new Map();\n        moduleQueue.length = 0;\n    }\n    /**\n     * Computes the combined declarations of explicit declarations, as well as declarations inherited\n     * by\n     * traversing the exports of imported modules.\n     * @param type\n     */\n    function computeCombinedExports(type) {\n        type = resolveForwardRef(type);\n        var ngModuleDef = getNgModuleDef(type, true);\n        return __spread(flatten$1(ngModuleDef.exports.map(function (type) {\n            var ngModuleDef = getNgModuleDef(type);\n            if (ngModuleDef) {\n                verifySemanticsOfNgModuleDef(type);\n                return computeCombinedExports(type);\n            }\n            else {\n                return type;\n            }\n        })));\n    }\n    /**\n     * Some declared components may be compiled asynchronously, and thus may not have their\n     * ngComponentDef set yet. If this is the case, then a reference to the module is written into\n     * the `ngSelectorScope` property of the declared type.\n     */\n    function setScopeOnDeclaredComponents(moduleType, ngModule) {\n        var declarations = flatten$1(ngModule.declarations || EMPTY_ARRAY$2);\n        var transitiveScopes = transitiveScopesFor(moduleType);\n        declarations.forEach(function (declaration) {\n            if (declaration.hasOwnProperty(NG_COMPONENT_DEF)) {\n                // An `ngComponentDef` field exists - go ahead and patch the component directly.\n                var component = declaration;\n                var componentDef = getComponentDef(component);\n                patchComponentDefWithScope(componentDef, transitiveScopes);\n            }\n            else if (!declaration.hasOwnProperty(NG_DIRECTIVE_DEF) && !declaration.hasOwnProperty(NG_PIPE_DEF)) {\n                // Set `ngSelectorScope` for future reference when the component compilation finishes.\n                declaration.ngSelectorScope = moduleType;\n            }\n        });\n    }\n    /**\n     * Patch the definition of a component with directives and pipes from the compilation scope of\n     * a given module.\n     */\n    function patchComponentDefWithScope(componentDef, transitiveScopes) {\n        componentDef.directiveDefs = function () { return Array.from(transitiveScopes.compilation.directives)\n            .map(function (dir) { return getDirectiveDef(dir) || getComponentDef(dir); })\n            .filter(function (def) { return !!def; }); };\n        componentDef.pipeDefs = function () {\n            return Array.from(transitiveScopes.compilation.pipes).map(function (pipe) { return getPipeDef(pipe); });\n        };\n    }\n    /**\n     * Compute the pair of transitive scopes (compilation scope and exported scope) for a given module.\n     *\n     * This operation is memoized and the result is cached on the module's definition. It can be called\n     * on modules with components that have not fully compiled yet, but the result should not be used\n     * until they have.\n     */\n    function transitiveScopesFor(moduleType) {\n        if (!isNgModule(moduleType)) {\n            throw new Error(moduleType.name + \" does not have an ngModuleDef\");\n        }\n        var def = getNgModuleDef(moduleType);\n        if (def.transitiveCompileScopes !== null) {\n            return def.transitiveCompileScopes;\n        }\n        var scopes = {\n            compilation: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n            exported: {\n                directives: new Set(),\n                pipes: new Set(),\n            },\n        };\n        def.declarations.forEach(function (declared) {\n            var declaredWithDefs = declared;\n            if (getPipeDef(declaredWithDefs)) {\n                scopes.compilation.pipes.add(declared);\n            }\n            else {\n                // Either declared has an ngComponentDef or ngDirectiveDef, or it's a component which hasn't\n                // had its template compiled yet. In either case, it gets added to the compilation's\n                // directives.\n                scopes.compilation.directives.add(declared);\n            }\n        });\n        def.imports.forEach(function (imported) {\n            var importedTyped = imported;\n            if (!isNgModule(importedTyped)) {\n                throw new Error(\"Importing \" + importedTyped.name + \" which does not have an ngModuleDef\");\n            }\n            // When this module imports another, the imported module's exported directives and pipes are\n            // added to the compilation scope of this module.\n            var importedScope = transitiveScopesFor(importedTyped);\n            importedScope.exported.directives.forEach(function (entry) { return scopes.compilation.directives.add(entry); });\n            importedScope.exported.pipes.forEach(function (entry) { return scopes.compilation.pipes.add(entry); });\n        });\n        def.exports.forEach(function (exported) {\n            var exportedTyped = exported;\n            // Either the type is a module, a pipe, or a component/directive (which may not have an\n            // ngComponentDef as it might be compiled asynchronously).\n            if (isNgModule(exportedTyped)) {\n                // When this module exports another, the exported module's exported directives and pipes are\n                // added to both the compilation and exported scopes of this module.\n                var exportedScope = transitiveScopesFor(exportedTyped);\n                exportedScope.exported.directives.forEach(function (entry) {\n                    scopes.compilation.directives.add(entry);\n                    scopes.exported.directives.add(entry);\n                });\n                exportedScope.exported.pipes.forEach(function (entry) {\n                    scopes.compilation.pipes.add(entry);\n                    scopes.exported.pipes.add(entry);\n                });\n            }\n            else if (getPipeDef(exportedTyped)) {\n                scopes.exported.pipes.add(exportedTyped);\n            }\n            else {\n                scopes.exported.directives.add(exportedTyped);\n            }\n        });\n        def.transitiveCompileScopes = scopes;\n        return scopes;\n    }\n    function flatten$1(values, mapFn) {\n        var out = [];\n        values.forEach(function (value) {\n            if (Array.isArray(value)) {\n                out.push.apply(out, __spread(flatten$1(value, mapFn)));\n            }\n            else {\n                out.push(mapFn ? mapFn(value) : value);\n            }\n        });\n        return out;\n    }\n    function expandModuleWithProviders(value) {\n        if (isModuleWithProviders(value)) {\n            return value.ngModule;\n        }\n        return value;\n    }\n    function isModuleWithProviders(value) {\n        return value.ngModule !== undefined;\n    }\n    function isNgModule(value) {\n        return !!getNgModuleDef(value);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular component according to its decorator metadata, and patch the resulting\n     * ngComponentDef onto the component type.\n     *\n     * Compilation may be asynchronous (due to the need to resolve URLs for the component template or\n     * other resources, for example). In the event that compilation is not immediate, `compileComponent`\n     * will enqueue resource resolution into a global queue and will fail to return the `ngComponentDef`\n     * until the global queue has been resolved with a call to `resolveComponentResources`.\n     */\n    function compileComponent(type, metadata) {\n        var ngComponentDef = null;\n        // Metadata may have resources which need to be resolved.\n        maybeQueueResolutionOfComponentResources(metadata);\n        Object.defineProperty(type, NG_COMPONENT_DEF, {\n            get: function () {\n                var compiler = getCompilerFacade();\n                if (ngComponentDef === null) {\n                    if (componentNeedsResolution(metadata)) {\n                        var error = [\"Component '\" + stringify$1(type) + \"' is not resolved:\"];\n                        if (metadata.templateUrl) {\n                            error.push(\" - templateUrl: \" + stringify$1(metadata.templateUrl));\n                        }\n                        if (metadata.styleUrls && metadata.styleUrls.length) {\n                            error.push(\" - styleUrls: \" + JSON.stringify(metadata.styleUrls));\n                        }\n                        error.push(\"Did you run and wait for 'resolveComponentResources()'?\");\n                        throw new Error(error.join('\\n'));\n                    }\n                    var meta = __assign({}, directiveMetadata(type, metadata), { template: metadata.template || '', preserveWhitespaces: metadata.preserveWhitespaces || false, styles: metadata.styles || EMPTY_ARRAY, animations: metadata.animations, viewQueries: extractQueriesMetadata(type, getReflect().propMetadata(type), isViewQuery), directives: [], changeDetection: metadata.changeDetection, pipes: new Map(), encapsulation: metadata.encapsulation || exports.ViewEncapsulation.Emulated, interpolation: metadata.interpolation, viewProviders: metadata.viewProviders || null });\n                    ngComponentDef = compiler.compileComponent(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/template.html\", meta);\n                    // When NgModule decorator executed, we enqueued the module definition such that\n                    // it would only dequeue and add itself as module scope to all of its declarations,\n                    // but only if  if all of its declarations had resolved. This call runs the check\n                    // to see if any modules that are in the queue can be dequeued and add scope to\n                    // their declarations.\n                    flushModuleScopingQueueAsMuchAsPossible();\n                    // If component compilation is async, then the @NgModule annotation which declares the\n                    // component may execute and set an ngSelectorScope property on the component type. This\n                    // allows the component to patch itself with directiveDefs from the module after it\n                    // finishes compiling.\n                    if (hasSelectorScope(type)) {\n                        var scopes = transitiveScopesFor(type.ngSelectorScope);\n                        patchComponentDefWithScope(ngComponentDef, scopes);\n                    }\n                }\n                return ngComponentDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function hasSelectorScope(component) {\n        return component.ngSelectorScope !== undefined;\n    }\n    /**\n     * Compile an Angular directive according to its decorator metadata, and patch the resulting\n     * ngDirectiveDef onto the component type.\n     *\n     * In the event that compilation is not immediate, `compileDirective` will return a `Promise` which\n     * will resolve when compilation completes and the directive becomes usable.\n     */\n    function compileDirective(type, directive) {\n        var ngDirectiveDef = null;\n        Object.defineProperty(type, NG_DIRECTIVE_DEF, {\n            get: function () {\n                if (ngDirectiveDef === null) {\n                    var facade = directiveMetadata(type, directive);\n                    ngDirectiveDef = getCompilerFacade().compileDirective(angularCoreEnv, \"ng://\" + (type && type.name) + \"/ngDirectiveDef.js\", facade);\n                }\n                return ngDirectiveDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n    function extendsDirectlyFromObject(type) {\n        return Object.getPrototypeOf(type.prototype) === Object.prototype;\n    }\n    /**\n     * Extract the `R3DirectiveMetadata` for a particular directive (either a `Directive` or a\n     * `Component`).\n     */\n    function directiveMetadata(type, metadata) {\n        // Reflect inputs and outputs.\n        var propMetadata = getReflect().propMetadata(type);\n        return {\n            name: type.name,\n            type: type,\n            typeArgumentCount: 0,\n            selector: metadata.selector,\n            deps: reflectDependencies(type),\n            host: metadata.host || EMPTY_OBJ,\n            propMetadata: propMetadata,\n            inputs: metadata.inputs || EMPTY_ARRAY,\n            outputs: metadata.outputs || EMPTY_ARRAY,\n            queries: extractQueriesMetadata(type, propMetadata, isContentQuery),\n            lifecycle: {\n                usesOnChanges: type.prototype.ngOnChanges !== undefined,\n            },\n            typeSourceSpan: null,\n            usesInheritance: !extendsDirectlyFromObject(type),\n            exportAs: metadata.exportAs || null,\n            providers: metadata.providers || null,\n        };\n    }\n    function convertToR3QueryPredicate(selector) {\n        return typeof selector === 'string' ? splitByComma(selector) : resolveForwardRef(selector);\n    }\n    function convertToR3QueryMetadata(propertyName, ann) {\n        return {\n            propertyName: propertyName,\n            predicate: convertToR3QueryPredicate(ann.selector),\n            descendants: ann.descendants,\n            first: ann.first,\n            read: ann.read ? ann.read : null\n        };\n    }\n    function extractQueriesMetadata(type, propMetadata, isQueryAnn) {\n        var queriesMeta = [];\n        var _loop_1 = function (field) {\n            if (propMetadata.hasOwnProperty(field)) {\n                propMetadata[field].forEach(function (ann) {\n                    if (isQueryAnn(ann)) {\n                        if (!ann.selector) {\n                            throw new Error(\"Can't construct a query for the property \\\"\" + field + \"\\\" of \" +\n                                (\"\\\"\" + stringify$1(type) + \"\\\" since the query selector wasn't defined.\"));\n                        }\n                        queriesMeta.push(convertToR3QueryMetadata(field, ann));\n                    }\n                });\n            }\n        };\n        for (var field in propMetadata) {\n            _loop_1(field);\n        }\n        return queriesMeta;\n    }\n    function isContentQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ContentChild' || name === 'ContentChildren';\n    }\n    function isViewQuery(value) {\n        var name = value.ngMetadataName;\n        return name === 'ViewChild' || name === 'ViewChildren';\n    }\n    function splitByComma(value) {\n        return value.split(',').map(function (piece) { return piece.trim(); });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function compilePipe(type, meta) {\n        var ngPipeDef = null;\n        Object.defineProperty(type, NG_PIPE_DEF, {\n            get: function () {\n                if (ngPipeDef === null) {\n                    ngPipeDef = getCompilerFacade().compilePipe(angularCoreEnv, \"ng://\" + stringify$1(type) + \"/ngPipeDef.js\", {\n                        type: type,\n                        name: type.name,\n                        deps: reflectDependencies(type),\n                        pipeName: meta.name,\n                        pure: meta.pure !== undefined ? meta.pure : true\n                    });\n                }\n                return ngPipeDef;\n            },\n            // Make the property configurable in dev mode to allow overriding in tests\n            configurable: !!ngDevMode,\n        });\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Type of the Directive metadata.\n     *\n     * @publicApi\n     */\n    var Directive = makeDecorator('Directive', function (dir) {\n        if (dir === void 0) { dir = {}; }\n        return dir;\n    }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_DIRECTIVE(type, meta); });\n    /**\n     * Component decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Component = makeDecorator('Component', function (c) {\n        if (c === void 0) { c = {}; }\n        return (__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n    }, Directive, undefined, function (type, meta) { return SWITCH_COMPILE_COMPONENT(type, meta); });\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Pipe = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); }, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_PIPE(type, meta); });\n    var initializeBaseDef = function (target) {\n        var constructor = target.constructor;\n        var inheritedBaseDef = constructor.ngBaseDef;\n        var baseDef = constructor.ngBaseDef = {\n            inputs: {},\n            outputs: {},\n            declaredInputs: {},\n        };\n        if (inheritedBaseDef) {\n            fillProperties(baseDef.inputs, inheritedBaseDef.inputs);\n            fillProperties(baseDef.outputs, inheritedBaseDef.outputs);\n            fillProperties(baseDef.declaredInputs, inheritedBaseDef.declaredInputs);\n        }\n    };\n    /**\n     * Does the work of creating the `ngBaseDef` property for the @Input and @Output decorators.\n     * @param key \"inputs\" or \"outputs\"\n     */\n    var updateBaseDefFromIOProp = function (getProp) {\n        return function (target, name) {\n            var args = [];\n            for (var _i = 2; _i < arguments.length; _i++) {\n                args[_i - 2] = arguments[_i];\n            }\n            var constructor = target.constructor;\n            if (!constructor.hasOwnProperty(NG_BASE_DEF)) {\n                initializeBaseDef(target);\n            }\n            var baseDef = constructor.ngBaseDef;\n            var defProp = getProp(baseDef);\n            defProp[name] = args[0];\n        };\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.inputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); }, undefined, updateBaseDefFromIOProp(function (baseDef) { return baseDef.outputs || {}; }));\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n    /**\n     * Binds a CSS event to a host listener and supplies configuration metadata.\n     * Angular invokes the supplied handler method when the host element emits the specified event,\n     * and updates the bound element with the result.\n     * If the handler method returns false, applies `preventDefault` on the bound element.\n     *\n     * @usageNotes\n     *\n     * The following example declares a directive\n     * that attaches a click listener to a button and counts clicks.\n     *\n     * ```\n     * @Directive({selector: 'button[counting]'})\n     * class CountClicks {\n     *   numberOfClicks = 0;\n     *\n     *   @HostListener('click', ['$event.target'])\n     *   onClick(btn) {\n     *     console.log('button', btn, 'number of clicks:', this.numberOfClicks++);\n     *  }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   template: '<button counting>Increment</button>',\n     * })\n     * class App {}\n     * ```\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n    var SWITCH_COMPILE_COMPONENT__POST_R3__ = compileComponent;\n    var SWITCH_COMPILE_DIRECTIVE__POST_R3__ = compileDirective;\n    var SWITCH_COMPILE_PIPE__POST_R3__ = compilePipe;\n    var SWITCH_COMPILE_COMPONENT__PRE_R3__ = noop;\n    var SWITCH_COMPILE_DIRECTIVE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_PIPE__PRE_R3__ = noop;\n    var SWITCH_COMPILE_COMPONENT = SWITCH_COMPILE_COMPONENT__PRE_R3__;\n    var SWITCH_COMPILE_DIRECTIVE = SWITCH_COMPILE_DIRECTIVE__PRE_R3__;\n    var SWITCH_COMPILE_PIPE = SWITCH_COMPILE_PIPE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ɵ0$2 = getClosureSafeProperty;\n    var USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ0$2 });\n    var EMPTY_ARRAY$3 = [];\n    function convertInjectableProviderToFactory(type, provider) {\n        if (!provider) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            var deps_1 = reflectionCapabilities.parameters(type);\n            // TODO - convert to flags.\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_1))))(); };\n        }\n        if (USE_VALUE$1 in provider) {\n            var valueProvider_1 = provider;\n            return function () { return valueProvider_1.useValue; };\n        }\n        else if (provider.useExisting) {\n            var existingProvider_1 = provider;\n            return function () { return inject(existingProvider_1.useExisting); };\n        }\n        else if (provider.useFactory) {\n            var factoryProvider_1 = provider;\n            return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, __spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY$3))); };\n        }\n        else if (provider.useClass) {\n            var classProvider_1 = provider;\n            var deps_2 = provider.deps;\n            if (!deps_2) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_2 = reflectionCapabilities.parameters(type);\n            }\n            return function () {\n                var _a;\n                return new ((_a = classProvider_1.useClass).bind.apply(_a, __spread([void 0], injectArgs(deps_2))))();\n            };\n        }\n        else {\n            var deps_3 = provider.deps;\n            if (!deps_3) {\n                var reflectionCapabilities = new ReflectionCapabilities();\n                deps_3 = reflectionCapabilities.parameters(type);\n            }\n            return function () { return new (type.bind.apply(type, __spread([void 0], injectArgs(deps_3))))(); };\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Defines a schema that allows an NgModule to contain the following:\n     * - Non-Angular elements named with dash case (`-`).\n     * - Element properties named with dash case (`-`).\n     * Dash case is the naming convention for custom elements.\n     *\n     * @publicApi\n     */\n    var CUSTOM_ELEMENTS_SCHEMA = {\n        name: 'custom-elements'\n    };\n    /**\n     * Defines a schema that allows any property on any element.\n     *\n     * @publicApi\n     */\n    var NO_ERRORS_SCHEMA = {\n        name: 'no-errors-schema'\n    };\n    /**\n     * @Annotation\n     * @publicApi\n     */\n    var NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, \n    /**\n     * Decorator that marks the following class as an NgModule, and supplies\n     * configuration metadata for it.\n     *\n     * * The `declarations` and `entryComponents` options configure the compiler\n     * with information about what belongs to the NgModule.\n     * * The `providers` options configures the NgModule's injector to provide\n     * dependencies the NgModule members.\n     * * The `imports` and `exports` options bring in members from other modules, and make\n     * this module's members available to others.\n     */\n    function (type, meta) { return SWITCH_COMPILE_NGMODULE(type, meta); });\n    function preR3NgModuleCompile(moduleType, metadata) {\n        var imports = (metadata && metadata.imports) || [];\n        if (metadata && metadata.exports) {\n            imports = __spread(imports, [metadata.exports]);\n        }\n        moduleType.ngInjectorDef = defineInjector({\n            factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n            providers: metadata && metadata.providers,\n            imports: imports,\n        });\n    }\n    var SWITCH_COMPILE_NGMODULE__POST_R3__ = compileNgModule;\n    var SWITCH_COMPILE_NGMODULE__PRE_R3__ = preR3NgModuleCompile;\n    var SWITCH_COMPILE_NGMODULE = SWITCH_COMPILE_NGMODULE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Compile an Angular injectable according to its `Injectable` metadata, and patch the resulting\n     * `ngInjectableDef` onto the injectable type.\n     */\n    function compileInjectable(type, srcMeta) {\n        var def = null;\n        // if NG_INJECTABLE_DEF is already defined on this class then don't overwrite it\n        if (type.hasOwnProperty(NG_INJECTABLE_DEF))\n            return;\n        Object.defineProperty(type, NG_INJECTABLE_DEF, {\n            get: function () {\n                if (def === null) {\n                    // Allow the compilation of a class with a `@Injectable()` decorator without parameters\n                    var meta = srcMeta || { providedIn: null };\n                    var hasAProvider = isUseClassProvider(meta) || isUseFactoryProvider(meta) ||\n                        isUseValueProvider(meta) || isUseExistingProvider(meta);\n                    var compilerMeta = {\n                        name: type.name,\n                        type: type,\n                        typeArgumentCount: 0,\n                        providedIn: meta.providedIn,\n                        ctorDeps: reflectDependencies(type),\n                        userDeps: undefined\n                    };\n                    if ((isUseClassProvider(meta) || isUseFactoryProvider(meta)) && meta.deps !== undefined) {\n                        compilerMeta.userDeps = convertDependencies(meta.deps);\n                    }\n                    if (!hasAProvider) {\n                        // In the case the user specifies a type provider, treat it as {provide: X, useClass: X}.\n                        // The deps will have been reflected above, causing the factory to create the class by\n                        // calling\n                        // its constructor with injected deps.\n                        compilerMeta.useClass = type;\n                    }\n                    else if (isUseClassProvider(meta)) {\n                        // The user explicitly specified useClass, and may or may not have provided deps.\n                        compilerMeta.useClass = meta.useClass;\n                    }\n                    else if (isUseValueProvider(meta)) {\n                        // The user explicitly specified useValue.\n                        compilerMeta.useValue = meta.useValue;\n                    }\n                    else if (isUseFactoryProvider(meta)) {\n                        // The user explicitly specified useFactory.\n                        compilerMeta.useFactory = meta.useFactory;\n                    }\n                    else if (isUseExistingProvider(meta)) {\n                        // The user explicitly specified useExisting.\n                        compilerMeta.useExisting = meta.useExisting;\n                    }\n                    else {\n                        // Can't happen - either hasAProvider will be false, or one of the providers will be set.\n                        throw new Error(\"Unreachable state.\");\n                    }\n                    def = getCompilerFacade().compileInjectable(angularCoreEnv, \"ng://\" + type.name + \"/ngInjectableDef.js\", compilerMeta);\n                }\n                return def;\n            },\n        });\n    }\n    var ɵ0$3 = getClosureSafeProperty;\n    var USE_VALUE$2 = getClosureSafeProperty({ provide: String, useValue: ɵ0$3 });\n    function isUseClassProvider(meta) {\n        return meta.useClass !== undefined;\n    }\n    function isUseValueProvider(meta) {\n        return USE_VALUE$2 in meta;\n    }\n    function isUseFactoryProvider(meta) {\n        return meta.useFactory !== undefined;\n    }\n    function isUseExistingProvider(meta) {\n        return meta.useExisting !== undefined;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Injectable decorator and metadata.\n     *\n     * @Annotation\n     * @publicApi\n     */\n    var Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (type, meta) { return SWITCH_COMPILE_INJECTABLE(type, meta); });\n    /**\n     * Supports @Injectable() in JIT mode for Render2.\n     */\n    function render2CompileInjectable(injectableType, options) {\n        if (options && options.providedIn !== undefined && !getInjectableDef(injectableType)) {\n            injectableType.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn,\n                factory: convertInjectableProviderToFactory(injectableType, options),\n            });\n        }\n    }\n    var SWITCH_COMPILE_INJECTABLE__POST_R3__ = compileInjectable;\n    var SWITCH_COMPILE_INJECTABLE__PRE_R3__ = render2CompileInjectable;\n    var SWITCH_COMPILE_INJECTABLE = SWITCH_COMPILE_INJECTABLE__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var ERROR_DEBUG_CONTEXT = 'ngDebugContext';\n    var ERROR_ORIGINAL_ERROR = 'ngOriginalError';\n    var ERROR_LOGGER = 'ngErrorLogger';\n    function getDebugContext(error) {\n        return error[ERROR_DEBUG_CONTEXT];\n    }\n    function getOriginalError(error) {\n        return error[ERROR_ORIGINAL_ERROR];\n    }\n    function getErrorLogger(error) {\n        return error[ERROR_LOGGER] || defaultErrorLogger;\n    }\n    function defaultErrorLogger(console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        console.error.apply(console, __spread(values));\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides a hook for centralized exception handling.\n     *\n     * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n     * intercept error handling, write a custom exception handler that replaces this default as\n     * appropriate for your app.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * class MyErrorHandler implements ErrorHandler {\n     *   handleError(error) {\n     *     // do something with the exception\n     *   }\n     * }\n     *\n     * @NgModule({\n     *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n     * })\n     * class MyModule {}\n     * ```\n     *\n     * @publicApi\n     */\n    var ErrorHandler = /** @class */ (function () {\n        function ErrorHandler() {\n            /**\n             * @internal\n             */\n            this._console = console;\n        }\n        ErrorHandler.prototype.handleError = function (error) {\n            var originalError = this._findOriginalError(error);\n            var context = this._findContext(error);\n            // Note: Browser consoles show the place from where console.error was called.\n            // We can use this to give users additional information about the error.\n            var errorLogger = getErrorLogger(error);\n            errorLogger(this._console, \"ERROR\", error);\n            if (originalError) {\n                errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n            }\n            if (context) {\n                errorLogger(this._console, 'ERROR CONTEXT', context);\n            }\n        };\n        /** @internal */\n        ErrorHandler.prototype._findContext = function (error) {\n            if (error) {\n                return getDebugContext(error) ? getDebugContext(error) :\n                    this._findContext(getOriginalError(error));\n            }\n            return null;\n        };\n        /** @internal */\n        ErrorHandler.prototype._findOriginalError = function (error) {\n            var e = getOriginalError(error);\n            while (e && getOriginalError(e)) {\n                e = getOriginalError(e);\n            }\n            return e;\n        };\n        return ErrorHandler;\n    }());\n    function wrappedError(message, originalError) {\n        var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n        var error = Error(msg);\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function findFirstClosedCycle(keys) {\n        var res = [];\n        for (var i = 0; i < keys.length; ++i) {\n            if (res.indexOf(keys[i]) > -1) {\n                res.push(keys[i]);\n                return res;\n            }\n            res.push(keys[i]);\n        }\n        return res;\n    }\n    function constructResolvingPath(keys) {\n        if (keys.length > 1) {\n            var reversed = findFirstClosedCycle(keys.slice().reverse());\n            var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n            return ' (' + tokenStrs.join(' -> ') + ')';\n        }\n        return '';\n    }\n    function injectionError(injector, key, constructResolvingMessage, originalError) {\n        var keys = [key];\n        var errMsg = constructResolvingMessage(keys);\n        var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n        error.addKey = addKey;\n        error.keys = keys;\n        error.injectors = [injector];\n        error.constructResolvingMessage = constructResolvingMessage;\n        error[ERROR_ORIGINAL_ERROR] = originalError;\n        return error;\n    }\n    function addKey(injector, key) {\n        this.injectors.push(injector);\n        this.keys.push(key);\n        // Note: This updated message won't be reflected in the `.stack` property\n        this.message = this.constructResolvingMessage(this.keys);\n    }\n    /**\n     * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n     * {@link Injector} does not have a {@link Provider} for the given key.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b:B) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     */\n    function noProviderError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when dependencies form a cycle.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * var injector = Injector.resolveAndCreate([\n     *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n     *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n     * ]);\n     *\n     * expect(() => injector.get(\"one\")).toThrowError();\n     * ```\n     *\n     * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n     */\n    function cyclicDependencyError(injector, key) {\n        return injectionError(injector, key, function (keys) {\n            return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n        });\n    }\n    /**\n     * Thrown when a constructing type returns with an Error.\n     *\n     * The `InstantiationError` class contains the original error plus the dependency graph which caused\n     * this object to be instantiated.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor() {\n     *     throw new Error('message');\n     *   }\n     * }\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n\n     * try {\n     *   injector.get(A);\n     * } catch (e) {\n     *   expect(e instanceof InstantiationError).toBe(true);\n     *   expect(e.originalException.message).toEqual(\"message\");\n     *   expect(e.originalStack).toBeDefined();\n     * }\n     * ```\n     */\n    function instantiationError(injector, originalException, originalStack, key) {\n        return injectionError(injector, key, function (keys) {\n            var first = stringify(keys[0].token);\n            return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n        }, originalException);\n    }\n    /**\n     * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n     * creation.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n     * ```\n     */\n    function invalidProviderError(provider) {\n        return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n    }\n    /**\n     * Thrown when the class has no annotation information.\n     *\n     * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n     * need to be injected into the constructor.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {\n     *   constructor(b) {}\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n     * ```\n     *\n     * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n     *\n     * ```typescript\n     * class B {}\n     *\n     * class A {\n     *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n     * }\n     *\n     * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n     * ```\n     *\n     */\n    function noAnnotationError(typeOrFunc, params) {\n        var signature = [];\n        for (var i = 0, ii = params.length; i < ii; i++) {\n            var parameter = params[i];\n            if (!parameter || parameter.length == 0) {\n                signature.push('?');\n            }\n            else {\n                signature.push(parameter.map(stringify).join(' '));\n            }\n        }\n        return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n            signature.join(', ') + '). ' +\n            'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n            stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n    }\n    /**\n     * Thrown when getting an object by index.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * class A {}\n     *\n     * var injector = Injector.resolveAndCreate([A]);\n     *\n     * expect(() => injector.getAt(100)).toThrowError();\n     * ```\n     *\n     */\n    function outOfBoundsError(index) {\n        return Error(\"Index \" + index + \" is out-of-bounds.\");\n    }\n    // TODO: add a working example after alpha38 is released\n    /**\n     * Thrown when a multi provider and a regular provider are bound to the same token.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * expect(() => Injector.resolveAndCreate([\n     *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n     *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n     * ])).toThrowError();\n     * ```\n     */\n    function mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n        return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n     *\n     * Keys have:\n     * - a system-wide unique `id`.\n     * - a `token`.\n     *\n     * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n     * the\n     * injector to store created objects in a more efficient way.\n     *\n     * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n     * resolving\n     * providers.\n     *\n     * @deprecated No replacement\n     * @publicApi\n     */\n    var ReflectiveKey = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveKey(token, id) {\n            this.token = token;\n            this.id = id;\n            if (!token) {\n                throw new Error('Token must be defined!');\n            }\n            this.displayName = stringify(this.token);\n        }\n        /**\n         * Retrieves a `Key` for a token.\n         */\n        ReflectiveKey.get = function (token) {\n            return _globalKeyRegistry.get(resolveForwardRef(token));\n        };\n        Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n            /**\n             * @returns the number of keys registered in the system.\n             */\n            get: function () { return _globalKeyRegistry.numberOfKeys; },\n            enumerable: true,\n            configurable: true\n        });\n        return ReflectiveKey;\n    }());\n    var KeyRegistry = /** @class */ (function () {\n        function KeyRegistry() {\n            this._allKeys = new Map();\n        }\n        KeyRegistry.prototype.get = function (token) {\n            if (token instanceof ReflectiveKey)\n                return token;\n            if (this._allKeys.has(token)) {\n                return this._allKeys.get(token);\n            }\n            var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n            this._allKeys.set(token, newKey);\n            return newKey;\n        };\n        Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n            get: function () { return this._allKeys.size; },\n            enumerable: true,\n            configurable: true\n        });\n        return KeyRegistry;\n    }());\n    var _globalKeyRegistry = new KeyRegistry();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provides access to reflection data about symbols. Used internally by Angular\n     * to power dependency injection and compilation.\n     */\n    var Reflector = /** @class */ (function () {\n        function Reflector(reflectionCapabilities) {\n            this.reflectionCapabilities = reflectionCapabilities;\n        }\n        Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n        Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n        Reflector.prototype.parameters = function (typeOrFunc) {\n            return this.reflectionCapabilities.parameters(typeOrFunc);\n        };\n        Reflector.prototype.annotations = function (typeOrFunc) {\n            return this.reflectionCapabilities.annotations(typeOrFunc);\n        };\n        Reflector.prototype.propMetadata = function (typeOrFunc) {\n            return this.reflectionCapabilities.propMetadata(typeOrFunc);\n        };\n        Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n            return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n        };\n        Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n        Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n        Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n        Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n        Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n        Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n            return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n        };\n        Reflector.prototype.resolveEnum = function (identifier, name) {\n            return this.reflectionCapabilities.resolveEnum(identifier, name);\n        };\n        return Reflector;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The {@link Reflector} used internally in Angular to access metadata\n     * about symbols.\n     */\n    var reflector = new Reflector(new ReflectionCapabilities());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * `Dependency` is used by the framework to extend DI.\n     * This is internal to Angular and should not be used directly.\n     */\n    var ReflectiveDependency = /** @class */ (function () {\n        function ReflectiveDependency(key, optional, visibility) {\n            this.key = key;\n            this.optional = optional;\n            this.visibility = visibility;\n        }\n        ReflectiveDependency.fromKey = function (key) {\n            return new ReflectiveDependency(key, false, null);\n        };\n        return ReflectiveDependency;\n    }());\n    var _EMPTY_LIST = [];\n    var ResolvedReflectiveProvider_ = /** @class */ (function () {\n        function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n            this.key = key;\n            this.resolvedFactories = resolvedFactories;\n            this.multiProvider = multiProvider;\n            this.resolvedFactory = this.resolvedFactories[0];\n        }\n        return ResolvedReflectiveProvider_;\n    }());\n    /**\n     * An internal resolved representation of a factory function created by resolving `Provider`.\n     * @publicApi\n     */\n    var ResolvedReflectiveFactory = /** @class */ (function () {\n        function ResolvedReflectiveFactory(\n        /**\n         * Factory function which can return an instance of an object represented by a key.\n         */\n        factory, \n        /**\n         * Arguments (dependencies) to the `factory` function.\n         */\n        dependencies) {\n            this.factory = factory;\n            this.dependencies = dependencies;\n        }\n        return ResolvedReflectiveFactory;\n    }());\n    /**\n     * Resolve a single provider.\n     */\n    function resolveReflectiveFactory(provider) {\n        var factoryFn;\n        var resolvedDeps;\n        if (provider.useClass) {\n            var useClass = resolveForwardRef(provider.useClass);\n            factoryFn = reflector.factory(useClass);\n            resolvedDeps = _dependenciesFor(useClass);\n        }\n        else if (provider.useExisting) {\n            factoryFn = function (aliasInstance) { return aliasInstance; };\n            resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n        }\n        else if (provider.useFactory) {\n            factoryFn = provider.useFactory;\n            resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n        }\n        else {\n            factoryFn = function () { return provider.useValue; };\n            resolvedDeps = _EMPTY_LIST;\n        }\n        return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n    }\n    /**\n     * Converts the `Provider` into `ResolvedProvider`.\n     *\n     * `Injector` internally only uses `ResolvedProvider`, `Provider` contains convenience provider\n     * syntax.\n     */\n    function resolveReflectiveProvider(provider) {\n        return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n    }\n    /**\n     * Resolve a list of Providers.\n     */\n    function resolveReflectiveProviders(providers) {\n        var normalized = _normalizeProviders(providers, []);\n        var resolved = normalized.map(resolveReflectiveProvider);\n        var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n        return Array.from(resolvedProviderMap.values());\n    }\n    /**\n     * Merges a list of ResolvedProviders into a list where each key is contained exactly once and\n     * multi providers have been merged.\n     */\n    function mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            var existing = normalizedProvidersMap.get(provider.key.id);\n            if (existing) {\n                if (provider.multiProvider !== existing.multiProvider) {\n                    throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n                }\n                if (provider.multiProvider) {\n                    for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                        existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                    }\n                }\n                else {\n                    normalizedProvidersMap.set(provider.key.id, provider);\n                }\n            }\n            else {\n                var resolvedProvider = void 0;\n                if (provider.multiProvider) {\n                    resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n                }\n                else {\n                    resolvedProvider = provider;\n                }\n                normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n            }\n        }\n        return normalizedProvidersMap;\n    }\n    function _normalizeProviders(providers, res) {\n        providers.forEach(function (b) {\n            if (b instanceof Type) {\n                res.push({ provide: b, useClass: b });\n            }\n            else if (b && typeof b == 'object' && b.provide !== undefined) {\n                res.push(b);\n            }\n            else if (b instanceof Array) {\n                _normalizeProviders(b, res);\n            }\n            else {\n                throw invalidProviderError(b);\n            }\n        });\n        return res;\n    }\n    function constructDependencies(typeOrFunc, dependencies) {\n        if (!dependencies) {\n            return _dependenciesFor(typeOrFunc);\n        }\n        else {\n            var params_1 = dependencies.map(function (t) { return [t]; });\n            return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n        }\n    }\n    function _dependenciesFor(typeOrFunc) {\n        var params = reflector.parameters(typeOrFunc);\n        if (!params)\n            return [];\n        if (params.some(function (p) { return p == null; })) {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n        return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n    }\n    function _extractToken(typeOrFunc, metadata, params) {\n        var token = null;\n        var optional = false;\n        if (!Array.isArray(metadata)) {\n            if (metadata instanceof Inject) {\n                return _createDependency(metadata.token, optional, null);\n            }\n            else {\n                return _createDependency(metadata, optional, null);\n            }\n        }\n        var visibility = null;\n        for (var i = 0; i < metadata.length; ++i) {\n            var paramMetadata = metadata[i];\n            if (paramMetadata instanceof Type) {\n                token = paramMetadata;\n            }\n            else if (paramMetadata instanceof Inject) {\n                token = paramMetadata.token;\n            }\n            else if (paramMetadata instanceof Optional) {\n                optional = true;\n            }\n            else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n                visibility = paramMetadata;\n            }\n            else if (paramMetadata instanceof InjectionToken) {\n                token = paramMetadata;\n            }\n        }\n        token = resolveForwardRef(token);\n        if (token != null) {\n            return _createDependency(token, optional, visibility);\n        }\n        else {\n            throw noAnnotationError(typeOrFunc, params);\n        }\n    }\n    function _createDependency(token, optional, visibility) {\n        return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Threshold for the dynamic version\n    var UNDEFINED = new Object();\n    /**\n     * A ReflectiveDependency injection container used for instantiating objects and resolving\n     * dependencies.\n     *\n     * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n     * constructor dependencies.\n     *\n     * In typical use, application code asks for the dependencies in the constructor and they are\n     * resolved by the `Injector`.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * The following example creates an `Injector` configured to create `Engine` and `Car`.\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * var car = injector.get(Car);\n     * expect(car instanceof Car).toBe(true);\n     * expect(car.engine instanceof Engine).toBe(true);\n     * ```\n     *\n     * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n     * resolve all of the object's dependencies automatically.\n     *\n     * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n     * @publicApi\n     */\n    var ReflectiveInjector = /** @class */ (function () {\n        function ReflectiveInjector() {\n        }\n        /**\n         * Turns an array of provider definitions into an array of resolved providers.\n         *\n         * A resolution is a process of flattening multiple nested arrays and converting individual\n         * providers into an array of `ResolvedReflectiveProvider`s.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n         *\n         * expect(providers.length).toEqual(2);\n         *\n         * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n         * expect(providers[0].key.displayName).toBe(\"Car\");\n         * expect(providers[0].dependencies.length).toEqual(1);\n         * expect(providers[0].factory).toBeDefined();\n         *\n         * expect(providers[1].key.displayName).toBe(\"Engine\");\n         * });\n         * ```\n         *\n         */\n        ReflectiveInjector.resolve = function (providers) {\n            return resolveReflectiveProviders(providers);\n        };\n        /**\n         * Resolves an array of providers and creates an injector from those providers.\n         *\n         * The passed-in providers can be an array of `Type`, `Provider`,\n         * or a recursive array of more providers.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.resolveAndCreate = function (providers, parent) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n        };\n        /**\n         * Creates an injector from previously resolved providers.\n         *\n         * This API is the recommended way to construct injectors in performance-sensitive parts.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * ```typescript\n         * @Injectable()\n         * class Engine {\n         * }\n         *\n         * @Injectable()\n         * class Car {\n         *   constructor(public engine:Engine) {}\n         * }\n         *\n         * var providers = ReflectiveInjector.resolve([Car, Engine]);\n         * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n         * expect(injector.get(Car) instanceof Car).toBe(true);\n         * ```\n         */\n        ReflectiveInjector.fromResolvedProviders = function (providers, parent) {\n            return new ReflectiveInjector_(providers, parent);\n        };\n        return ReflectiveInjector;\n    }());\n    var ReflectiveInjector_ = /** @class */ (function () {\n        /**\n         * Private\n         */\n        function ReflectiveInjector_(_providers, _parent) {\n            /** @internal */\n            this._constructionCounter = 0;\n            this._providers = _providers;\n            this.parent = _parent || null;\n            var len = _providers.length;\n            this.keyIds = new Array(len);\n            this.objs = new Array(len);\n            for (var i = 0; i < len; i++) {\n                this.keyIds[i] = _providers[i].key.id;\n                this.objs[i] = UNDEFINED;\n            }\n        }\n        ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n            return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n        };\n        ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n            var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n            return this.createChildFromResolved(ResolvedReflectiveProviders);\n        };\n        ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n            var inj = new ReflectiveInjector_(providers);\n            inj.parent = this;\n            return inj;\n        };\n        ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n            return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n        };\n        ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n            if (index < 0 || index >= this._providers.length) {\n                throw outOfBoundsError(index);\n            }\n            return this._providers[index];\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._new = function (provider) {\n            if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n                throw cyclicDependencyError(this, provider.key);\n            }\n            return this._instantiateProvider(provider);\n        };\n        ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n        ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n            if (provider.multiProvider) {\n                var res = new Array(provider.resolvedFactories.length);\n                for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                    res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n                }\n                return res;\n            }\n            else {\n                return this._instantiate(provider, provider.resolvedFactories[0]);\n            }\n        };\n        ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n            var _this = this;\n            var factory = ResolvedReflectiveFactory$$1.factory;\n            var deps;\n            try {\n                deps =\n                    ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n            }\n            catch (e) {\n                if (e.addKey) {\n                    e.addKey(this, provider.key);\n                }\n                throw e;\n            }\n            var obj;\n            try {\n                obj = factory.apply(void 0, __spread(deps));\n            }\n            catch (e) {\n                throw instantiationError(this, e, e.stack, provider.key);\n            }\n            return obj;\n        };\n        ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n            return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n        };\n        ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n            if (key === ReflectiveInjector_.INJECTOR_KEY) {\n                return this;\n            }\n            if (visibility instanceof Self) {\n                return this._getByKeySelf(key, notFoundValue);\n            }\n            else {\n                return this._getByKeyDefault(key, notFoundValue, visibility);\n            }\n        };\n        ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n            for (var i = 0; i < this.keyIds.length; i++) {\n                if (this.keyIds[i] === keyId) {\n                    if (this.objs[i] === UNDEFINED) {\n                        this.objs[i] = this._new(this._providers[i]);\n                    }\n                    return this.objs[i];\n                }\n            }\n            return UNDEFINED;\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._throwOrNull = function (key, notFoundValue) {\n            if (notFoundValue !== THROW_IF_NOT_FOUND) {\n                return notFoundValue;\n            }\n            else {\n                throw noProviderError(this, key);\n            }\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeySelf = function (key, notFoundValue) {\n            var obj = this._getObjByKeyId(key.id);\n            return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n        };\n        /** @internal */\n        ReflectiveInjector_.prototype._getByKeyDefault = function (key, notFoundValue, visibility) {\n            var inj;\n            if (visibility instanceof SkipSelf) {\n                inj = this.parent;\n            }\n            else {\n                inj = this;\n            }\n            while (inj instanceof ReflectiveInjector_) {\n                var inj_ = inj;\n                var obj = inj_._getObjByKeyId(key.id);\n                if (obj !== UNDEFINED)\n                    return obj;\n                inj = inj_.parent;\n            }\n            if (inj !== null) {\n                return inj.get(key.token, notFoundValue);\n            }\n            else {\n                return this._throwOrNull(key, notFoundValue);\n            }\n        };\n        Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n            get: function () {\n                var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                    .join(', ');\n                return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n        ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n        return ReflectiveInjector_;\n    }());\n    function _mapProviders(injector, fn) {\n        var res = new Array(injector._providers.length);\n        for (var i = 0; i < injector._providers.length; ++i) {\n            res[i] = fn(injector.getProviderAtIndex(i));\n        }\n        return res;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Determine if the argument is shaped like a Promise\n     */\n    function isPromise(obj) {\n        // allow any Promise/A+ compliant thenable.\n        // It's up to the caller to ensure that obj.then conforms to the spec\n        return !!obj && typeof obj.then === 'function';\n    }\n    /**\n     * Determine if the argument is an Observable\n     */\n    function isObservable(obj) {\n        // TODO: use isObservable once we update pass rxjs 6.1\n        // https://github.com/ReactiveX/rxjs/blob/master/CHANGELOG.md#610-2018-05-03\n        return !!obj && typeof obj.subscribe === 'function';\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A function that will be executed when an application is initialized.\n     *\n     * @publicApi\n     */\n    var APP_INITIALIZER = new InjectionToken('Application Initializer');\n    /**\n     * A class that reflects the state of running {@link APP_INITIALIZER}s.\n     *\n     * @publicApi\n     */\n    var ApplicationInitStatus = /** @class */ (function () {\n        function ApplicationInitStatus(appInits) {\n            var _this = this;\n            this.appInits = appInits;\n            this.initialized = false;\n            this.done = false;\n            this.donePromise = new Promise(function (res, rej) {\n                _this.resolve = res;\n                _this.reject = rej;\n            });\n        }\n        /** @internal */\n        ApplicationInitStatus.prototype.runInitializers = function () {\n            var _this = this;\n            if (this.initialized) {\n                return;\n            }\n            var asyncInitPromises = [];\n            var complete = function () {\n                _this.done = true;\n                _this.resolve();\n            };\n            if (this.appInits) {\n                for (var i = 0; i < this.appInits.length; i++) {\n                    var initResult = this.appInits[i]();\n                    if (isPromise(initResult)) {\n                        asyncInitPromises.push(initResult);\n                    }\n                }\n            }\n            Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n            if (asyncInitPromises.length === 0) {\n                complete();\n            }\n            this.initialized = true;\n        };\n        ApplicationInitStatus = __decorate([\n            Injectable(),\n            __param(0, Inject(APP_INITIALIZER)), __param(0, Optional()),\n            __metadata(\"design:paramtypes\", [Array])\n        ], ApplicationInitStatus);\n        return ApplicationInitStatus;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A DI Token representing a unique string id assigned to the application by Angular and used\n     * primarily for prefixing application attributes and CSS styles when\n     * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n     *\n     * If you need to avoid randomly generated value to be used as an application id, you can provide\n     * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n     * using this token.\n     * @publicApi\n     */\n    var APP_ID = new InjectionToken('AppId');\n    function _appIdRandomProviderFactory() {\n        return \"\" + _randomChar() + _randomChar() + _randomChar();\n    }\n    /**\n     * Providers that will generate a random APP_ID_TOKEN.\n     * @publicApi\n     */\n    var APP_ID_RANDOM_PROVIDER = {\n        provide: APP_ID,\n        useFactory: _appIdRandomProviderFactory,\n        deps: [],\n    };\n    function _randomChar() {\n        return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n    }\n    /**\n     * A function that will be executed when a platform is initialized.\n     * @publicApi\n     */\n    var PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n    /**\n     * A token that indicates an opaque platform id.\n     * @publicApi\n     */\n    var PLATFORM_ID = new InjectionToken('Platform ID');\n    /**\n     * All callbacks provided via this token will be called for every component that is bootstrapped.\n     * Signature of the callback:\n     *\n     * `(componentRef: ComponentRef) => void`.\n     *\n     * @publicApi\n     */\n    var APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n    /**\n     * A token which indicates the root directory of the application\n     * @publicApi\n     */\n    var PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var Console = /** @class */ (function () {\n        function Console() {\n        }\n        Console.prototype.log = function (message) {\n            // tslint:disable-next-line:no-console\n            console.log(message);\n        };\n        // Note: for reporting errors use `DOM.logError()` as it is platform specific\n        Console.prototype.warn = function (message) {\n            // tslint:disable-next-line:no-console\n            console.warn(message);\n        };\n        Console = __decorate([\n            Injectable()\n        ], Console);\n        return Console;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Combination of NgModuleFactory and ComponentFactorys.\n     *\n     * @publicApi\n     */\n    var ModuleWithComponentFactories = /** @class */ (function () {\n        function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n            this.ngModuleFactory = ngModuleFactory;\n            this.componentFactories = componentFactories;\n        }\n        return ModuleWithComponentFactories;\n    }());\n    function _throwError() {\n        throw new Error(\"Runtime compiler is not loaded\");\n    }\n    var Compiler_compileModuleSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleSync__POST_R3__ = function (moduleType) {\n        return new NgModuleFactory$1(moduleType);\n    };\n    var Compiler_compileModuleSync = Compiler_compileModuleSync__PRE_R3__;\n    var Compiler_compileModuleAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAsync = Compiler_compileModuleAsync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsSync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsSync__POST_R3__ = function (moduleType) {\n        return new ModuleWithComponentFactories(Compiler_compileModuleSync__POST_R3__(moduleType), []);\n    };\n    var Compiler_compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync__PRE_R3__;\n    var Compiler_compileModuleAndAllComponentsAsync__PRE_R3__ = _throwError;\n    var Compiler_compileModuleAndAllComponentsAsync__POST_R3__ = function (moduleType) {\n        return Promise.resolve(Compiler_compileModuleAndAllComponentsSync__POST_R3__(moduleType));\n    };\n    var Compiler_compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync__PRE_R3__;\n    /**\n     * Low-level service for running the angular compiler during runtime\n     * to create {@link ComponentFactory}s, which\n     * can later be used to create and render a Component instance.\n     *\n     * Each `@NgModule` provides an own `Compiler` to its injector,\n     * that will use the directives/pipes of the ng module for compilation\n     * of components.\n     *\n     * @publicApi\n     */\n    var Compiler = /** @class */ (function () {\n        function Compiler() {\n            /**\n             * Compiles the given NgModule and all of its components. All templates of the components listed\n             * in `entryComponents` have to be inlined.\n             */\n            this.compileModuleSync = Compiler_compileModuleSync;\n            /**\n             * Compiles the given NgModule and all of its components\n             */\n            this.compileModuleAsync = Compiler_compileModuleAsync;\n            /**\n             * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsSync = Compiler_compileModuleAndAllComponentsSync;\n            /**\n             * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n             */\n            this.compileModuleAndAllComponentsAsync = Compiler_compileModuleAndAllComponentsAsync;\n        }\n        /**\n         * Clears all caches.\n         */\n        Compiler.prototype.clearCache = function () { };\n        /**\n         * Clears the cache for the given component/ngModule.\n         */\n        Compiler.prototype.clearCacheFor = function (type) { };\n        /**\n         * Returns the id for a given NgModule, if one is defined and known to the compiler.\n         */\n        Compiler.prototype.getModuleId = function (moduleType) { return undefined; };\n        Compiler = __decorate([\n            Injectable()\n        ], Compiler);\n        return Compiler;\n    }());\n    /**\n     * Token to provide CompilerOptions in the platform injector.\n     *\n     * @publicApi\n     */\n    var COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n    /**\n     * A factory for creating a Compiler\n     *\n     * @publicApi\n     */\n    var CompilerFactory = /** @class */ (function () {\n        function CompilerFactory() {\n        }\n        return CompilerFactory;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var trace;\n    var events;\n    function detectWTF() {\n        var wtf = _global /** TODO #9100 */['wtf'];\n        if (wtf) {\n            trace = wtf['trace'];\n            if (trace) {\n                events = trace['events'];\n                return true;\n            }\n        }\n        return false;\n    }\n    function createScope(signature, flags) {\n        if (flags === void 0) { flags = null; }\n        return events.createScope(signature, flags);\n    }\n    function leave(scope, returnValue) {\n        trace.leaveScope(scope, returnValue);\n        return returnValue;\n    }\n    function startTimeRange(rangeType, action) {\n        return trace.beginTimeRange(rangeType, action);\n    }\n    function endTimeRange(range) {\n        trace.endTimeRange(range);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * True if WTF is enabled.\n     */\n    var wtfEnabled = detectWTF();\n    function noopScope(arg0, arg1) {\n        return null;\n    }\n    /**\n     * Create trace scope.\n     *\n     * Scopes must be strictly nested and are analogous to stack frames, but\n     * do not have to follow the stack frames. Instead it is recommended that they follow logical\n     * nesting. You may want to use\n     * [Event\n     * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n     * as they are defined in WTF.\n     *\n     * Used to mark scope entry. The return value is used to leave the scope.\n     *\n     *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n     *\n     *     someMethod() {\n     *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n     *        // DO SOME WORK HERE\n     *        return wtfLeave(s, 123); // Return value 123\n     *     }\n     *\n     * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n     * negatively impact the performance of your application. For this reason we recommend that\n     * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n     * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n     * exception, will produce incorrect trace, but presence of exception signifies logic error which\n     * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n     * an exception is expected during normal execution while profiling.\n     *\n     * @publicApi\n     */\n    var wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n    /**\n     * Used to mark end of Scope.\n     *\n     * - `scope` to end.\n     * - `returnValue` (optional) to be passed to the WTF.\n     *\n     * Returns the `returnValue for easy chaining.\n     * @publicApi\n     */\n    var wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n    /**\n     * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n     * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n     * enabled.\n     *\n     *     someMethod() {\n     *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n     *        var future = new Future.delay(5).then((_) {\n     *          wtfEndTimeRange(s);\n     *        });\n     *     }\n     * @publicApi\n     */\n    var wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n    /**\n     * Ends a async time range operation.\n     * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n     * enabled.\n     * @publicApi\n     */\n    var wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An injectable service for executing work inside or outside of the Angular zone.\n     *\n     * The most common use of this service is to optimize performance when starting a work consisting of\n     * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n     * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n     * can reenter the Angular zone via {@link #run}.\n     *\n     * <!-- TODO: add/fix links to:\n     *   - docs explaining zones and the use of zones in Angular and change-detection\n     *   - link to runOutsideAngular/run (throughout this file!)\n     *   -->\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```\n     * import {Component, NgZone} from '@angular/core';\n     * import {NgIf} from '@angular/common';\n     *\n     * @Component({\n     *   selector: 'ng-zone-demo',\n     *   template: `\n     *     <h2>Demo: NgZone</h2>\n     *\n     *     <p>Progress: {{progress}}%</p>\n     *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n     *\n     *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n     *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n     *   `,\n     * })\n     * export class NgZoneDemo {\n     *   progress: number = 0;\n     *   label: string;\n     *\n     *   constructor(private _ngZone: NgZone) {}\n     *\n     *   // Loop inside the Angular zone\n     *   // so the UI DOES refresh after each setTimeout cycle\n     *   processWithinAngularZone() {\n     *     this.label = 'inside';\n     *     this.progress = 0;\n     *     this._increaseProgress(() => console.log('Inside Done!'));\n     *   }\n     *\n     *   // Loop outside of the Angular zone\n     *   // so the UI DOES NOT refresh after each setTimeout cycle\n     *   processOutsideOfAngularZone() {\n     *     this.label = 'outside';\n     *     this.progress = 0;\n     *     this._ngZone.runOutsideAngular(() => {\n     *       this._increaseProgress(() => {\n     *         // reenter the Angular zone and display done\n     *         this._ngZone.run(() => { console.log('Outside Done!'); });\n     *       });\n     *     });\n     *   }\n     *\n     *   _increaseProgress(doneCallback: () => void) {\n     *     this.progress += 1;\n     *     console.log(`Current progress: ${this.progress}%`);\n     *\n     *     if (this.progress < 100) {\n     *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n     *     } else {\n     *       doneCallback();\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var NgZone = /** @class */ (function () {\n        function NgZone(_a) {\n            var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            /**\n             * Whether there are no outstanding microtasks or macrotasks.\n             */\n            this.isStable = true;\n            /**\n             * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n             */\n            this.onUnstable = new EventEmitter(false);\n            /**\n             * Notifies when there is no more microtasks enqueued in the current VM Turn.\n             * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n             * For this reason this event can fire multiple times per VM Turn.\n             */\n            this.onMicrotaskEmpty = new EventEmitter(false);\n            /**\n             * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n             * implies we are about to relinquish VM turn.\n             * This event gets called just once.\n             */\n            this.onStable = new EventEmitter(false);\n            /**\n             * Notifies that an error has been delivered.\n             */\n            this.onError = new EventEmitter(false);\n            if (typeof Zone == 'undefined') {\n                throw new Error(\"In this configuration Angular requires Zone.js\");\n            }\n            Zone.assertZonePatched();\n            var self = this;\n            self._nesting = 0;\n            self._outer = self._inner = Zone.current;\n            if (Zone['wtfZoneSpec']) {\n                self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n            }\n            if (Zone['TaskTrackingZoneSpec']) {\n                self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n            }\n            if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n                self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n            }\n            forkInnerZoneWithAngularBehavior(self);\n        }\n        NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n        NgZone.assertInAngularZone = function () {\n            if (!NgZone.isInAngularZone()) {\n                throw new Error('Expected to be in Angular Zone, but it is not!');\n            }\n        };\n        NgZone.assertNotInAngularZone = function () {\n            if (NgZone.isInAngularZone()) {\n                throw new Error('Expected to not be in Angular Zone, but it is!');\n            }\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n         * the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.run = function (fn, applyThis, applyArgs) {\n            return this._inner.run(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n         * returned by the function.\n         *\n         * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n         * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * within the Angular zone.\n         *\n         * If a synchronous error happens it will be rethrown and not reported via `onError`.\n         */\n        NgZone.prototype.runTask = function (fn, applyThis, applyArgs, name) {\n            var zone = this._inner;\n            var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop$1, noop$1);\n            try {\n                return zone.runTask(task, applyThis, applyArgs);\n            }\n            finally {\n                zone.cancelTask(task);\n            }\n        };\n        /**\n         * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n         * rethrown.\n         */\n        NgZone.prototype.runGuarded = function (fn, applyThis, applyArgs) {\n            return this._inner.runGuarded(fn, applyThis, applyArgs);\n        };\n        /**\n         * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n         * the function.\n         *\n         * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n         * work that\n         * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n         *\n         * Any future tasks or microtasks scheduled from within this function will continue executing from\n         * outside of the Angular zone.\n         *\n         * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n         */\n        NgZone.prototype.runOutsideAngular = function (fn) {\n            return this._outer.run(fn);\n        };\n        return NgZone;\n    }());\n    function noop$1() { }\n    var EMPTY_PAYLOAD = {};\n    function checkStable(zone) {\n        if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n            try {\n                zone._nesting++;\n                zone.onMicrotaskEmpty.emit(null);\n            }\n            finally {\n                zone._nesting--;\n                if (!zone.hasPendingMicrotasks) {\n                    try {\n                        zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                    }\n                    finally {\n                        zone.isStable = true;\n                    }\n                }\n            }\n        }\n    }\n    function forkInnerZoneWithAngularBehavior(zone) {\n        zone._inner = zone._inner.fork({\n            name: 'angular',\n            properties: { 'isAngularZone': true },\n            onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n                try {\n                    onEnter(zone);\n                    return delegate.invokeTask(target, task, applyThis, applyArgs);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n                try {\n                    onEnter(zone);\n                    return delegate.invoke(target, callback, applyThis, applyArgs, source);\n                }\n                finally {\n                    onLeave(zone);\n                }\n            },\n            onHasTask: function (delegate, current, target, hasTaskState) {\n                delegate.hasTask(target, hasTaskState);\n                if (current === target) {\n                    // We are only interested in hasTask events which originate from our zone\n                    // (A child hasTask event is not interesting to us)\n                    if (hasTaskState.change == 'microTask') {\n                        zone.hasPendingMicrotasks = hasTaskState.microTask;\n                        checkStable(zone);\n                    }\n                    else if (hasTaskState.change == 'macroTask') {\n                        zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                    }\n                }\n            },\n            onHandleError: function (delegate, current, target, error) {\n                delegate.handleError(target, error);\n                zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n                return false;\n            }\n        });\n    }\n    function onEnter(zone) {\n        zone._nesting++;\n        if (zone.isStable) {\n            zone.isStable = false;\n            zone.onUnstable.emit(null);\n        }\n    }\n    function onLeave(zone) {\n        zone._nesting--;\n        checkStable(zone);\n    }\n    /**\n     * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n     * to framework to perform rendering.\n     */\n    var NoopNgZone = /** @class */ (function () {\n        function NoopNgZone() {\n            this.hasPendingMicrotasks = false;\n            this.hasPendingMacrotasks = false;\n            this.isStable = true;\n            this.onUnstable = new EventEmitter();\n            this.onMicrotaskEmpty = new EventEmitter();\n            this.onStable = new EventEmitter();\n            this.onError = new EventEmitter();\n        }\n        NoopNgZone.prototype.run = function (fn) { return fn(); };\n        NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n        NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n        NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n        return NoopNgZone;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * The Testability service provides testing hooks that can be accessed from\n     * the browser and by services such as Protractor. Each bootstrapped Angular\n     * application on the page will have an instance of Testability.\n     * @publicApi\n     */\n    var Testability = /** @class */ (function () {\n        function Testability(_ngZone) {\n            var _this = this;\n            this._ngZone = _ngZone;\n            this._pendingCount = 0;\n            this._isZoneStable = true;\n            /**\n             * Whether any work was done since the last 'whenStable' callback. This is\n             * useful to detect if this could have potentially destabilized another\n             * component while it is stabilizing.\n             * @internal\n             */\n            this._didWork = false;\n            this._callbacks = [];\n            this.taskTrackingZone = null;\n            this._watchAngularEvents();\n            _ngZone.run(function () {\n                _this.taskTrackingZone =\n                    typeof Zone == 'undefined' ? null : Zone.current.get('TaskTrackingZone');\n            });\n        }\n        Testability.prototype._watchAngularEvents = function () {\n            var _this = this;\n            this._ngZone.onUnstable.subscribe({\n                next: function () {\n                    _this._didWork = true;\n                    _this._isZoneStable = false;\n                }\n            });\n            this._ngZone.runOutsideAngular(function () {\n                _this._ngZone.onStable.subscribe({\n                    next: function () {\n                        NgZone.assertNotInAngularZone();\n                        scheduleMicroTask(function () {\n                            _this._isZoneStable = true;\n                            _this._runCallbacksIfReady();\n                        });\n                    }\n                });\n            });\n        };\n        /**\n         * Increases the number of pending request\n         * @deprecated pending requests are now tracked with zones.\n         */\n        Testability.prototype.increasePendingRequestCount = function () {\n            this._pendingCount += 1;\n            this._didWork = true;\n            return this._pendingCount;\n        };\n        /**\n         * Decreases the number of pending request\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.decreasePendingRequestCount = function () {\n            this._pendingCount -= 1;\n            if (this._pendingCount < 0) {\n                throw new Error('pending async requests below zero');\n            }\n            this._runCallbacksIfReady();\n            return this._pendingCount;\n        };\n        /**\n         * Whether an associated application is stable\n         */\n        Testability.prototype.isStable = function () {\n            return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n        };\n        Testability.prototype._runCallbacksIfReady = function () {\n            var _this = this;\n            if (this.isStable()) {\n                // Schedules the call backs in a new frame so that it is always async.\n                scheduleMicroTask(function () {\n                    while (_this._callbacks.length !== 0) {\n                        var cb = _this._callbacks.pop();\n                        clearTimeout(cb.timeoutId);\n                        cb.doneCb(_this._didWork);\n                    }\n                    _this._didWork = false;\n                });\n            }\n            else {\n                // Still not stable, send updates.\n                var pending_1 = this.getPendingTasks();\n                this._callbacks = this._callbacks.filter(function (cb) {\n                    if (cb.updateCb && cb.updateCb(pending_1)) {\n                        clearTimeout(cb.timeoutId);\n                        return false;\n                    }\n                    return true;\n                });\n                this._didWork = true;\n            }\n        };\n        Testability.prototype.getPendingTasks = function () {\n            if (!this.taskTrackingZone) {\n                return [];\n            }\n            // Copy the tasks data so that we don't leak tasks.\n            return this.taskTrackingZone.macroTasks.map(function (t) {\n                return {\n                    source: t.source,\n                    // From TaskTrackingZone:\n                    // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                    creationLocation: t.creationLocation,\n                    data: t.data\n                };\n            });\n        };\n        Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n            var _this = this;\n            var timeoutId = -1;\n            if (timeout && timeout > 0) {\n                timeoutId = setTimeout(function () {\n                    _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                    cb(_this._didWork, _this.getPendingTasks());\n                }, timeout);\n            }\n            this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n        };\n        /**\n         * Wait for the application to be stable with a timeout. If the timeout is reached before that\n         * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n         *\n         * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n         *    whichever comes first.\n         * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n         *    specified, whenStable() will wait forever.\n         * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n         *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n         *    and no further updates will be issued.\n         */\n        Testability.prototype.whenStable = function (doneCb, timeout, updateCb) {\n            if (updateCb && !this.taskTrackingZone) {\n                throw new Error('Task tracking zone is required when passing an update callback to ' +\n                    'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n            }\n            // These arguments are 'Function' above to keep the public API simple.\n            this.addCallback(doneCb, timeout, updateCb);\n            this._runCallbacksIfReady();\n        };\n        /**\n         * Get the number of pending requests\n         * @deprecated pending requests are now tracked with zones\n         */\n        Testability.prototype.getPendingRequestCount = function () { return this._pendingCount; };\n        /**\n         * Find providers by name\n         * @param using The root element to search from\n         * @param provider The name of binding variable\n         * @param exactMatch Whether using exactMatch\n         */\n        Testability.prototype.findProviders = function (using, provider, exactMatch) {\n            // TODO(juliemr): implement.\n            return [];\n        };\n        Testability = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone])\n        ], Testability);\n        return Testability;\n    }());\n    /**\n     * A global registry of {@link Testability} instances for specific elements.\n     * @publicApi\n     */\n    var TestabilityRegistry = /** @class */ (function () {\n        function TestabilityRegistry() {\n            /** @internal */\n            this._applications = new Map();\n            _testabilityGetter.addToWindow(this);\n        }\n        /**\n         * Registers an application with a testability hook so that it can be tracked\n         * @param token token of application, root element\n         * @param testability Testability hook\n         */\n        TestabilityRegistry.prototype.registerApplication = function (token, testability) {\n            this._applications.set(token, testability);\n        };\n        /**\n         * Unregisters an application.\n         * @param token token of application, root element\n         */\n        TestabilityRegistry.prototype.unregisterApplication = function (token) { this._applications.delete(token); };\n        /**\n         * Unregisters all applications\n         */\n        TestabilityRegistry.prototype.unregisterAllApplications = function () { this._applications.clear(); };\n        /**\n         * Get a testability hook associated with the application\n         * @param elem root element\n         */\n        TestabilityRegistry.prototype.getTestability = function (elem) { return this._applications.get(elem) || null; };\n        /**\n         * Get all registered testabilities\n         */\n        TestabilityRegistry.prototype.getAllTestabilities = function () { return Array.from(this._applications.values()); };\n        /**\n         * Get all registered applications(root elements)\n         */\n        TestabilityRegistry.prototype.getAllRootElements = function () { return Array.from(this._applications.keys()); };\n        /**\n         * Find testability of a node in the Tree\n         * @param elem node\n         * @param findInAncestors whether finding testability in ancestors if testability was not found in\n         * current node\n         */\n        TestabilityRegistry.prototype.findTestabilityInTree = function (elem, findInAncestors) {\n            if (findInAncestors === void 0) { findInAncestors = true; }\n            return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n        };\n        TestabilityRegistry = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [])\n        ], TestabilityRegistry);\n        return TestabilityRegistry;\n    }());\n    var _NoopGetTestability = /** @class */ (function () {\n        function _NoopGetTestability() {\n        }\n        _NoopGetTestability.prototype.addToWindow = function (registry) { };\n        _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n            return null;\n        };\n        return _NoopGetTestability;\n    }());\n    /**\n     * Set the {@link GetTestability} implementation used by the Angular testing framework.\n     * @publicApi\n     */\n    function setTestabilityGetter(getter) {\n        _testabilityGetter = getter;\n    }\n    var _testabilityGetter = new _NoopGetTestability();\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _platform;\n    var compileNgModuleFactory = compileNgModuleFactory__PRE_R3__;\n    function compileNgModuleFactory__PRE_R3__(injector, options, moduleType) {\n        var compilerFactory = injector.get(CompilerFactory);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType);\n    }\n    function compileNgModuleFactory__POST_R3__(injector, options, moduleType) {\n        ngDevMode && assertNgModuleType(moduleType);\n        return Promise.resolve(new NgModuleFactory$1(moduleType));\n    }\n    var ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n    /**\n     * A token for third-party components that can register themselves with NgProbe.\n     *\n     * @publicApi\n     */\n    var NgProbeToken = /** @class */ (function () {\n        function NgProbeToken(name, token) {\n            this.name = name;\n            this.token = token;\n        }\n        return NgProbeToken;\n    }());\n    /**\n     * Creates a platform.\n     * Platforms have to be eagerly created via this function.\n     *\n     * @publicApi\n     */\n    function createPlatform(injector) {\n        if (_platform && !_platform.destroyed &&\n            !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n        }\n        _platform = injector.get(PlatformRef);\n        var inits = injector.get(PLATFORM_INITIALIZER, null);\n        if (inits)\n            inits.forEach(function (init) { return init(); });\n        return _platform;\n    }\n    /**\n     * Creates a factory for a platform\n     *\n     * @publicApi\n     */\n    function createPlatformFactory(parentPlatformFactory, name, providers) {\n        if (providers === void 0) { providers = []; }\n        var desc = \"Platform: \" + name;\n        var marker = new InjectionToken(desc);\n        return function (extraProviders) {\n            if (extraProviders === void 0) { extraProviders = []; }\n            var platform = getPlatform();\n            if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n                if (parentPlatformFactory) {\n                    parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n                }\n                else {\n                    var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                    createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n                }\n            }\n            return assertPlatform(marker);\n        };\n    }\n    /**\n     * Checks that there currently is a platform which contains the given token as a provider.\n     *\n     * @publicApi\n     */\n    function assertPlatform(requiredToken) {\n        var platform = getPlatform();\n        if (!platform) {\n            throw new Error('No platform exists!');\n        }\n        if (!platform.injector.get(requiredToken, null)) {\n            throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n        }\n        return platform;\n    }\n    /**\n     * Destroy the existing platform.\n     *\n     * @publicApi\n     */\n    function destroyPlatform() {\n        if (_platform && !_platform.destroyed) {\n            _platform.destroy();\n        }\n    }\n    /**\n     * Returns the current platform.\n     *\n     * @publicApi\n     */\n    function getPlatform() {\n        return _platform && !_platform.destroyed ? _platform : null;\n    }\n    /**\n     * The Angular platform is the entry point for Angular on a web page. Each page\n     * has exactly one platform, and services (such as reflection) which are common\n     * to every Angular application running on the page are bound in its scope.\n     *\n     * A page's platform is initialized implicitly when a platform is created via a platform factory\n     * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n     *\n     * @publicApi\n     */\n    var PlatformRef = /** @class */ (function () {\n        /** @internal */\n        function PlatformRef(_injector) {\n            this._injector = _injector;\n            this._modules = [];\n            this._destroyListeners = [];\n            this._destroyed = false;\n        }\n        /**\n         * Creates an instance of an `@NgModule` for the given platform\n         * for offline compilation.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * my_module.ts:\n         *\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * main.ts:\n         * import {MyModuleNgFactory} from './my_module.ngfactory';\n         * import {platformBrowser} from '@angular/platform-browser';\n         *\n         * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n         * ```\n         */\n        PlatformRef.prototype.bootstrapModuleFactory = function (moduleFactory, options) {\n            var _this = this;\n            // Note: We need to create the NgZone _before_ we instantiate the module,\n            // as instantiating the module creates some providers eagerly.\n            // So we create a mini parent injector that just contains the new NgZone and\n            // pass that as parent to the NgModuleFactory.\n            var ngZoneOption = options ? options.ngZone : undefined;\n            var ngZone = getNgZone(ngZoneOption);\n            var providers = [{ provide: NgZone, useValue: ngZone }];\n            // Attention: Don't use ApplicationRef.run here,\n            // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n            return ngZone.run(function () {\n                var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n                var moduleRef = moduleFactory.create(ngZoneInjector);\n                var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n                if (!exceptionHandler) {\n                    throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n                }\n                moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n                ngZone.runOutsideAngular(function () { return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n                return _callAndReportToErrorHandler(exceptionHandler, ngZone, function () {\n                    var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                    initStatus.runInitializers();\n                    return initStatus.donePromise.then(function () {\n                        _this._moduleDoBootstrap(moduleRef);\n                        return moduleRef;\n                    });\n                });\n            });\n        };\n        /**\n         * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n         *\n         * @usageNotes\n         * ### Simple Example\n         *\n         * ```typescript\n         * @NgModule({\n         *   imports: [BrowserModule]\n         * })\n         * class MyModule {}\n         *\n         * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n         * ```\n         *\n         */\n        PlatformRef.prototype.bootstrapModule = function (moduleType, compilerOptions) {\n            var _this = this;\n            if (compilerOptions === void 0) { compilerOptions = []; }\n            var options = optionsReducer({}, compilerOptions);\n            return compileNgModuleFactory(this.injector, options, moduleType)\n                .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n        };\n        PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n            var appRef = moduleRef.injector.get(ApplicationRef);\n            if (moduleRef._bootstrapComponents.length > 0) {\n                moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n            }\n            else if (moduleRef.instance.ngDoBootstrap) {\n                moduleRef.instance.ngDoBootstrap(appRef);\n            }\n            else {\n                throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                    \"Please define one of these.\");\n            }\n            this._modules.push(moduleRef);\n        };\n        /**\n         * Register a listener to be called when the platform is disposed.\n         */\n        PlatformRef.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        Object.defineProperty(PlatformRef.prototype, \"injector\", {\n            /**\n             * Retrieve the platform {@link Injector}, which is the parent injector for\n             * every Angular application on the page and provides singleton providers.\n             */\n            get: function () { return this._injector; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Destroy the Angular platform and all Angular applications on the page.\n         */\n        PlatformRef.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error('The platform has already been destroyed!');\n            }\n            this._modules.slice().forEach(function (module) { return module.destroy(); });\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n            this._destroyed = true;\n        };\n        Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n            get: function () { return this._destroyed; },\n            enumerable: true,\n            configurable: true\n        });\n        PlatformRef = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [Injector])\n        ], PlatformRef);\n        return PlatformRef;\n    }());\n    function getNgZone(ngZoneOption) {\n        var ngZone;\n        if (ngZoneOption === 'noop') {\n            ngZone = new NoopNgZone();\n        }\n        else {\n            ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n                new NgZone({ enableLongStackTrace: isDevMode() });\n        }\n        return ngZone;\n    }\n    function _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n        try {\n            var result = callback();\n            if (isPromise(result)) {\n                return result.catch(function (e) {\n                    ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                    // rethrow as the exception handler might not do it\n                    throw e;\n                });\n            }\n            return result;\n        }\n        catch (e) {\n            ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n            // rethrow as the exception handler might not do it\n            throw e;\n        }\n    }\n    function optionsReducer(dst, objs) {\n        if (Array.isArray(objs)) {\n            dst = objs.reduce(optionsReducer, dst);\n        }\n        else {\n            dst = __assign({}, dst, objs);\n        }\n        return dst;\n    }\n    /**\n     * A reference to an Angular application running on a page.\n     *\n     * @publicApi\n     */\n    var ApplicationRef = /** @class */ (function () {\n        /** @internal */\n        function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n            var _this = this;\n            this._zone = _zone;\n            this._console = _console;\n            this._injector = _injector;\n            this._exceptionHandler = _exceptionHandler;\n            this._componentFactoryResolver = _componentFactoryResolver;\n            this._initStatus = _initStatus;\n            this._bootstrapListeners = [];\n            this._views = [];\n            this._runningTick = false;\n            this._enforceNoNewChanges = false;\n            this._stable = true;\n            /**\n             * Get a list of component types registered to this application.\n             * This list is populated even before the component is created.\n             */\n            this.componentTypes = [];\n            /**\n             * Get a list of components registered to this application.\n             */\n            this.components = [];\n            this._enforceNoNewChanges = isDevMode();\n            this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n            var isCurrentlyStable = new rxjs.Observable(function (observer) {\n                _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                    !_this._zone.hasPendingMicrotasks;\n                _this._zone.runOutsideAngular(function () {\n                    observer.next(_this._stable);\n                    observer.complete();\n                });\n            });\n            var isStable = new rxjs.Observable(function (observer) {\n                // Create the subscription to onStable outside the Angular Zone so that\n                // the callback is run outside the Angular Zone.\n                var stableSub;\n                _this._zone.runOutsideAngular(function () {\n                    stableSub = _this._zone.onStable.subscribe(function () {\n                        NgZone.assertNotInAngularZone();\n                        // Check whether there are no pending macro/micro tasks in the next tick\n                        // to allow for NgZone to update the state.\n                        scheduleMicroTask(function () {\n                            if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                                !_this._zone.hasPendingMicrotasks) {\n                                _this._stable = true;\n                                observer.next(true);\n                            }\n                        });\n                    });\n                });\n                var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                    NgZone.assertInAngularZone();\n                    if (_this._stable) {\n                        _this._stable = false;\n                        _this._zone.runOutsideAngular(function () { observer.next(false); });\n                    }\n                });\n                return function () {\n                    stableSub.unsubscribe();\n                    unstableSub.unsubscribe();\n                };\n            });\n            this.isStable =\n                rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n        }\n        ApplicationRef_1 = ApplicationRef;\n        /**\n         * Bootstrap a new component at the root level of the application.\n         *\n         * @usageNotes\n         * ### Bootstrap process\n         *\n         * When bootstrapping a new root component into an application, Angular mounts the\n         * specified application component onto DOM elements identified by the componentType's\n         * selector and kicks off automatic change detection to finish initializing the component.\n         *\n         * Optionally, a component can be mounted onto a DOM element that does not match the\n         * componentType's selector.\n         *\n         * ### Example\n         * {@example core/ts/platform/platform.ts region='longform'}\n         */\n        ApplicationRef.prototype.bootstrap = function (componentOrFactory, rootSelectorOrNode) {\n            var _this = this;\n            if (!this._initStatus.done) {\n                throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n            }\n            var componentFactory;\n            if (componentOrFactory instanceof ComponentFactory) {\n                componentFactory = componentOrFactory;\n            }\n            else {\n                componentFactory =\n                    this._componentFactoryResolver.resolveComponentFactory(componentOrFactory);\n            }\n            this.componentTypes.push(componentFactory.componentType);\n            // Create a factory associated with the current module if it's not bound to some other\n            var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n                null :\n                this._injector.get(NgModuleRef);\n            var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n            var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n            compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n            var testability = compRef.injector.get(Testability, null);\n            if (testability) {\n                compRef.injector.get(TestabilityRegistry)\n                    .registerApplication(compRef.location.nativeElement, testability);\n            }\n            this._loadComponent(compRef);\n            if (isDevMode()) {\n                this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n            }\n            return compRef;\n        };\n        /**\n         * Invoke this method to explicitly process change detection and its side-effects.\n         *\n         * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n         * further changes are detected. If additional changes are picked up during this second cycle,\n         * bindings in the app have side-effects that cannot be resolved in a single change detection\n         * pass.\n         * In this case, Angular throws an error, since an Angular application can only have one change\n         * detection pass during which all change detection must complete.\n         */\n        ApplicationRef.prototype.tick = function () {\n            var _this = this;\n            if (this._runningTick) {\n                throw new Error('ApplicationRef.tick is called recursively');\n            }\n            var scope = ApplicationRef_1._tickScope();\n            try {\n                this._runningTick = true;\n                this._views.forEach(function (view) { return view.detectChanges(); });\n                if (this._enforceNoNewChanges) {\n                    this._views.forEach(function (view) { return view.checkNoChanges(); });\n                }\n            }\n            catch (e) {\n                // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n                this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n            }\n            finally {\n                this._runningTick = false;\n                wtfLeave(scope);\n            }\n        };\n        /**\n         * Attaches a view so that it will be dirty checked.\n         * The view will be automatically detached when it is destroyed.\n         * This will throw if the view is already attached to a ViewContainer.\n         */\n        ApplicationRef.prototype.attachView = function (viewRef) {\n            var view = viewRef;\n            this._views.push(view);\n            view.attachToAppRef(this);\n        };\n        /**\n         * Detaches a view from dirty checking again.\n         */\n        ApplicationRef.prototype.detachView = function (viewRef) {\n            var view = viewRef;\n            remove(this._views, view);\n            view.detachFromAppRef();\n        };\n        ApplicationRef.prototype._loadComponent = function (componentRef) {\n            this.attachView(componentRef.hostView);\n            this.tick();\n            this.components.push(componentRef);\n            // Get the listeners lazily to prevent DI cycles.\n            var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n            listeners.forEach(function (listener) { return listener(componentRef); });\n        };\n        ApplicationRef.prototype._unloadComponent = function (componentRef) {\n            this.detachView(componentRef.hostView);\n            remove(this.components, componentRef);\n        };\n        /** @internal */\n        ApplicationRef.prototype.ngOnDestroy = function () {\n            // TODO(alxhub): Dispose of the NgZone.\n            this._views.slice().forEach(function (view) { return view.destroy(); });\n        };\n        Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n            /**\n             * Returns the number of attached views.\n             */\n            get: function () { return this._views.length; },\n            enumerable: true,\n            configurable: true\n        });\n        var ApplicationRef_1;\n        /** @internal */\n        ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n        ApplicationRef = ApplicationRef_1 = __decorate([\n            Injectable(),\n            __metadata(\"design:paramtypes\", [NgZone, Console, Injector,\n                ErrorHandler,\n                ComponentFactoryResolver,\n                ApplicationInitStatus])\n        ], ApplicationRef);\n        return ApplicationRef;\n    }());\n    function remove(list, el) {\n        var index = list.indexOf(el);\n        if (index > -1) {\n            list.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * An unmodifiable list of items that Angular keeps up to date when the state\n     * of the application changes.\n     *\n     * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n     * provide.\n     *\n     * Implements an iterable interface, therefore it can be used in both ES6\n     * javascript `for (var i of items)` loops as well as in Angular templates with\n     * `*ngFor=\"let i of myList\"`.\n     *\n     * Changes can be observed by subscribing to the changes `Observable`.\n     *\n     * NOTE: In the future this class will implement an `Observable` interface.\n     *\n     * @usageNotes\n     * ### Example\n     * ```typescript\n     * @Component({...})\n     * class Container {\n     *   @ViewChildren(Item) items:QueryList<Item>;\n     * }\n     * ```\n     *\n     * @publicApi\n     */\n    var QueryList$1 = /** @class */ (function () {\n        function QueryList() {\n            this.dirty = true;\n            this._results = [];\n            this.changes = new EventEmitter();\n            this.length = 0;\n        }\n        /**\n         * See\n         * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n         */\n        QueryList.prototype.map = function (fn) { return this._results.map(fn); };\n        /**\n         * See\n         * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n         */\n        QueryList.prototype.filter = function (fn) {\n            return this._results.filter(fn);\n        };\n        /**\n         * See\n         * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n         */\n        QueryList.prototype.find = function (fn) {\n            return this._results.find(fn);\n        };\n        /**\n         * See\n         * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n         */\n        QueryList.prototype.reduce = function (fn, init) {\n            return this._results.reduce(fn, init);\n        };\n        /**\n         * See\n         * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n         */\n        QueryList.prototype.forEach = function (fn) { this._results.forEach(fn); };\n        /**\n         * See\n         * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n         */\n        QueryList.prototype.some = function (fn) {\n            return this._results.some(fn);\n        };\n        QueryList.prototype.toArray = function () { return this._results.slice(); };\n        QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n        QueryList.prototype.toString = function () { return this._results.toString(); };\n        QueryList.prototype.reset = function (res) {\n            this._results = flatten$2(res);\n            this.dirty = false;\n            this.length = this._results.length;\n            this.last = this._results[this.length - 1];\n            this.first = this._results[0];\n        };\n        QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n        /** internal */\n        QueryList.prototype.setDirty = function () { this.dirty = true; };\n        /** internal */\n        QueryList.prototype.destroy = function () {\n            this.changes.complete();\n            this.changes.unsubscribe();\n        };\n        return QueryList;\n    }());\n    function flatten$2(list) {\n        return list.reduce(function (flat, item) {\n            var flatItem = Array.isArray(item) ? flatten$2(item) : item;\n            return flat.concat(flatItem);\n        }, []);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _SEPARATOR = '#';\n    var FACTORY_CLASS_SUFFIX = 'NgFactory';\n    /**\n     * Configuration for SystemJsNgModuleLoader.\n     * token.\n     *\n     * @publicApi\n     */\n    var SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n        function SystemJsNgModuleLoaderConfig() {\n        }\n        return SystemJsNgModuleLoaderConfig;\n    }());\n    var DEFAULT_CONFIG = {\n        factoryPathPrefix: '',\n        factoryPathSuffix: '.ngfactory',\n    };\n    /**\n     * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n     * @publicApi\n     */\n    var SystemJsNgModuleLoader = /** @class */ (function () {\n        function SystemJsNgModuleLoader(_compiler, config) {\n            this._compiler = _compiler;\n            this._config = config || DEFAULT_CONFIG;\n        }\n        SystemJsNgModuleLoader.prototype.load = function (path) {\n            var offlineMode = this._compiler instanceof Compiler;\n            return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n        };\n        SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n            var _this = this;\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            if (exportName === undefined) {\n                exportName = 'default';\n            }\n            return System.import(module)\n                .then(function (module) { return module[exportName]; })\n                .then(function (type) { return checkNotEmpty(type, module, exportName); })\n                .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n        };\n        SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n            var _a = __read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n            var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n            if (exportName === undefined) {\n                exportName = 'default';\n                factoryClassSuffix = '';\n            }\n            return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n                .then(function (module) { return module[exportName + factoryClassSuffix]; })\n                .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n        };\n        SystemJsNgModuleLoader = __decorate([\n            Injectable(),\n            __param(1, Optional()),\n            __metadata(\"design:paramtypes\", [Compiler, SystemJsNgModuleLoaderConfig])\n        ], SystemJsNgModuleLoader);\n        return SystemJsNgModuleLoader;\n    }());\n    function checkNotEmpty(value, modulePath, exportName) {\n        if (!value) {\n            throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n        }\n        return value;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents a container where one or more views can be attached to a component.\n     *\n     * Can contain *host views* (created by instantiating a\n     * component with the `createComponent()` method), and *embedded views*\n     * (created by instantiating a `TemplateRef` with the `createEmbeddedView()` method).\n     *\n     * A view container instance can contain other view containers,\n     * creating a [view hierarchy](guide/glossary#view-tree).\n     *\n     * @see `ComponentRef`\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewContainerRef = /** @class */ (function () {\n        function ViewContainerRef() {\n        }\n        /** @internal */\n        ViewContainerRef.__NG_ELEMENT_ID__ = function () { return SWITCH_VIEW_CONTAINER_REF_FACTORY(ViewContainerRef, ElementRef); };\n        return ViewContainerRef;\n    }());\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = injectViewContainerRef;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__ = noop;\n    var SWITCH_VIEW_CONTAINER_REF_FACTORY = SWITCH_VIEW_CONTAINER_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for Angular Views, provides change detection functionality.\n     * A change-detection tree collects all views that are to be checked for changes.\n     * Use the methods to add and remove views from the tree, initiate change-detection,\n     * and explicitly mark views as _dirty_, meaning that they have changed and need to be rerendered.\n     *\n     * @usageNotes\n     *\n     * The following examples demonstrate how to modify default change-detection behavior\n     * to perform explicit detection when needed.\n     *\n     * ### Use `markForCheck()` with `CheckOnce` strategy\n     *\n     * The following example sets the `OnPush` change-detection strategy for a component\n     * (`CheckOnce`, rather than the default `CheckAlways`), then forces a second check\n     * after an interval. See [live demo](http://plnkr.co/edit/GC512b?p=preview).\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\"\n     * region=\"mark-for-check\"></code-example>\n     *\n     * ### Detach change detector to limit how often check occurs\n     *\n     * The following example defines a component with a large list of read-only data\n     * that is expected to change constantly, many times per second.\n     * To improve performance, we want to check and update the list\n     * less often than the changes actually occur. To do that, we detach\n     * the component's change detector and perform an explicit local check every five seconds.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"detach\"></code-example>\n     *\n     *\n     * ### Reattaching a detached component\n     *\n     * The following example creates a component displaying live data.\n     * The component detaches its change detector from the main change detector tree\n     * when the `live` property is set to false, and reattaches it when the property\n     * becomes true.\n     *\n     * <code-example path=\"core/ts/change_detect/change-detection.ts\" region=\"reattach\"></code-example>\n     *\n     * @publicApi\n     */\n    var ChangeDetectorRef = /** @class */ (function () {\n        function ChangeDetectorRef() {\n        }\n        /** @internal */\n        ChangeDetectorRef.__NG_ELEMENT_ID__ = function () { return SWITCH_CHANGE_DETECTOR_REF_FACTORY(); };\n        return ChangeDetectorRef;\n    }());\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = injectChangeDetectorRef;\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__ = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n    };\n    var SWITCH_CHANGE_DETECTOR_REF_FACTORY = SWITCH_CHANGE_DETECTOR_REF_FACTORY__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Represents an Angular [view](guide/glossary#view),\n     * specifically the [host view](guide/glossary#view-tree) that is defined by a component.\n     * Also serves as the base class\n     * that adds destroy methods for [embedded views](guide/glossary#view-tree).\n     *\n     * @see `EmbeddedViewRef`\n     *\n     * @publicApi\n     */\n    var ViewRef$1 = /** @class */ (function (_super) {\n        __extends(ViewRef, _super);\n        function ViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return ViewRef;\n    }(ChangeDetectorRef));\n    /**\n     * Represents an Angular [view](guide/glossary#view) in a view container.\n     * An [embedded view](guide/glossary#view-tree) can be referenced from a component\n     * other than the hosting component whose template defines it, or it can be defined\n     * independently by a `TemplateRef`.\n     *\n     * Properties of elements in a view can change, but the structure (number and order) of elements in\n     * a view cannot. Change the structure of elements by inserting, moving, or\n     * removing nested views in a view container.\n     *\n     * @see `ViewContainerRef`\n     *\n     * @usageNotes\n     *\n     * The following template breaks down into two separate `TemplateRef` instances,\n     * an outer one and an inner one.\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <li *ngFor=\"let  item of items\">{{item}}</li>\n     * </ul>\n     * ```\n     *\n     * This is the outer `TemplateRef`:\n     *\n     * ```\n     * Count: {{items.length}}\n     * <ul>\n     *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n     * </ul>\n     * ```\n     *\n     * This is the inner `TemplateRef`:\n     *\n     * ```\n     *   <li>{{item}}</li>\n     * ```\n     *\n     * The outer and inner `TemplateRef` instances are assembled into views as follows:\n     *\n     * ```\n     * <!-- ViewRef: outer-0 -->\n     * Count: 2\n     * <ul>\n     *   <ng-template view-container-ref></ng-template>\n     *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n     *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n     * </ul>\n     * <!-- /ViewRef: outer-0 -->\n     * ```\n     * @publicApi\n     */\n    var EmbeddedViewRef = /** @class */ (function (_super) {\n        __extends(EmbeddedViewRef, _super);\n        function EmbeddedViewRef() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        return EmbeddedViewRef;\n    }(ViewRef$1));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EventListener = /** @class */ (function () {\n        function EventListener(name, callback) {\n            this.name = name;\n            this.callback = callback;\n        }\n        return EventListener;\n    }());\n    var DebugNode__PRE_R3__ = /** @class */ (function () {\n        function DebugNode__PRE_R3__(nativeNode, parent, _debugContext) {\n            this.listeners = [];\n            this.parent = null;\n            this._debugContext = _debugContext;\n            this.nativeNode = nativeNode;\n            if (parent && parent instanceof DebugElement__PRE_R3__) {\n                parent.addChild(this);\n            }\n        }\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"injector\", {\n            get: function () { return this._debugContext.injector; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"componentInstance\", {\n            get: function () { return this._debugContext.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"context\", {\n            get: function () { return this._debugContext.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"references\", {\n            get: function () { return this._debugContext.references; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__PRE_R3__.prototype, \"providerTokens\", {\n            get: function () { return this._debugContext.providerTokens; },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__PRE_R3__;\n    }());\n    var DebugElement__PRE_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__PRE_R3__, _super);\n        function DebugElement__PRE_R3__(nativeNode, parent, _debugContext) {\n            var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n            _this.properties = {};\n            _this.attributes = {};\n            _this.classes = {};\n            _this.styles = {};\n            _this.childNodes = [];\n            _this.nativeElement = nativeNode;\n            return _this;\n        }\n        DebugElement__PRE_R3__.prototype.addChild = function (child) {\n            if (child) {\n                this.childNodes.push(child);\n                child.parent = this;\n            }\n        };\n        DebugElement__PRE_R3__.prototype.removeChild = function (child) {\n            var childIndex = this.childNodes.indexOf(child);\n            if (childIndex !== -1) {\n                child.parent = null;\n                this.childNodes.splice(childIndex, 1);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertChildrenAfter = function (child, newChildren) {\n            var _this = this;\n            var _a;\n            var siblingIndex = this.childNodes.indexOf(child);\n            if (siblingIndex !== -1) {\n                (_a = this.childNodes).splice.apply(_a, __spread([siblingIndex + 1, 0], newChildren));\n                newChildren.forEach(function (c) {\n                    if (c.parent) {\n                        c.parent.removeChild(c);\n                    }\n                    child.parent = _this;\n                });\n            }\n        };\n        DebugElement__PRE_R3__.prototype.insertBefore = function (refChild, newChild) {\n            var refIndex = this.childNodes.indexOf(refChild);\n            if (refIndex === -1) {\n                this.addChild(newChild);\n            }\n            else {\n                if (newChild.parent) {\n                    newChild.parent.removeChild(newChild);\n                }\n                newChild.parent = this;\n                this.childNodes.splice(refIndex, 0, newChild);\n            }\n        };\n        DebugElement__PRE_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__PRE_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryElementChildren(this, predicate, matches);\n            return matches;\n        };\n        DebugElement__PRE_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildren(this, predicate, matches);\n            return matches;\n        };\n        Object.defineProperty(DebugElement__PRE_R3__.prototype, \"children\", {\n            get: function () {\n                return this\n                    .childNodes //\n                    .filter(function (node) { return node instanceof DebugElement__PRE_R3__; });\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__PRE_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name == eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__PRE_R3__;\n    }(DebugNode__PRE_R3__));\n    /**\n     * @publicApi\n     */\n    function asNativeElements(debugEls) {\n        return debugEls.map(function (el) { return el.nativeElement; });\n    }\n    function _queryElementChildren(element, predicate, matches) {\n        element.childNodes.forEach(function (node) {\n            if (node instanceof DebugElement__PRE_R3__) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                _queryElementChildren(node, predicate, matches);\n            }\n        });\n    }\n    function _queryNodeChildren(parentNode, predicate, matches) {\n        if (parentNode instanceof DebugElement__PRE_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__PRE_R3__) {\n                    _queryNodeChildren(node, predicate, matches);\n                }\n            });\n        }\n    }\n    var DebugNode__POST_R3__ = /** @class */ (function () {\n        function DebugNode__POST_R3__(nativeNode) {\n            this.nativeNode = nativeNode;\n        }\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"parent\", {\n            get: function () {\n                var parent = this.nativeNode.parentNode;\n                return parent ? new DebugElement__POST_R3__(parent) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"injector\", {\n            get: function () { return getInjector(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"componentInstance\", {\n            get: function () {\n                var nativeElement = this.nativeNode;\n                return nativeElement && getComponent(nativeElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"context\", {\n            get: function () { return getContext(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"listeners\", {\n            get: function () {\n                return getListeners(this.nativeNode).filter(isBrowserEvents);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"references\", {\n            get: function () { return getLocalRefs(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugNode__POST_R3__.prototype, \"providerTokens\", {\n            get: function () { return getInjectionTokens(this.nativeNode); },\n            enumerable: true,\n            configurable: true\n        });\n        return DebugNode__POST_R3__;\n    }());\n    var DebugElement__POST_R3__ = /** @class */ (function (_super) {\n        __extends(DebugElement__POST_R3__, _super);\n        function DebugElement__POST_R3__(nativeNode) {\n            var _this = this;\n            ngDevMode && assertDomNode(nativeNode);\n            _this = _super.call(this, nativeNode) || this;\n            return _this;\n        }\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"nativeElement\", {\n            get: function () {\n                return this.nativeNode.nodeType == Node.ELEMENT_NODE ? this.nativeNode : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"name\", {\n            get: function () { return this.nativeElement.nodeName; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"properties\", {\n            get: function () {\n                var context = loadLContext(this.nativeNode);\n                var lView = context.lView;\n                var tView = lView[TVIEW];\n                var tNode = tView.data[context.nodeIndex];\n                var properties = {};\n                // TODO: https://angular-team.atlassian.net/browse/FW-681\n                // Missing implementation here...\n                return properties;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"attributes\", {\n            get: function () {\n                var attributes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var eAttrs = element.attributes;\n                    for (var i = 0; i < eAttrs.length; i++) {\n                        var attr = eAttrs[i];\n                        attributes[attr.name] = attr.value;\n                    }\n                }\n                return attributes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"classes\", {\n            get: function () {\n                var classes = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (isClassBasedValue(lNode, i)) {\n                                var className = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (typeof value == 'boolean') {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    classes[className] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eClasses = element.classList;\n                        for (var i = 0; i < eClasses.length; i++) {\n                            classes[eClasses[i]] = true;\n                        }\n                    }\n                }\n                return classes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"styles\", {\n            get: function () {\n                var styles = {};\n                var element = this.nativeElement;\n                if (element) {\n                    var lContext = loadLContextFromNode(element);\n                    var lNode = lContext.lView[lContext.nodeIndex];\n                    var stylingContext = getStylingContext(lContext.nodeIndex, lContext.lView);\n                    if (stylingContext) {\n                        for (var i = 9 /* SingleStylesStartPosition */; i < lNode.length; i += 4 /* Size */) {\n                            if (!isClassBasedValue(lNode, i)) {\n                                var styleName = getProp(lNode, i);\n                                var value = getValue(lNode, i);\n                                if (value !== null) {\n                                    // we want to ignore `null` since those don't overwrite the values.\n                                    styles[styleName] = value;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        // Fallback, just read DOM.\n                        var eStyles = element.style;\n                        for (var i = 0; i < eStyles.length; i++) {\n                            var name_1 = eStyles.item(i);\n                            styles[name_1] = eStyles.getPropertyValue(name_1);\n                        }\n                    }\n                }\n                return styles;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"childNodes\", {\n            get: function () {\n                var childNodes = this.nativeNode.childNodes;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugElement__POST_R3__.prototype, \"children\", {\n            get: function () {\n                var nativeElement = this.nativeElement;\n                if (!nativeElement)\n                    return [];\n                var childNodes = nativeElement.children;\n                var children = [];\n                for (var i = 0; i < childNodes.length; i++) {\n                    var element = childNodes[i];\n                    children.push(getDebugNode__POST_R3__(element));\n                }\n                return children;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugElement__POST_R3__.prototype.query = function (predicate) {\n            var results = this.queryAll(predicate);\n            return results[0] || null;\n        };\n        DebugElement__POST_R3__.prototype.queryAll = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, true);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.queryAllNodes = function (predicate) {\n            var matches = [];\n            _queryNodeChildrenR3(this, predicate, matches, false);\n            return matches;\n        };\n        DebugElement__POST_R3__.prototype.triggerEventHandler = function (eventName, eventObj) {\n            this.listeners.forEach(function (listener) {\n                if (listener.name === eventName) {\n                    listener.callback(eventObj);\n                }\n            });\n        };\n        return DebugElement__POST_R3__;\n    }(DebugNode__POST_R3__));\n    function _queryNodeChildrenR3(parentNode, predicate, matches, elementsOnly) {\n        if (parentNode instanceof DebugElement__POST_R3__) {\n            parentNode.childNodes.forEach(function (node) {\n                if (predicate(node)) {\n                    matches.push(node);\n                }\n                if (node instanceof DebugElement__POST_R3__) {\n                    if (elementsOnly ? node.nativeElement : true) {\n                        _queryNodeChildrenR3(node, predicate, matches, elementsOnly);\n                    }\n                }\n            });\n        }\n    }\n    // Need to keep the nodes in a global Map so that multiple angular apps are supported.\n    var _nativeNodeToDebugNode = new Map();\n    function getDebugNode__PRE_R3__(nativeNode) {\n        return _nativeNodeToDebugNode.get(nativeNode) || null;\n    }\n    function getDebugNode__POST_R3__(nativeNode) {\n        if (nativeNode instanceof Node) {\n            return nativeNode.nodeType == Node.ELEMENT_NODE ?\n                new DebugElement__POST_R3__(nativeNode) :\n                new DebugNode__POST_R3__(nativeNode);\n        }\n        return null;\n    }\n    /**\n     * @publicApi\n     */\n    var getDebugNode = getDebugNode__PRE_R3__;\n    function indexDebugNode(node) {\n        _nativeNodeToDebugNode.set(node.nativeNode, node);\n    }\n    function removeDebugNodeFromIndex(node) {\n        _nativeNodeToDebugNode.delete(node.nativeNode);\n    }\n    /**\n     * @publicApi\n     */\n    var DebugNode = DebugNode__PRE_R3__;\n    /**\n     * @publicApi\n     */\n    var DebugElement = DebugElement__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultIterableDifferFactory = /** @class */ (function () {\n        function DefaultIterableDifferFactory() {\n        }\n        DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n        DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n            return new DefaultIterableDiffer(trackByFn);\n        };\n        return DefaultIterableDifferFactory;\n    }());\n    var trackByIdentity = function (index, item) { return item; };\n    /**\n     * @deprecated v4.0.0 - Should not be part of public API.\n     * @publicApi\n     */\n    var DefaultIterableDiffer = /** @class */ (function () {\n        function DefaultIterableDiffer(trackByFn) {\n            this.length = 0;\n            // Keeps track of the used records at any point in time (during & across `_check()` calls)\n            this._linkedRecords = null;\n            // Keeps track of the removed records at any point in time during `_check()` calls.\n            this._unlinkedRecords = null;\n            this._previousItHead = null;\n            this._itHead = null;\n            this._itTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._movesHead = null;\n            this._movesTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n            // Keeps track of records where custom track by is the same, but item identity has changed\n            this._identityChangesHead = null;\n            this._identityChangesTail = null;\n            this._trackByFn = trackByFn || trackByIdentity;\n        }\n        DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._itHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n            var nextIt = this._itHead;\n            var nextRemove = this._removalsHead;\n            var addRemoveOffset = 0;\n            var moveOffsets = null;\n            while (nextIt || nextRemove) {\n                // Figure out which is the next record to process\n                // Order: remove, add, move\n                var record = !nextRemove ||\n                    nextIt &&\n                        nextIt.currentIndex <\n                            getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                    nextIt :\n                    nextRemove;\n                var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n                var currentIndex = record.currentIndex;\n                // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n                if (record === nextRemove) {\n                    addRemoveOffset--;\n                    nextRemove = nextRemove._nextRemoved;\n                }\n                else {\n                    nextIt = nextIt._next;\n                    if (record.previousIndex == null) {\n                        addRemoveOffset++;\n                    }\n                    else {\n                        // INVARIANT:  currentIndex < previousIndex\n                        if (!moveOffsets)\n                            moveOffsets = [];\n                        var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                        var localCurrentIndex = currentIndex - addRemoveOffset;\n                        if (localMovePreviousIndex != localCurrentIndex) {\n                            for (var i = 0; i < localMovePreviousIndex; i++) {\n                                var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                                var index = offset + i;\n                                if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                    moveOffsets[i] = offset + 1;\n                                }\n                            }\n                            var previousIndex = record.previousIndex;\n                            moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                        }\n                    }\n                }\n                if (adjPreviousIndex !== currentIndex) {\n                    fn(record, adjPreviousIndex, currentIndex);\n                }\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n            var record;\n            for (record = this._movesHead; record !== null; record = record._nextMoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n            var record;\n            for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n                fn(record);\n            }\n        };\n        DefaultIterableDiffer.prototype.diff = function (collection) {\n            if (collection == null)\n                collection = [];\n            if (!isListLikeIterable(collection)) {\n                throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n            }\n            if (this.check(collection)) {\n                return this;\n            }\n            else {\n                return null;\n            }\n        };\n        DefaultIterableDiffer.prototype.onDestroy = function () { };\n        DefaultIterableDiffer.prototype.check = function (collection) {\n            var _this = this;\n            this._reset();\n            var record = this._itHead;\n            var mayBeDirty = false;\n            var index;\n            var item;\n            var itemTrackBy;\n            if (Array.isArray(collection)) {\n                this.length = collection.length;\n                for (var index_1 = 0; index_1 < this.length; index_1++) {\n                    item = collection[index_1];\n                    itemTrackBy = this._trackByFn(index_1, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = this._mismatch(record, item, itemTrackBy, index_1);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                }\n            }\n            else {\n                index = 0;\n                iterateListLike(collection, function (item) {\n                    itemTrackBy = _this._trackByFn(index, item);\n                    if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                        record = _this._mismatch(record, item, itemTrackBy, index);\n                        mayBeDirty = true;\n                    }\n                    else {\n                        if (mayBeDirty) {\n                            // TODO(misko): can we limit this to duplicates only?\n                            record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                        }\n                        if (!looseIdentical(record.item, item))\n                            _this._addIdentityChange(record, item);\n                    }\n                    record = record._next;\n                    index++;\n                });\n                this.length = index;\n            }\n            this._truncate(record);\n            this.collection = collection;\n            return this.isDirty;\n        };\n        Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n            /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n             * changes.\n             */\n            get: function () {\n                return this._additionsHead !== null || this._movesHead !== null ||\n                    this._removalsHead !== null || this._identityChangesHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Reset the state of the change objects to show no changes. This means set previousKey to\n         * currentKey, and clear all of the queues (additions, moves, removals).\n         * Set the previousIndexes of moved and added items to their currentIndexes\n         * Reset the list of additions, moves and removals\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                var nextRecord = void 0;\n                for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                    record.previousIndex = record.currentIndex;\n                }\n                this._additionsHead = this._additionsTail = null;\n                for (record = this._movesHead; record !== null; record = nextRecord) {\n                    record.previousIndex = record.currentIndex;\n                    nextRecord = record._nextMoved;\n                }\n                this._movesHead = this._movesTail = null;\n                this._removalsHead = this._removalsTail = null;\n                this._identityChangesHead = this._identityChangesTail = null;\n                // TODO(vicb): when assert gets supported\n                // assert(!this.isDirty);\n            }\n        };\n        /**\n         * This is the core function which handles differences between collections.\n         *\n         * - `record` is the record which we saw at this position last time. If null then it is a new\n         *   item.\n         * - `item` is the current item in the collection\n         * - `index` is the position of the item in the collection\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._mismatch = function (record, item, itemTrackBy, index) {\n            // The previous record after which we will append the current one.\n            var previousRecord;\n            if (record === null) {\n                previousRecord = this._itTail;\n            }\n            else {\n                previousRecord = record._prev;\n                // Remove the record from the collection since we know it does not match the item.\n                this._remove(record);\n            }\n            // Attempt to see if we have seen the item before.\n            record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n            if (record !== null) {\n                // We have seen this before, we need to move it forward in the collection.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._moveAfter(record, previousRecord, index);\n            }\n            else {\n                // Never seen it, check evicted list.\n                record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n                if (record !== null) {\n                    // It is an item which we have evicted earlier: reinsert it back into the list.\n                    // But first we need to check if identity changed, so we can update in view if necessary\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                    this._reinsertAfter(record, previousRecord, index);\n                }\n                else {\n                    // It is a new item: add it.\n                    record =\n                        this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n                }\n            }\n            return record;\n        };\n        /**\n         * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n         *\n         * Use case: `[a, a]` => `[b, a, a]`\n         *\n         * If we did not have this check then the insertion of `b` would:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) leave `a` at index `1` as is. <-- this is wrong!\n         *   3) reinsert `a` at index 2. <-- this is wrong!\n         *\n         * The correct behavior is:\n         *   1) evict first `a`\n         *   2) insert `b` at `0` index.\n         *   3) reinsert `a` at index 1.\n         *   3) move `a` at from `1` to `2`.\n         *\n         *\n         * Double check that we have not evicted a duplicate item. We need to check if the item type may\n         * have already been removed:\n         * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n         * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n         * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n         * at the end.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._verifyReinsertion = function (record, item, itemTrackBy, index) {\n            var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (reinsertRecord !== null) {\n                record = this._reinsertAfter(reinsertRecord, record._prev, index);\n            }\n            else if (record.currentIndex != index) {\n                record.currentIndex = index;\n                this._addToMoves(record, index);\n            }\n            return record;\n        };\n        /**\n         * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n         *\n         * - `record` The first excess {@link IterableChangeRecord_}.\n         *\n         * @internal\n         */\n        DefaultIterableDiffer.prototype._truncate = function (record) {\n            // Anything after that needs to be removed;\n            while (record !== null) {\n                var nextRecord = record._next;\n                this._addToRemovals(this._unlink(record));\n                record = nextRecord;\n            }\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.clear();\n            }\n            if (this._additionsTail !== null) {\n                this._additionsTail._nextAdded = null;\n            }\n            if (this._movesTail !== null) {\n                this._movesTail._nextMoved = null;\n            }\n            if (this._itTail !== null) {\n                this._itTail._next = null;\n            }\n            if (this._removalsTail !== null) {\n                this._removalsTail._nextRemoved = null;\n            }\n            if (this._identityChangesTail !== null) {\n                this._identityChangesTail._nextIdentityChange = null;\n            }\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._reinsertAfter = function (record, prevRecord, index) {\n            if (this._unlinkedRecords !== null) {\n                this._unlinkedRecords.remove(record);\n            }\n            var prev = record._prevRemoved;\n            var next = record._nextRemoved;\n            if (prev === null) {\n                this._removalsHead = next;\n            }\n            else {\n                prev._nextRemoved = next;\n            }\n            if (next === null) {\n                this._removalsTail = prev;\n            }\n            else {\n                next._prevRemoved = prev;\n            }\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._moveAfter = function (record, prevRecord, index) {\n            this._unlink(record);\n            this._insertAfter(record, prevRecord, index);\n            this._addToMoves(record, index);\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addAfter = function (record, prevRecord, index) {\n            this._insertAfter(record, prevRecord, index);\n            if (this._additionsTail === null) {\n                // TODO(vicb):\n                // assert(this._additionsHead === null);\n                this._additionsTail = this._additionsHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_additionsTail._nextAdded === null);\n                // assert(record._nextAdded === null);\n                this._additionsTail = this._additionsTail._nextAdded = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._insertAfter = function (record, prevRecord, index) {\n            // TODO(vicb):\n            // assert(record != prevRecord);\n            // assert(record._next === null);\n            // assert(record._prev === null);\n            var next = prevRecord === null ? this._itHead : prevRecord._next;\n            // TODO(vicb):\n            // assert(next != record);\n            // assert(prevRecord != record);\n            record._next = next;\n            record._prev = prevRecord;\n            if (next === null) {\n                this._itTail = record;\n            }\n            else {\n                next._prev = record;\n            }\n            if (prevRecord === null) {\n                this._itHead = record;\n            }\n            else {\n                prevRecord._next = record;\n            }\n            if (this._linkedRecords === null) {\n                this._linkedRecords = new _DuplicateMap();\n            }\n            this._linkedRecords.put(record);\n            record.currentIndex = index;\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._remove = function (record) {\n            return this._addToRemovals(this._unlink(record));\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._unlink = function (record) {\n            if (this._linkedRecords !== null) {\n                this._linkedRecords.remove(record);\n            }\n            var prev = record._prev;\n            var next = record._next;\n            // TODO(vicb):\n            // assert((record._prev = null) === null);\n            // assert((record._next = null) === null);\n            if (prev === null) {\n                this._itHead = next;\n            }\n            else {\n                prev._next = next;\n            }\n            if (next === null) {\n                this._itTail = prev;\n            }\n            else {\n                next._prev = prev;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addToMoves = function (record, toIndex) {\n            // TODO(vicb):\n            // assert(record._nextMoved === null);\n            if (record.previousIndex === toIndex) {\n                return record;\n            }\n            if (this._movesTail === null) {\n                // TODO(vicb):\n                // assert(_movesHead === null);\n                this._movesTail = this._movesHead = record;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_movesTail._nextMoved === null);\n                this._movesTail = this._movesTail._nextMoved = record;\n            }\n            return record;\n        };\n        DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n            if (this._unlinkedRecords === null) {\n                this._unlinkedRecords = new _DuplicateMap();\n            }\n            this._unlinkedRecords.put(record);\n            record.currentIndex = null;\n            record._nextRemoved = null;\n            if (this._removalsTail === null) {\n                // TODO(vicb):\n                // assert(_removalsHead === null);\n                this._removalsTail = this._removalsHead = record;\n                record._prevRemoved = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(_removalsTail._nextRemoved === null);\n                // assert(record._nextRemoved === null);\n                record._prevRemoved = this._removalsTail;\n                this._removalsTail = this._removalsTail._nextRemoved = record;\n            }\n            return record;\n        };\n        /** @internal */\n        DefaultIterableDiffer.prototype._addIdentityChange = function (record, item) {\n            record.item = item;\n            if (this._identityChangesTail === null) {\n                this._identityChangesTail = this._identityChangesHead = record;\n            }\n            else {\n                this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n            }\n            return record;\n        };\n        return DefaultIterableDiffer;\n    }());\n    var IterableChangeRecord_ = /** @class */ (function () {\n        function IterableChangeRecord_(item, trackById) {\n            this.item = item;\n            this.trackById = trackById;\n            this.currentIndex = null;\n            this.previousIndex = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prevDup = null;\n            /** @internal */\n            this._nextDup = null;\n            /** @internal */\n            this._prevRemoved = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextMoved = null;\n            /** @internal */\n            this._nextIdentityChange = null;\n        }\n        return IterableChangeRecord_;\n    }());\n    // A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\n    var _DuplicateItemRecordList = /** @class */ (function () {\n        function _DuplicateItemRecordList() {\n            /** @internal */\n            this._head = null;\n            /** @internal */\n            this._tail = null;\n        }\n        /**\n         * Append the record to the list of duplicates.\n         *\n         * Note: by design all records in the list of duplicates hold the same value in record.item.\n         */\n        _DuplicateItemRecordList.prototype.add = function (record) {\n            if (this._head === null) {\n                this._head = this._tail = record;\n                record._nextDup = null;\n                record._prevDup = null;\n            }\n            else {\n                // TODO(vicb):\n                // assert(record.item ==  _head.item ||\n                //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n                this._tail._nextDup = record;\n                record._prevDup = this._tail;\n                record._nextDup = null;\n                this._tail = record;\n            }\n        };\n        // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n        // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n        _DuplicateItemRecordList.prototype.get = function (trackById, atOrAfterIndex) {\n            var record;\n            for (record = this._head; record !== null; record = record._nextDup) {\n                if ((atOrAfterIndex === null || atOrAfterIndex <= record.currentIndex) &&\n                    looseIdentical(record.trackById, trackById)) {\n                    return record;\n                }\n            }\n            return null;\n        };\n        /**\n         * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * Returns whether the list of duplicates is empty.\n         */\n        _DuplicateItemRecordList.prototype.remove = function (record) {\n            // TODO(vicb):\n            // assert(() {\n            //  // verify that the record being removed is in the list.\n            //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n            //    if (identical(cursor, record)) return true;\n            //  }\n            //  return false;\n            //});\n            var prev = record._prevDup;\n            var next = record._nextDup;\n            if (prev === null) {\n                this._head = next;\n            }\n            else {\n                prev._nextDup = next;\n            }\n            if (next === null) {\n                this._tail = prev;\n            }\n            else {\n                next._prevDup = prev;\n            }\n            return this._head === null;\n        };\n        return _DuplicateItemRecordList;\n    }());\n    var _DuplicateMap = /** @class */ (function () {\n        function _DuplicateMap() {\n            this.map = new Map();\n        }\n        _DuplicateMap.prototype.put = function (record) {\n            var key = record.trackById;\n            var duplicates = this.map.get(key);\n            if (!duplicates) {\n                duplicates = new _DuplicateItemRecordList();\n                this.map.set(key, duplicates);\n            }\n            duplicates.add(record);\n        };\n        /**\n         * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n         * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n         *\n         * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n         * have any more `a`s needs to return the second `a`.\n         */\n        _DuplicateMap.prototype.get = function (trackById, atOrAfterIndex) {\n            var key = trackById;\n            var recordList = this.map.get(key);\n            return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n        };\n        /**\n         * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n         *\n         * The list of duplicates also is removed from the map if it gets empty.\n         */\n        _DuplicateMap.prototype.remove = function (record) {\n            var key = record.trackById;\n            var recordList = this.map.get(key);\n            // Remove the list of duplicates when it gets empty\n            if (recordList.remove(record)) {\n                this.map.delete(key);\n            }\n            return record;\n        };\n        Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n            get: function () { return this.map.size === 0; },\n            enumerable: true,\n            configurable: true\n        });\n        _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n        return _DuplicateMap;\n    }());\n    function getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n        var previousIndex = item.previousIndex;\n        if (previousIndex === null)\n            return previousIndex;\n        var moveOffset = 0;\n        if (moveOffsets && previousIndex < moveOffsets.length) {\n            moveOffset = moveOffsets[previousIndex];\n        }\n        return previousIndex + addRemoveOffset + moveOffset;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var DefaultKeyValueDifferFactory = /** @class */ (function () {\n        function DefaultKeyValueDifferFactory() {\n        }\n        DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n        DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n        return DefaultKeyValueDifferFactory;\n    }());\n    var DefaultKeyValueDiffer = /** @class */ (function () {\n        function DefaultKeyValueDiffer() {\n            this._records = new Map();\n            this._mapHead = null;\n            // _appendAfter is used in the check loop\n            this._appendAfter = null;\n            this._previousMapHead = null;\n            this._changesHead = null;\n            this._changesTail = null;\n            this._additionsHead = null;\n            this._additionsTail = null;\n            this._removalsHead = null;\n            this._removalsTail = null;\n        }\n        Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n            get: function () {\n                return this._additionsHead !== null || this._changesHead !== null ||\n                    this._removalsHead !== null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n            var record;\n            for (record = this._mapHead; record !== null; record = record._next) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n            var record;\n            for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n            var record;\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n            var record;\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n            var record;\n            for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n                fn(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype.diff = function (map) {\n            if (!map) {\n                map = new Map();\n            }\n            else if (!(map instanceof Map || isJsObject(map))) {\n                throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n            }\n            return this.check(map) ? this : null;\n        };\n        DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n        /**\n         * Check the current state of the map vs the previous.\n         * The algorithm is optimised for when the keys do no change.\n         */\n        DefaultKeyValueDiffer.prototype.check = function (map) {\n            var _this = this;\n            this._reset();\n            var insertBefore = this._mapHead;\n            this._appendAfter = null;\n            this._forEach(map, function (value, key) {\n                if (insertBefore && insertBefore.key === key) {\n                    _this._maybeAddToChanges(insertBefore, value);\n                    _this._appendAfter = insertBefore;\n                    insertBefore = insertBefore._next;\n                }\n                else {\n                    var record = _this._getOrCreateRecordForKey(key, value);\n                    insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n                }\n            });\n            // Items remaining at the end of the list have been deleted\n            if (insertBefore) {\n                if (insertBefore._prev) {\n                    insertBefore._prev._next = null;\n                }\n                this._removalsHead = insertBefore;\n                for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                    if (record === this._mapHead) {\n                        this._mapHead = null;\n                    }\n                    this._records.delete(record.key);\n                    record._nextRemoved = record._next;\n                    record.previousValue = record.currentValue;\n                    record.currentValue = null;\n                    record._prev = null;\n                    record._next = null;\n                }\n            }\n            // Make sure tails have no next records from previous runs\n            if (this._changesTail)\n                this._changesTail._nextChanged = null;\n            if (this._additionsTail)\n                this._additionsTail._nextAdded = null;\n            return this.isDirty;\n        };\n        /**\n         * Inserts a record before `before` or append at the end of the list when `before` is null.\n         *\n         * Notes:\n         * - This method appends at `this._appendAfter`,\n         * - This method updates `this._appendAfter`,\n         * - The return value is the new value for the insertion pointer.\n         */\n        DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = function (before, record) {\n            if (before) {\n                var prev = before._prev;\n                record._next = before;\n                record._prev = prev;\n                before._prev = record;\n                if (prev) {\n                    prev._next = record;\n                }\n                if (before === this._mapHead) {\n                    this._mapHead = record;\n                }\n                this._appendAfter = before;\n                return before;\n            }\n            if (this._appendAfter) {\n                this._appendAfter._next = record;\n                record._prev = this._appendAfter;\n            }\n            else {\n                this._mapHead = record;\n            }\n            this._appendAfter = record;\n            return null;\n        };\n        DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n            if (this._records.has(key)) {\n                var record_1 = this._records.get(key);\n                this._maybeAddToChanges(record_1, value);\n                var prev = record_1._prev;\n                var next = record_1._next;\n                if (prev) {\n                    prev._next = next;\n                }\n                if (next) {\n                    next._prev = prev;\n                }\n                record_1._next = null;\n                record_1._prev = null;\n                return record_1;\n            }\n            var record = new KeyValueChangeRecord_(key);\n            this._records.set(key, record);\n            record.currentValue = value;\n            this._addToAdditions(record);\n            return record;\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._reset = function () {\n            if (this.isDirty) {\n                var record = void 0;\n                // let `_previousMapHead` contain the state of the map before the changes\n                this._previousMapHead = this._mapHead;\n                for (record = this._previousMapHead; record !== null; record = record._next) {\n                    record._nextPrevious = record._next;\n                }\n                // Update `record.previousValue` with the value of the item before the changes\n                // We need to update all changed items (that's those which have been added and changed)\n                for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                    record.previousValue = record.currentValue;\n                }\n                for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                    record.previousValue = record.currentValue;\n                }\n                this._changesHead = this._changesTail = null;\n                this._additionsHead = this._additionsTail = null;\n                this._removalsHead = null;\n            }\n        };\n        // Add the record or a given key to the list of changes only when the value has actually changed\n        DefaultKeyValueDiffer.prototype._maybeAddToChanges = function (record, newValue) {\n            if (!looseIdentical(newValue, record.currentValue)) {\n                record.previousValue = record.currentValue;\n                record.currentValue = newValue;\n                this._addToChanges(record);\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n            if (this._additionsHead === null) {\n                this._additionsHead = this._additionsTail = record;\n            }\n            else {\n                this._additionsTail._nextAdded = record;\n                this._additionsTail = record;\n            }\n        };\n        DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n            if (this._changesHead === null) {\n                this._changesHead = this._changesTail = record;\n            }\n            else {\n                this._changesTail._nextChanged = record;\n                this._changesTail = record;\n            }\n        };\n        /** @internal */\n        DefaultKeyValueDiffer.prototype._forEach = function (obj, fn) {\n            if (obj instanceof Map) {\n                obj.forEach(fn);\n            }\n            else {\n                Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n            }\n        };\n        return DefaultKeyValueDiffer;\n    }());\n    var KeyValueChangeRecord_ = /** @class */ (function () {\n        function KeyValueChangeRecord_(key) {\n            this.key = key;\n            this.previousValue = null;\n            this.currentValue = null;\n            /** @internal */\n            this._nextPrevious = null;\n            /** @internal */\n            this._next = null;\n            /** @internal */\n            this._prev = null;\n            /** @internal */\n            this._nextAdded = null;\n            /** @internal */\n            this._nextRemoved = null;\n            /** @internal */\n            this._nextChanged = null;\n        }\n        return KeyValueChangeRecord_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n     *\n     * @publicApi\n     */\n    var IterableDiffers = /** @class */ (function () {\n        function IterableDiffers(factories) {\n            this.factories = factories;\n        }\n        IterableDiffers.create = function (factories, parent) {\n            if (parent != null) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new IterableDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n         * inherited {@link IterableDiffers} instance with the provided factories and return a new\n         * {@link IterableDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link IterableDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     IterableDiffers.extend([new ImmutableListDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        IterableDiffers.extend = function (factories) {\n            return {\n                provide: IterableDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                        // to\n                        // bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend IterableDiffers without a parent injector');\n                    }\n                    return IterableDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        IterableDiffers.prototype.find = function (iterable) {\n            var factory = this.factories.find(function (f) { return f.supports(iterable); });\n            if (factory != null) {\n                return factory;\n            }\n            else {\n                throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n            }\n        };\n        /** @nocollapse */\n        IterableDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new IterableDiffers([new DefaultIterableDifferFactory()]); }\n        });\n        return IterableDiffers;\n    }());\n    function getTypeNameForDebugging(type) {\n        return type['name'] || typeof type;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n     *\n     * @publicApi\n     */\n    var KeyValueDiffers = /** @class */ (function () {\n        function KeyValueDiffers(factories) {\n            this.factories = factories;\n        }\n        KeyValueDiffers.create = function (factories, parent) {\n            if (parent) {\n                var copied = parent.factories.slice();\n                factories = factories.concat(copied);\n            }\n            return new KeyValueDiffers(factories);\n        };\n        /**\n         * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n         * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n         * {@link KeyValueDiffers} instance.\n         *\n         * @usageNotes\n         * ### Example\n         *\n         * The following example shows how to extend an existing list of factories,\n         * which will only be applied to the injector for this component and its children.\n         * This step is all that's required to make a new {@link KeyValueDiffer} available.\n         *\n         * ```\n         * @Component({\n         *   viewProviders: [\n         *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n         *   ]\n         * })\n         * ```\n         */\n        KeyValueDiffers.extend = function (factories) {\n            return {\n                provide: KeyValueDiffers,\n                useFactory: function (parent) {\n                    if (!parent) {\n                        // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                        // to bootstrap(), which would override default pipes instead of extending them.\n                        throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                    }\n                    return KeyValueDiffers.create(factories, parent);\n                },\n                // Dependency technically isn't optional, but we can provide a better error message this way.\n                deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n            };\n        };\n        KeyValueDiffers.prototype.find = function (kv) {\n            var factory = this.factories.find(function (f) { return f.supports(kv); });\n            if (factory) {\n                return factory;\n            }\n            throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n        };\n        /** @nocollapse */\n        KeyValueDiffers.ngInjectableDef = defineInjectable({\n            providedIn: 'root',\n            factory: function () { return new KeyValueDiffers([new DefaultKeyValueDifferFactory()]); }\n        });\n        return KeyValueDiffers;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Structural diffing for `Object`s and `Map`s.\n     */\n    var keyValDiff = [new DefaultKeyValueDifferFactory()];\n    /**\n     * Structural diffing for `Iterable` types such as `Array`s.\n     */\n    var iterableDiff = [new DefaultIterableDifferFactory()];\n    var defaultIterableDiffers = new IterableDiffers(iterableDiff);\n    var defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var _CORE_PLATFORM_PROVIDERS = [\n        // Set a default platform name for platforms that don't set it explicitly.\n        { provide: PLATFORM_ID, useValue: 'unknown' },\n        { provide: PlatformRef, deps: [Injector] },\n        { provide: TestabilityRegistry, deps: [] },\n        { provide: Console, deps: [] },\n    ];\n    /**\n     * This platform has to be included in any other platform\n     *\n     * @publicApi\n     */\n    var platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Provide this token to set the locale of your application.\n     * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n     * DecimalPipe and PercentPipe) and by ICU expressions.\n     *\n     * See the [i18n guide](guide/i18n#setting-up-locale) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { LOCALE_ID } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var LOCALE_ID = new InjectionToken('LocaleId');\n    /**\n     * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n     * `xlf` or `xlf2`) when you want to translate your application in another language.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * // content of your translation file\n     * const translations = '....';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS = new InjectionToken('Translations');\n    /**\n     * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n     * `xlf` or `xlf2`.\n     *\n     * See the [i18n guide](guide/i18n#merge) for more information.\n     *\n     * @usageNotes\n     * ### Example\n     *\n     * ```typescript\n     * import { TRANSLATIONS_FORMAT } from '@angular/core';\n     * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n     * import { AppModule } from './app/app.module';\n     *\n     * platformBrowserDynamic().bootstrapModule(AppModule, {\n     *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n     * });\n     * ```\n     *\n     * @publicApi\n     */\n    var TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n    (function (MissingTranslationStrategy) {\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n        MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n    })(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function _iterableDiffersFactory() {\n        return defaultIterableDiffers;\n    }\n    function _keyValueDiffersFactory() {\n        return defaultKeyValueDiffers;\n    }\n    function _localeFactory(locale) {\n        return locale || 'en-US';\n    }\n    /**\n     * A built-in [dependency injection token](guide/glossary#di-token)\n     * that is used to configure the root injector for bootstrapping.\n     */\n    var APPLICATION_MODULE_PROVIDERS = [\n        {\n            provide: ApplicationRef,\n            useClass: ApplicationRef,\n            deps: [NgZone, Console, Injector, ErrorHandler, ComponentFactoryResolver, ApplicationInitStatus]\n        },\n        {\n            provide: ApplicationInitStatus,\n            useClass: ApplicationInitStatus,\n            deps: [[new Optional(), APP_INITIALIZER]]\n        },\n        { provide: Compiler, useClass: Compiler, deps: [] },\n        APP_ID_RANDOM_PROVIDER,\n        { provide: IterableDiffers, useFactory: _iterableDiffersFactory, deps: [] },\n        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory, deps: [] },\n        {\n            provide: LOCALE_ID,\n            useFactory: _localeFactory,\n            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n        },\n    ];\n    /**\n     * Configures the root injector for an app with\n     * providers of `@angular/core` dependencies that `ApplicationRef` needs\n     * to bootstrap components.\n     *\n     * Re-exported by `BrowserModule`, which is included automatically in the root\n     * `AppModule` when you create a new app with the CLI `new` command.\n     *\n     * @publicApi\n     */\n    var ApplicationModule = /** @class */ (function () {\n        // Inject ApplicationRef to make it eager...\n        function ApplicationModule(appRef) {\n        }\n        ApplicationModule = __decorate([\n            NgModule({ providers: APPLICATION_MODULE_PROVIDERS }),\n            __metadata(\"design:paramtypes\", [ApplicationRef])\n        ], ApplicationModule);\n        return ApplicationModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var SWITCH_IVY_ENABLED__POST_R3__ = true;\n    var SWITCH_IVY_ENABLED__PRE_R3__ = false;\n    var ivyEnabled = SWITCH_IVY_ENABLED__PRE_R3__;\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // Called before each cycle of a view's check to detect whether this is in the\n    // initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n    // lifecycle methods. Returns true if this check cycle should call lifecycle\n    // methods.\n    function shiftInitState(view, priorInitState, newInitState) {\n        // Only update the InitState if we are currently in the prior state.\n        // For example, only move into CallingInit if we are in BeforeInit. Only\n        // move into CallingContentInit if we are in CallingInit. Normally this will\n        // always be true because of how checkCycle is called in checkAndUpdateView.\n        // However, if checkAndUpdateView is called recursively or if an exception is\n        // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n        // from the beginning. This ensures the state is monotonically increasing,\n        // terminating in the AfterInit state, which ensures the Init methods are called\n        // at least once and only once.\n        var state = view.state;\n        var initState = state & 1792 /* InitState_Mask */;\n        if (initState === priorInitState) {\n            view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n            view.initIndex = -1;\n            return true;\n        }\n        return initState === newInitState;\n    }\n    // Returns true if the lifecycle init method should be called for the node with\n    // the given init index.\n    function shouldCallLifecycleInitHook(view, initState, index) {\n        if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n            view.initIndex = index + 1;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asTextData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asElementData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asProviderData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asPureExpressionData(view, index) {\n        return view.nodes[index];\n    }\n    /**\n     * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n     */\n    function asQueryList(view, index) {\n        return view.nodes[index];\n    }\n    var DebugContext = /** @class */ (function () {\n        function DebugContext() {\n        }\n        return DebugContext;\n    }());\n    /**\n     * This object is used to prevent cycles in the source files and to have a place where\n     * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n     */\n    var Services = {\n        setCurrentNode: undefined,\n        createRootView: undefined,\n        createEmbeddedView: undefined,\n        createComponentView: undefined,\n        createNgModuleRef: undefined,\n        overrideProvider: undefined,\n        overrideComponentView: undefined,\n        clearOverrides: undefined,\n        checkAndUpdateView: undefined,\n        checkNoChangesView: undefined,\n        destroyView: undefined,\n        resolveDep: undefined,\n        createDebugContext: undefined,\n        handleEvent: undefined,\n        updateDirectives: undefined,\n        updateRenderer: undefined,\n        dirtyParentQueries: undefined,\n    };\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (isFirstCheck) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        return viewDebugError(msg, context);\n    }\n    function viewWrappedDebugError(err, context) {\n        if (!(err instanceof Error)) {\n            // errors that are not Error instances don't have a stack,\n            // so it is ok to wrap them into a new Error object...\n            err = new Error(err.toString());\n        }\n        _addDebugContext(err, context);\n        return err;\n    }\n    function viewDebugError(msg, context) {\n        var err = new Error(msg);\n        _addDebugContext(err, context);\n        return err;\n    }\n    function _addDebugContext(err, context) {\n        err[ERROR_DEBUG_CONTEXT] = context;\n        err[ERROR_LOGGER] = context.logError.bind(context);\n    }\n    function isViewDebugError(err) {\n        return !!getDebugContext(err);\n    }\n    function viewDestroyedError(action) {\n        return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var NOOP = function () { };\n    var _tokenKeyCache = new Map();\n    function tokenKey(token) {\n        var key = _tokenKeyCache.get(token);\n        if (!key) {\n            key = stringify(token) + '_' + _tokenKeyCache.size;\n            _tokenKeyCache.set(token, key);\n        }\n        return key;\n    }\n    function unwrapValue$1(view, nodeIdx, bindingIdx, value) {\n        if (WrappedValue.isWrapped(value)) {\n            value = WrappedValue.unwrap(value);\n            var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n            var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n            view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n        }\n        return value;\n    }\n    var UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\n    var EMPTY_RENDERER_TYPE_ID = '$$empty';\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createRendererType2(values) {\n        return {\n            id: UNDEFINED_RENDERER_TYPE_ID,\n            styles: values.styles,\n            encapsulation: values.encapsulation,\n            data: values.data\n        };\n    }\n    var _renderCompCount$1 = 0;\n    function resolveRendererType2(type) {\n        if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n            // first time we see this RendererType2. Initialize it...\n            var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n                type.styles.length || Object.keys(type.data).length);\n            if (isFilled) {\n                type.id = \"c\" + _renderCompCount$1++;\n            }\n            else {\n                type.id = EMPTY_RENDERER_TYPE_ID;\n            }\n        }\n        if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n            type = null;\n        }\n        return type || null;\n    }\n    function checkBinding(view, def, bindingIdx, value) {\n        var oldValues = view.oldValues;\n        if ((view.state & 2 /* FirstCheck */) ||\n            !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n            return true;\n        }\n        return false;\n    }\n    function checkAndUpdateBinding(view, def, bindingIdx, value) {\n        if (checkBinding(view, def, bindingIdx, value)) {\n            view.oldValues[def.bindingIndex + bindingIdx] = value;\n            return true;\n        }\n        return false;\n    }\n    function checkBindingNoChanges(view, def, bindingIdx, value) {\n        var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n            var bindingName = def.bindings[bindingIdx].name;\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function markParentViewsForCheck(view) {\n        var currView = view;\n        while (currView) {\n            if (currView.def.flags & 2 /* OnPush */) {\n                currView.state |= 8 /* ChecksEnabled */;\n            }\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function markParentViewsForCheckProjectedViews(view, endView) {\n        var currView = view;\n        while (currView && currView !== endView) {\n            currView.state |= 64 /* CheckProjectedViews */;\n            currView = currView.viewContainerParent || currView.parent;\n        }\n    }\n    function dispatchEvent(view, nodeIndex, eventName, event) {\n        try {\n            var nodeDef = view.def.nodes[nodeIndex];\n            var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n                asElementData(view, nodeIndex).componentView :\n                view;\n            markParentViewsForCheck(startView);\n            return Services.handleEvent(view, nodeIndex, eventName, event);\n        }\n        catch (e) {\n            // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n            view.root.errorHandler.handleError(e);\n        }\n    }\n    function declaredViewContainer(view) {\n        if (view.parent) {\n            var parentView = view.parent;\n            return asElementData(parentView, view.parentNodeDef.nodeIndex);\n        }\n        return null;\n    }\n    /**\n     * for component views, this is the host element.\n     * for embedded views, this is the index of the parent node\n     * that contains the view container.\n     */\n    function viewParentEl(view) {\n        var parentView = view.parent;\n        if (parentView) {\n            return view.parentNodeDef.parent;\n        }\n        else {\n            return null;\n        }\n    }\n    function renderNode(view, def) {\n        switch (def.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return asElementData(view, def.nodeIndex).renderElement;\n            case 2 /* TypeText */:\n                return asTextData(view, def.nodeIndex).renderText;\n        }\n    }\n    function elementEventFullName(target, name) {\n        return target ? target + \":\" + name : name;\n    }\n    function isComponentView(view) {\n        return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function isEmbeddedView(view) {\n        return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n    }\n    function filterQueryId(queryId) {\n        return 1 << (queryId % 32);\n    }\n    function splitMatchedQueriesDsl(matchedQueriesDsl) {\n        var matchedQueries = {};\n        var matchedQueryIds = 0;\n        var references = {};\n        if (matchedQueriesDsl) {\n            matchedQueriesDsl.forEach(function (_a) {\n                var _b = __read(_a, 2), queryId = _b[0], valueType = _b[1];\n                if (typeof queryId === 'number') {\n                    matchedQueries[queryId] = valueType;\n                    matchedQueryIds |= filterQueryId(queryId);\n                }\n                else {\n                    references[queryId] = valueType;\n                }\n            });\n        }\n        return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n    }\n    function splitDepsDsl(deps, sourceName) {\n        return deps.map(function (value) {\n            var _a;\n            var token;\n            var flags;\n            if (Array.isArray(value)) {\n                _a = __read(value, 2), flags = _a[0], token = _a[1];\n            }\n            else {\n                flags = 0 /* None */;\n                token = value;\n            }\n            if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n                Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n            }\n            return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        });\n    }\n    function getParentRenderElement(view, renderHost, def) {\n        var renderParent = def.renderParent;\n        if (renderParent) {\n            if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n                (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n                (renderParent.element.componentRendererType &&\n                    renderParent.element.componentRendererType.encapsulation ===\n                        exports.ViewEncapsulation.Native)) {\n                // only children of non components, or children of components with native encapsulation should\n                // be attached.\n                return asElementData(view, def.renderParent.nodeIndex).renderElement;\n            }\n        }\n        else {\n            return renderHost;\n        }\n    }\n    var DEFINITION_CACHE = new WeakMap();\n    function resolveDefinition(factory) {\n        var value = DEFINITION_CACHE.get(factory);\n        if (!value) {\n            value = factory(function () { return NOOP; });\n            value.factory = factory;\n            DEFINITION_CACHE.set(factory, value);\n        }\n        return value;\n    }\n    function rootRenderNodes(view) {\n        var renderNodes = [];\n        visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n        return renderNodes;\n    }\n    function visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n        // We need to re-compute the parent node in case the nodes have been moved around manually\n        if (action === 3 /* RemoveChild */) {\n            parentNode = view.renderer.parentNode(renderNode(view, view.def.lastRenderRootNode));\n        }\n        visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n    }\n    function visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n                visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n    }\n    function visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n        var compView = view;\n        while (compView && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        var hostView = compView.parent;\n        var hostElDef = viewParentEl(compView);\n        var startIndex = hostElDef.nodeIndex + 1;\n        var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = hostView.def.nodes[i];\n            if (nodeDef.ngContentIndex === ngContentIndex) {\n                visitRenderNode(hostView, nodeDef, action, parentNode, nextSibling, target);\n            }\n            // jump to next sibling\n            i += nodeDef.childCount;\n        }\n        if (!hostView.parent) {\n            // a root view\n            var projectedNodes = view.root.projectableNodes[ngContentIndex];\n            if (projectedNodes) {\n                for (var i = 0; i < projectedNodes.length; i++) {\n                    execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n                }\n            }\n        }\n    }\n    function visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n        if (nodeDef.flags & 8 /* TypeNgContent */) {\n            visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n        }\n        else {\n            var rn = renderNode(view, nodeDef);\n            if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n                (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n                // Note: we might need to do both actions.\n                if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                    execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n                }\n                if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                    var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                    execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n                }\n            }\n            else {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n                }\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n                visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n            }\n        }\n    }\n    function execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n        var renderer = view.renderer;\n        switch (action) {\n            case 1 /* AppendChild */:\n                renderer.appendChild(parentNode, renderNode);\n                break;\n            case 2 /* InsertBefore */:\n                renderer.insertBefore(parentNode, renderNode, nextSibling);\n                break;\n            case 3 /* RemoveChild */:\n                renderer.removeChild(parentNode, renderNode);\n                break;\n            case 0 /* Collect */:\n                target.push(renderNode);\n                break;\n        }\n    }\n    var NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n    function splitNamespace(name) {\n        if (name[0] === ':') {\n            var match = name.match(NS_PREFIX_RE);\n            return [match[1], match[2]];\n        }\n        return ['', name];\n    }\n    function calcBindingFlags(bindings) {\n        var flags = 0;\n        for (var i = 0; i < bindings.length; i++) {\n            flags |= bindings[i].flags;\n        }\n        return flags;\n    }\n    function interpolate(valueCount, constAndInterp) {\n        var result = '';\n        for (var i = 0; i < valueCount * 2; i = i + 2) {\n            result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n        }\n        return result + constAndInterp[valueCount * 2];\n    }\n    function inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n        switch (valueCount) {\n            case 1:\n                return c0 + _toStringWithNull(a1) + c1;\n            case 2:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n            case 3:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3;\n            case 4:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4;\n            case 5:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n            case 6:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n            case 7:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7;\n            case 8:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n            case 9:\n                return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                    c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                    c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n            default:\n                throw new Error(\"Does not support more than 9 expressions\");\n        }\n    }\n    function _toStringWithNull(v) {\n        return v != null ? v.toString() : '';\n    }\n    var EMPTY_ARRAY$4 = [];\n    var EMPTY_MAP = {};\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n        flags |= 1 /* TypeElement */;\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        var template = templateFactory ? resolveDefinition(templateFactory) : null;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            flags: flags,\n            checkIndex: -1,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: {\n                ns: null,\n                name: null,\n                attrs: null, template: template,\n                componentProvider: null,\n                componentView: null,\n                componentRendererType: null,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n        if (fixedAttrs === void 0) { fixedAttrs = []; }\n        var _a;\n        if (!handleEvent) {\n            handleEvent = NOOP;\n        }\n        var _b = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _b.matchedQueries, references = _b.references, matchedQueryIds = _b.matchedQueryIds;\n        var ns = null;\n        var name = null;\n        if (namespaceAndName) {\n            _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        }\n        bindings = bindings || [];\n        var bindingDefs = new Array(bindings.length);\n        for (var i = 0; i < bindings.length; i++) {\n            var _c = __read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n            var _d = __read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n            var securityContext = undefined;\n            var suffix = undefined;\n            switch (bindingFlags & 15 /* Types */) {\n                case 4 /* TypeElementStyle */:\n                    suffix = suffixOrSecurityContext;\n                    break;\n                case 1 /* TypeElementAttribute */:\n                case 8 /* TypeProperty */:\n                    securityContext = suffixOrSecurityContext;\n                    break;\n            }\n            bindingDefs[i] =\n                { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n        }\n        outputs = outputs || [];\n        var outputDefs = new Array(outputs.length);\n        for (var i = 0; i < outputs.length; i++) {\n            var _e = __read(outputs[i], 2), target = _e[0], eventName = _e[1];\n            outputDefs[i] = {\n                type: 0 /* ElementOutput */,\n                target: target, eventName: eventName,\n                propName: null\n            };\n        }\n        fixedAttrs = fixedAttrs || [];\n        var attrs = fixedAttrs.map(function (_a) {\n            var _b = __read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n            var _c = __read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n            return [ns, name, value];\n        });\n        componentRendererType = resolveRendererType2(componentRendererType);\n        if (componentView) {\n            flags |= 33554432 /* ComponentView */;\n        }\n        flags |= 1 /* TypeElement */;\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n            bindings: bindingDefs,\n            bindingFlags: calcBindingFlags(bindingDefs),\n            outputs: outputDefs,\n            element: {\n                ns: ns,\n                name: name,\n                attrs: attrs,\n                template: null,\n                // will bet set by the view definition\n                componentProvider: null,\n                componentView: componentView || null,\n                componentRendererType: componentRendererType,\n                publicProviders: null,\n                allProviders: null,\n                handleEvent: handleEvent || NOOP,\n            },\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createElement(view, renderHost, def) {\n        var elDef = def.element;\n        var rootSelectorOrNode = view.root.selectorOrNode;\n        var renderer = view.renderer;\n        var el;\n        if (view.parent || !rootSelectorOrNode) {\n            if (elDef.name) {\n                el = renderer.createElement(elDef.name, elDef.ns);\n            }\n            else {\n                el = renderer.createComment('');\n            }\n            var parentEl = getParentRenderElement(view, renderHost, def);\n            if (parentEl) {\n                renderer.appendChild(parentEl, el);\n            }\n        }\n        else {\n            // when using native Shadow DOM, do not clear the root element contents to allow slot projection\n            var preserveContent = (!!elDef.componentRendererType &&\n                elDef.componentRendererType.encapsulation === exports.ViewEncapsulation.ShadowDom);\n            el = renderer.selectRootElement(rootSelectorOrNode, preserveContent);\n        }\n        if (elDef.attrs) {\n            for (var i = 0; i < elDef.attrs.length; i++) {\n                var _a = __read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n                renderer.setAttribute(el, name_2, value, ns);\n            }\n        }\n        return el;\n    }\n    function listenToElementOutputs(view, compView, def, el) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n            var listenTarget = output.target;\n            var listenerView = view;\n            if (output.target === 'component') {\n                listenTarget = null;\n                listenerView = compView;\n            }\n            var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n            view.disposables[def.outputIndex + i] = disposable;\n        }\n    }\n    function renderEventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = def.bindings.length;\n        var changed = false;\n        if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n            changed = true;\n        return changed;\n    }\n    function checkAndUpdateElementDynamic(view, def, values) {\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            if (checkAndUpdateElementValue(view, def, i, values[i]))\n                changed = true;\n        }\n        return changed;\n    }\n    function checkAndUpdateElementValue(view, def, bindingIdx, value) {\n        if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n            return false;\n        }\n        var binding = def.bindings[bindingIdx];\n        var elData = asElementData(view, def.nodeIndex);\n        var renderNode$$1 = elData.renderElement;\n        var name = binding.name;\n        switch (binding.flags & 15 /* Types */) {\n            case 1 /* TypeElementAttribute */:\n                setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n                break;\n            case 2 /* TypeElementClass */:\n                setElementClass(view, renderNode$$1, name, value);\n                break;\n            case 4 /* TypeElementStyle */:\n                setElementStyle(view, binding, renderNode$$1, name, value);\n                break;\n            case 8 /* TypeProperty */:\n                var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                    binding.flags & 32 /* SyntheticHostProperty */) ?\n                    elData.componentView :\n                    view;\n                setElementProperty(bindView, binding, renderNode$$1, name, value);\n                break;\n        }\n        return true;\n    }\n    function setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        renderValue = renderValue != null ? renderValue.toString() : null;\n        var renderer = view.renderer;\n        if (value != null) {\n            renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n        }\n        else {\n            renderer.removeAttribute(renderNode$$1, name, ns);\n        }\n    }\n    function setElementClass(view, renderNode$$1, name, value) {\n        var renderer = view.renderer;\n        if (value) {\n            renderer.addClass(renderNode$$1, name);\n        }\n        else {\n            renderer.removeClass(renderNode$$1, name);\n        }\n    }\n    function setElementStyle(view, binding, renderNode$$1, name, value) {\n        var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n        if (renderValue != null) {\n            renderValue = renderValue.toString();\n            var unit = binding.suffix;\n            if (unit != null) {\n                renderValue = renderValue + unit;\n            }\n        }\n        else {\n            renderValue = null;\n        }\n        var renderer = view.renderer;\n        if (renderValue != null) {\n            renderer.setStyle(renderNode$$1, name, renderValue);\n        }\n        else {\n            renderer.removeStyle(renderNode$$1, name);\n        }\n    }\n    function setElementProperty(view, binding, renderNode$$1, name, value) {\n        var securityContext = binding.securityContext;\n        var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n        view.renderer.setProperty(renderNode$$1, name, renderValue);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var UNDEFINED_VALUE = new Object();\n    var InjectorRefTokenKey = tokenKey(Injector);\n    var INJECTORRefTokenKey = tokenKey(INJECTOR$1);\n    var NgModuleRefTokenKey = tokenKey(NgModuleRef);\n    function moduleProvideDef(flags, token, value, deps) {\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the module definition\n            index: -1,\n            deps: depDefs, flags: flags, token: token, value: value\n        };\n    }\n    function moduleDef(providers) {\n        var providersByKey = {};\n        var modules = [];\n        var isRoot = false;\n        for (var i = 0; i < providers.length; i++) {\n            var provider = providers[i];\n            if (provider.token === APP_ROOT && provider.value === true) {\n                isRoot = true;\n            }\n            if (provider.flags & 1073741824 /* TypeNgModule */) {\n                modules.push(provider.token);\n            }\n            provider.index = i;\n            providersByKey[tokenKey(provider.token)] = provider;\n        }\n        return {\n            // Will be filled later...\n            factory: null,\n            providersByKey: providersByKey,\n            providers: providers,\n            modules: modules,\n            isRoot: isRoot,\n        };\n    }\n    function initNgModule(data) {\n        var def = data._def;\n        var providers = data._providers = new Array(def.providers.length);\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (!(provDef.flags & 4096 /* LazyProvider */)) {\n                // Make sure the provider has not been already initialized outside this loop.\n                if (providers[i] === undefined) {\n                    providers[i] = _createProviderInstance(data, provDef);\n                }\n            }\n        }\n    }\n    function resolveNgModuleDep(data, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var former = setCurrentInjector(data);\n        try {\n            if (depDef.flags & 8 /* Value */) {\n                return depDef.token;\n            }\n            if (depDef.flags & 2 /* Optional */) {\n                notFoundValue = null;\n            }\n            if (depDef.flags & 1 /* SkipSelf */) {\n                return data._parent.get(depDef.token, notFoundValue);\n            }\n            var tokenKey_1 = depDef.tokenKey;\n            switch (tokenKey_1) {\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                case NgModuleRefTokenKey:\n                    return data;\n            }\n            var providerDef = data._def.providersByKey[tokenKey_1];\n            var injectableDef = void 0;\n            if (providerDef) {\n                var providerInstance = data._providers[providerDef.index];\n                if (providerInstance === undefined) {\n                    providerInstance = data._providers[providerDef.index] =\n                        _createProviderInstance(data, providerDef);\n                }\n                return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n            }\n            else if ((injectableDef = getInjectableDef(depDef.token)) && targetsModule(data, injectableDef)) {\n                var index = data._providers.length;\n                data._def.providersByKey[depDef.tokenKey] = {\n                    flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n                    value: injectableDef.factory,\n                    deps: [], index: index,\n                    token: depDef.token,\n                };\n                data._providers[index] = UNDEFINED_VALUE;\n                return (data._providers[index] =\n                    _createProviderInstance(data, data._def.providersByKey[depDef.tokenKey]));\n            }\n            else if (depDef.flags & 4 /* Self */) {\n                return notFoundValue;\n            }\n            return data._parent.get(depDef.token, notFoundValue);\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    function moduleTransitivelyPresent(ngModule, scope) {\n        return ngModule._def.modules.indexOf(scope) > -1;\n    }\n    function targetsModule(ngModule, def) {\n        return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n            def.providedIn === 'root' && ngModule._def.isRoot);\n    }\n    function _createProviderInstance(ngModule, providerDef) {\n        var injectable;\n        switch (providerDef.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 1024 /* TypeFactoryProvider */:\n                injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n                break;\n            case 2048 /* TypeUseExistingProvider */:\n                injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n                break;\n            case 256 /* TypeValueProvider */:\n                injectable = providerDef.value;\n                break;\n        }\n        // The read of `ngOnDestroy` here is slightly expensive as it's megamorphic, so it should be\n        // avoided if possible. The sequence of checks here determines whether ngOnDestroy needs to be\n        // checked. It might not if the `injectable` isn't an object or if NodeFlags.OnDestroy is already\n        // set (ngOnDestroy was detected statically).\n        if (injectable !== UNDEFINED_VALUE && injectable != null && typeof injectable === 'object' &&\n            !(providerDef.flags & 131072 /* OnDestroy */) && typeof injectable.ngOnDestroy === 'function') {\n            providerDef.flags |= 131072 /* OnDestroy */;\n        }\n        return injectable === undefined ? UNDEFINED_VALUE : injectable;\n    }\n    function _createClass(ngModule, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function _callFactory(ngModule, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveNgModuleDep(ngModule, deps[0]));\n            case 2:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n            case 3:\n                return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    function callNgModuleLifecycle(ngModule, lifecycles) {\n        var def = ngModule._def;\n        var destroyed = new Set();\n        for (var i = 0; i < def.providers.length; i++) {\n            var provDef = def.providers[i];\n            if (provDef.flags & 131072 /* OnDestroy */) {\n                var instance = ngModule._providers[i];\n                if (instance && instance !== UNDEFINED_VALUE) {\n                    var onDestroy = instance.ngOnDestroy;\n                    if (typeof onDestroy === 'function' && !destroyed.has(instance)) {\n                        onDestroy.apply(instance);\n                        destroyed.add(instance);\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function attachEmbeddedView(parentView, elementData, viewIndex, view) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex === null || viewIndex === undefined) {\n            viewIndex = embeddedViews.length;\n        }\n        view.viewContainerParent = parentView;\n        addToArray(embeddedViews, viewIndex, view);\n        attachProjectedView(elementData, view);\n        Services.dirtyParentQueries(view);\n        var prevView = viewIndex > 0 ? embeddedViews[viewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n    }\n    function attachProjectedView(vcElementData, view) {\n        var dvcElementData = declaredViewContainer(view);\n        if (!dvcElementData || dvcElementData === vcElementData ||\n            view.state & 16 /* IsProjectedView */) {\n            return;\n        }\n        // Note: For performance reasons, we\n        // - add a view to template._projectedViews only 1x throughout its lifetime,\n        //   and remove it not until the view is destroyed.\n        //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n        //    nested projected views as well, even across component boundaries).\n        // - don't track the insertion order of views in the projected views array\n        //   (hard, as when the views of the same template are inserted different view containers)\n        view.state |= 16 /* IsProjectedView */;\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (!projectedViews) {\n            projectedViews = dvcElementData.template._projectedViews = [];\n        }\n        projectedViews.push(view);\n        // Note: we are changing the NodeDef here as we cannot calculate\n        // the fact whether a template is used for projection during compilation.\n        markNodeAsProjectedTemplate(view.parent.def, view.parentNodeDef);\n    }\n    function markNodeAsProjectedTemplate(viewDef, nodeDef) {\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            return;\n        }\n        viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n        nodeDef.flags |= 4 /* ProjectedTemplate */;\n        var parentNodeDef = nodeDef.parent;\n        while (parentNodeDef) {\n            parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n            parentNodeDef = parentNodeDef.parent;\n        }\n    }\n    function detachEmbeddedView(elementData, viewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        if (viewIndex == null || viewIndex >= embeddedViews.length) {\n            viewIndex = embeddedViews.length - 1;\n        }\n        if (viewIndex < 0) {\n            return null;\n        }\n        var view = embeddedViews[viewIndex];\n        view.viewContainerParent = null;\n        removeFromArray(embeddedViews, viewIndex);\n        // See attachProjectedView for why we don't update projectedViews here.\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        return view;\n    }\n    function detachProjectedView(view) {\n        if (!(view.state & 16 /* IsProjectedView */)) {\n            return;\n        }\n        var dvcElementData = declaredViewContainer(view);\n        if (dvcElementData) {\n            var projectedViews = dvcElementData.template._projectedViews;\n            if (projectedViews) {\n                removeFromArray(projectedViews, projectedViews.indexOf(view));\n                Services.dirtyParentQueries(view);\n            }\n        }\n    }\n    function moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n        var embeddedViews = elementData.viewContainer._embeddedViews;\n        var view = embeddedViews[oldViewIndex];\n        removeFromArray(embeddedViews, oldViewIndex);\n        if (newViewIndex == null) {\n            newViewIndex = embeddedViews.length;\n        }\n        addToArray(embeddedViews, newViewIndex, view);\n        // Note: Don't need to change projectedViews as the order in there\n        // as always invalid...\n        Services.dirtyParentQueries(view);\n        renderDetachView(view);\n        var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n        renderAttachEmbeddedView(elementData, prevView, view);\n        return view;\n    }\n    function renderAttachEmbeddedView(elementData, prevView, view) {\n        var prevRenderNode = prevView ? renderNode(prevView, prevView.def.lastRenderRootNode) :\n            elementData.renderElement;\n        var parentNode = view.renderer.parentNode(prevRenderNode);\n        var nextSibling = view.renderer.nextSibling(prevRenderNode);\n        // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n        // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n        visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n    }\n    function renderDetachView(view) {\n        visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n    }\n    function addToArray(arr, index, value) {\n        // perf: array.push is faster than array.splice!\n        if (index >= arr.length) {\n            arr.push(value);\n        }\n        else {\n            arr.splice(index, 0, value);\n        }\n    }\n    function removeFromArray(arr, index) {\n        // perf: array.pop is faster than array.splice!\n        if (index >= arr.length - 1) {\n            arr.pop();\n        }\n        else {\n            arr.splice(index, 1);\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var EMPTY_CONTEXT = new Object();\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n        return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n    }\n    function getComponentViewDefinitionFactory(componentFactory) {\n        return componentFactory.viewDefFactory;\n    }\n    var ComponentFactory_ = /** @class */ (function (_super) {\n        __extends(ComponentFactory_, _super);\n        function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.selector = selector;\n            _this.componentType = componentType;\n            _this._inputs = _inputs;\n            _this._outputs = _outputs;\n            _this.ngContentSelectors = ngContentSelectors;\n            _this.viewDefFactory = viewDefFactory;\n            return _this;\n        }\n        Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n            get: function () {\n                var inputsArr = [];\n                var inputs = this._inputs;\n                for (var propName in inputs) {\n                    var templateName = inputs[propName];\n                    inputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return inputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n            get: function () {\n                var outputsArr = [];\n                for (var propName in this._outputs) {\n                    var templateName = this._outputs[propName];\n                    outputsArr.push({ propName: propName, templateName: templateName });\n                }\n                return outputsArr;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Creates a new component.\n         */\n        ComponentFactory_.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n            if (!ngModule) {\n                throw new Error('ngModule should be provided');\n            }\n            var viewDef = resolveDefinition(this.viewDefFactory);\n            var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n            var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n            var component = asProviderData(view, componentNodeIndex).instance;\n            if (rootSelectorOrNode) {\n                view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n            }\n            return new ComponentRef_(view, new ViewRef_(view), component);\n        };\n        return ComponentFactory_;\n    }(ComponentFactory));\n    var ComponentRef_ = /** @class */ (function (_super) {\n        __extends(ComponentRef_, _super);\n        function ComponentRef_(_view, _viewRef, _component) {\n            var _this = _super.call(this) || this;\n            _this._view = _view;\n            _this._viewRef = _viewRef;\n            _this._component = _component;\n            _this._elDef = _this._view.def.nodes[0];\n            _this.hostView = _viewRef;\n            _this.changeDetectorRef = _viewRef;\n            _this.instance = _component;\n            return _this;\n        }\n        Object.defineProperty(ComponentRef_.prototype, \"location\", {\n            get: function () {\n                return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n            get: function () { return this._component.constructor; },\n            enumerable: true,\n            configurable: true\n        });\n        ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n        ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n        return ComponentRef_;\n    }(ComponentRef));\n    function createViewContainerData(view, elDef, elData) {\n        return new ViewContainerRef_(view, elDef, elData);\n    }\n    var ViewContainerRef_ = /** @class */ (function () {\n        function ViewContainerRef_(_view, _elDef, _data) {\n            this._view = _view;\n            this._elDef = _elDef;\n            this._data = _data;\n            /**\n             * @internal\n             */\n            this._embeddedViews = [];\n        }\n        Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n            get: function () { return new ElementRef(this._data.renderElement); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n            get: function () { return new Injector_(this._view, this._elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n            /** @deprecated No replacement */\n            get: function () {\n                var view = this._view;\n                var elDef = this._elDef.parent;\n                while (!elDef && view) {\n                    elDef = viewParentEl(view);\n                    view = view.parent;\n                }\n                return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.clear = function () {\n            var len = this._embeddedViews.length;\n            for (var i = len - 1; i >= 0; i--) {\n                var view = detachEmbeddedView(this._data, i);\n                Services.destroyView(view);\n            }\n        };\n        ViewContainerRef_.prototype.get = function (index) {\n            var view = this._embeddedViews[index];\n            if (view) {\n                var ref = new ViewRef_(view);\n                ref.attachToViewContainerRef(this);\n                return ref;\n            }\n            return null;\n        };\n        Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n            get: function () { return this._embeddedViews.length; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n            var viewRef = templateRef.createEmbeddedView(context || {});\n            this.insert(viewRef, index);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n            var contextInjector = injector || this.parentInjector;\n            if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n                ngModuleRef = contextInjector.get(NgModuleRef);\n            }\n            var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n            this.insert(componentRef.hostView, index);\n            return componentRef;\n        };\n        ViewContainerRef_.prototype.insert = function (viewRef, index) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n            }\n            var viewRef_ = viewRef;\n            var viewData = viewRef_._view;\n            attachEmbeddedView(this._view, this._data, index, viewData);\n            viewRef_.attachToViewContainerRef(this);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n            if (viewRef.destroyed) {\n                throw new Error('Cannot move a destroyed View in a ViewContainer!');\n            }\n            var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n            moveEmbeddedView(this._data, previousIndex, currentIndex);\n            return viewRef;\n        };\n        ViewContainerRef_.prototype.indexOf = function (viewRef) {\n            return this._embeddedViews.indexOf(viewRef._view);\n        };\n        ViewContainerRef_.prototype.remove = function (index) {\n            var viewData = detachEmbeddedView(this._data, index);\n            if (viewData) {\n                Services.destroyView(viewData);\n            }\n        };\n        ViewContainerRef_.prototype.detach = function (index) {\n            var view = detachEmbeddedView(this._data, index);\n            return view ? new ViewRef_(view) : null;\n        };\n        return ViewContainerRef_;\n    }());\n    function createChangeDetectorRef(view) {\n        return new ViewRef_(view);\n    }\n    var ViewRef_ = /** @class */ (function () {\n        function ViewRef_(_view) {\n            this._view = _view;\n            this._viewContainerRef = null;\n            this._appRef = null;\n        }\n        Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n            get: function () { return rootRenderNodes(this._view); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"context\", {\n            get: function () { return this._view.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n            get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n            enumerable: true,\n            configurable: true\n        });\n        ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n        ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n        ViewRef_.prototype.detectChanges = function () {\n            var fs = this._view.root.rendererFactory;\n            if (fs.begin) {\n                fs.begin();\n            }\n            try {\n                Services.checkAndUpdateView(this._view);\n            }\n            finally {\n                if (fs.end) {\n                    fs.end();\n                }\n            }\n        };\n        ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n        ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n        ViewRef_.prototype.onDestroy = function (callback) {\n            if (!this._view.disposables) {\n                this._view.disposables = [];\n            }\n            this._view.disposables.push(callback);\n        };\n        ViewRef_.prototype.destroy = function () {\n            if (this._appRef) {\n                this._appRef.detachView(this);\n            }\n            else if (this._viewContainerRef) {\n                this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n            }\n            Services.destroyView(this._view);\n        };\n        ViewRef_.prototype.detachFromAppRef = function () {\n            this._appRef = null;\n            renderDetachView(this._view);\n            Services.dirtyParentQueries(this._view);\n        };\n        ViewRef_.prototype.attachToAppRef = function (appRef) {\n            if (this._viewContainerRef) {\n                throw new Error('This view is already attached to a ViewContainer!');\n            }\n            this._appRef = appRef;\n        };\n        ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n            if (this._appRef) {\n                throw new Error('This view is already attached directly to the ApplicationRef!');\n            }\n            this._viewContainerRef = vcRef;\n        };\n        return ViewRef_;\n    }());\n    function createTemplateData(view, def) {\n        return new TemplateRef_(view, def);\n    }\n    var TemplateRef_ = /** @class */ (function (_super) {\n        __extends(TemplateRef_, _super);\n        function TemplateRef_(_parentView, _def) {\n            var _this = _super.call(this) || this;\n            _this._parentView = _parentView;\n            _this._def = _def;\n            return _this;\n        }\n        TemplateRef_.prototype.createEmbeddedView = function (context) {\n            return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, this._def.element.template, context));\n        };\n        Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n            get: function () {\n                return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return TemplateRef_;\n    }(TemplateRef));\n    function createInjector$1(view, elDef) {\n        return new Injector_(view, elDef);\n    }\n    var Injector_ = /** @class */ (function () {\n        function Injector_(view, elDef) {\n            this.view = view;\n            this.elDef = elDef;\n        }\n        Injector_.prototype.get = function (token, notFoundValue) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n            return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n        };\n        return Injector_;\n    }());\n    function nodeValue(view, index) {\n        var def = view.def.nodes[index];\n        if (def.flags & 1 /* TypeElement */) {\n            var elData = asElementData(view, def.nodeIndex);\n            return def.element.template ? elData.template : elData.renderElement;\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            return asTextData(view, def.nodeIndex).renderText;\n        }\n        else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n            return asProviderData(view, def.nodeIndex).instance;\n        }\n        throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n    }\n    function createRendererV1(view) {\n        return new RendererAdapter(view.renderer);\n    }\n    var RendererAdapter = /** @class */ (function () {\n        function RendererAdapter(delegate) {\n            this.delegate = delegate;\n        }\n        RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n            return this.delegate.selectRootElement(selectorOrNode);\n        };\n        RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            var el = this.delegate.createElement(name, ns);\n            if (parent) {\n                this.delegate.appendChild(parent, el);\n            }\n            return el;\n        };\n        RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n        RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n            var comment = this.delegate.createComment('');\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, comment);\n            }\n            return comment;\n        };\n        RendererAdapter.prototype.createText = function (parentElement, value) {\n            var node = this.delegate.createText(value);\n            if (parentElement) {\n                this.delegate.appendChild(parentElement, node);\n            }\n            return node;\n        };\n        RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n            for (var i = 0; i < nodes.length; i++) {\n                this.delegate.appendChild(parentElement, nodes[i]);\n            }\n        };\n        RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n            var parentElement = this.delegate.parentNode(node);\n            var nextSibling = this.delegate.nextSibling(node);\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n            }\n        };\n        RendererAdapter.prototype.detachView = function (viewRootNodes) {\n            for (var i = 0; i < viewRootNodes.length; i++) {\n                var node = viewRootNodes[i];\n                var parentElement = this.delegate.parentNode(node);\n                this.delegate.removeChild(parentElement, node);\n            }\n        };\n        RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n            for (var i = 0; i < viewAllNodes.length; i++) {\n                this.delegate.destroyNode(viewAllNodes[i]);\n            }\n        };\n        RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n            return this.delegate.listen(renderElement, name, callback);\n        };\n        RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n            return this.delegate.listen(target, name, callback);\n        };\n        RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n            this.delegate.setProperty(renderElement, propertyName, propertyValue);\n        };\n        RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n            var _a = __read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n            if (attributeValue != null) {\n                this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n            }\n            else {\n                this.delegate.removeAttribute(renderElement, name, ns);\n            }\n        };\n        RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n        RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n            if (isAdd) {\n                this.delegate.addClass(renderElement, className);\n            }\n            else {\n                this.delegate.removeClass(renderElement, className);\n            }\n        };\n        RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n            if (styleValue != null) {\n                this.delegate.setStyle(renderElement, styleName, styleValue);\n            }\n            else {\n                this.delegate.removeStyle(renderElement, styleName);\n            }\n        };\n        RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n            renderElement[methodName].apply(renderElement, args);\n        };\n        RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n        RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n        return RendererAdapter;\n    }());\n    function createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n        return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n    }\n    var NgModuleRef_ = /** @class */ (function () {\n        function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n            this._moduleType = _moduleType;\n            this._parent = _parent;\n            this._bootstrapComponents = _bootstrapComponents;\n            this._def = _def;\n            this._destroyListeners = [];\n            this._destroyed = false;\n            this.injector = this;\n            initNgModule(this);\n        }\n        NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n            if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n            if (injectFlags === void 0) { injectFlags = exports.InjectFlags.Default; }\n            var flags = 0 /* None */;\n            if (injectFlags & exports.InjectFlags.SkipSelf) {\n                flags |= 1 /* SkipSelf */;\n            }\n            else if (injectFlags & exports.InjectFlags.Self) {\n                flags |= 4 /* Self */;\n            }\n            return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n        };\n        Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n            get: function () { return this.get(this._moduleType); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n            get: function () { return this.get(ComponentFactoryResolver); },\n            enumerable: true,\n            configurable: true\n        });\n        NgModuleRef_.prototype.destroy = function () {\n            if (this._destroyed) {\n                throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n            }\n            this._destroyed = true;\n            callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n            this._destroyListeners.forEach(function (listener) { return listener(); });\n        };\n        NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n        return NgModuleRef_;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var RendererV1TokenKey = tokenKey(Renderer);\n    var Renderer2TokenKey = tokenKey(Renderer2);\n    var ElementRefTokenKey = tokenKey(ElementRef);\n    var ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\n    var TemplateRefTokenKey = tokenKey(TemplateRef);\n    var ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\n    var InjectorRefTokenKey$1 = tokenKey(Injector);\n    var INJECTORRefTokenKey$1 = tokenKey(INJECTOR$1);\n    function directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n        var bindings = [];\n        if (props) {\n            for (var prop in props) {\n                var _a = __read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n                bindings[bindingIndex] = {\n                    flags: 8 /* TypeProperty */,\n                    name: prop, nonMinifiedName: nonMinifiedName,\n                    ns: null,\n                    securityContext: null,\n                    suffix: null\n                };\n            }\n        }\n        var outputDefs = [];\n        if (outputs) {\n            for (var propName in outputs) {\n                outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n            }\n        }\n        flags |= 16384 /* TypeDirective */;\n        return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n    }\n    function pipeDef(flags, ctor, deps) {\n        flags |= 16 /* TypePipe */;\n        return _def(-1, flags, null, 0, ctor, ctor, deps);\n    }\n    function providerDef(flags, matchedQueries, token, value, deps) {\n        return _def(-1, flags, matchedQueries, 0, token, value, deps);\n    }\n    function _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n        var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n        if (!outputs) {\n            outputs = [];\n        }\n        if (!bindings) {\n            bindings = [];\n        }\n        // Need to resolve forwardRefs as e.g. for `useValue` we\n        // lowered the expression and then stopped evaluating it,\n        // i.e. also didn't unwrap it.\n        value = resolveForwardRef(value);\n        var depDefs = splitDepsDsl(deps, stringify(token));\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n            ngContentIndex: -1, childCount: childCount, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n            element: null,\n            provider: { token: token, value: value, deps: depDefs },\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createProviderInstance(view, def) {\n        return _createProviderInstance$1(view, def);\n    }\n    function createPipeInstance(view, def) {\n        // deps are looked up from component.\n        var compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n        // pipes can see the private services of the component\n        var allowPrivateServices = true;\n        // pipes are always eager and classes!\n        return createClass(compView.parent, viewParentEl(compView), allowPrivateServices, def.provider.value, def.provider.deps);\n    }\n    function createDirectiveInstance(view, def) {\n        // components can see other private services, other directives can't.\n        var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n        // directives are always eager and classes!\n        var instance = createClass(view, def.parent, allowPrivateServices, def.provider.value, def.provider.deps);\n        if (def.outputs.length) {\n            for (var i = 0; i < def.outputs.length; i++) {\n                var output = def.outputs[i];\n                var outputObservable = instance[output.propName];\n                if (isObservable(outputObservable)) {\n                    var subscription = outputObservable.subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n                    view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n                }\n                else {\n                    throw new Error(\"@Output \" + output.propName + \" not initialized in '\" + instance.constructor.name + \"'.\");\n                }\n            }\n        }\n        return instance;\n    }\n    function eventHandlerClosure(view, index, eventName) {\n        return function (event) { return dispatchEvent(view, index, eventName, event); };\n    }\n    function checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        var bindLen = def.bindings.length;\n        if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 0, v0, changes);\n        }\n        if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 1, v1, changes);\n        }\n        if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 2, v2, changes);\n        }\n        if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 3, v3, changes);\n        }\n        if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 4, v4, changes);\n        }\n        if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 5, v5, changes);\n        }\n        if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 6, v6, changes);\n        }\n        if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 7, v7, changes);\n        }\n        if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 8, v8, changes);\n        }\n        if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n            changed = true;\n            changes = updateProp(view, providerData, def, 9, v9, changes);\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function checkAndUpdateDirectiveDynamic(view, def, values) {\n        var providerData = asProviderData(view, def.nodeIndex);\n        var directive = providerData.instance;\n        var changed = false;\n        var changes = undefined;\n        for (var i = 0; i < values.length; i++) {\n            if (checkBinding(view, def, i, values[i])) {\n                changed = true;\n                changes = updateProp(view, providerData, def, i, values[i], changes);\n            }\n        }\n        if (changes) {\n            directive.ngOnChanges(changes);\n        }\n        if ((def.flags & 65536 /* OnInit */) &&\n            shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n            directive.ngOnInit();\n        }\n        if (def.flags & 262144 /* DoCheck */) {\n            directive.ngDoCheck();\n        }\n        return changed;\n    }\n    function _createProviderInstance$1(view, def) {\n        // private services can see other private services\n        var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n        var providerDef = def.provider;\n        switch (def.flags & 201347067 /* Types */) {\n            case 512 /* TypeClassProvider */:\n                return createClass(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 1024 /* TypeFactoryProvider */:\n                return callFactory(view, def.parent, allowPrivateServices, providerDef.value, providerDef.deps);\n            case 2048 /* TypeUseExistingProvider */:\n                return resolveDep(view, def.parent, allowPrivateServices, providerDef.deps[0]);\n            case 256 /* TypeValueProvider */:\n                return providerDef.value;\n        }\n    }\n    function createClass(view, elDef, allowPrivateServices, ctor, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return new ctor();\n            case 1:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = new Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return new (ctor.bind.apply(ctor, __spread([void 0], depValues)))();\n        }\n    }\n    function callFactory(view, elDef, allowPrivateServices, factory, deps) {\n        var len = deps.length;\n        switch (len) {\n            case 0:\n                return factory();\n            case 1:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n            case 2:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n            case 3:\n                return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n            default:\n                var depValues = Array(len);\n                for (var i = 0; i < len; i++) {\n                    depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n                }\n                return factory.apply(void 0, __spread(depValues));\n        }\n    }\n    // This default value is when checking the hierarchy for a token.\n    //\n    // It means both:\n    // - the token is not provided by the current injector,\n    // - only the element injectors should be checked (ie do not check module injectors\n    //\n    //          mod1\n    //         /\n    //       el1   mod2\n    //         \\  /\n    //         el2\n    //\n    // When requesting el2.injector.get(token), we should check in the following order and return the\n    // first found value:\n    // - el2.injector.get(token, default)\n    // - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n    // - mod2.injector.get(token, default)\n    var NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 = {};\n    function resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (depDef.flags & 8 /* Value */) {\n            return depDef.token;\n        }\n        var startView = view;\n        if (depDef.flags & 2 /* Optional */) {\n            notFoundValue = null;\n        }\n        var tokenKey$$1 = depDef.tokenKey;\n        if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n            // directives on the same element as a component should be able to control the change detector\n            // of that component as well.\n            allowPrivateServices = !!(elDef && elDef.element.componentView);\n        }\n        if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n            allowPrivateServices = false;\n            elDef = elDef.parent;\n        }\n        var searchView = view;\n        while (searchView) {\n            if (elDef) {\n                switch (tokenKey$$1) {\n                    case RendererV1TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createRendererV1(compView);\n                    }\n                    case Renderer2TokenKey: {\n                        var compView = findCompView(searchView, elDef, allowPrivateServices);\n                        return compView.renderer;\n                    }\n                    case ElementRefTokenKey:\n                        return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                    case ViewContainerRefTokenKey:\n                        return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                    case TemplateRefTokenKey: {\n                        if (elDef.element.template) {\n                            return asElementData(searchView, elDef.nodeIndex).template;\n                        }\n                        break;\n                    }\n                    case ChangeDetectorRefTokenKey: {\n                        var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                        return createChangeDetectorRef(cdView);\n                    }\n                    case InjectorRefTokenKey$1:\n                    case INJECTORRefTokenKey$1:\n                        return createInjector$1(searchView, elDef);\n                    default:\n                        var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                            elDef.element.publicProviders)[tokenKey$$1];\n                        if (providerDef_1) {\n                            var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                            if (!providerData) {\n                                providerData = { instance: _createProviderInstance$1(searchView, providerDef_1) };\n                                searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                            }\n                            return providerData.instance;\n                        }\n                }\n            }\n            allowPrivateServices = isComponentView(searchView);\n            elDef = viewParentEl(searchView);\n            searchView = searchView.parent;\n            if (depDef.flags & 4 /* Self */) {\n                searchView = null;\n            }\n        }\n        var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1);\n        if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1 ||\n            notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1) {\n            // Return the value from the root element injector when\n            // - it provides it\n            //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            // - the module injector should not be checked\n            //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n            return value;\n        }\n        return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n    }\n    function findCompView(view, elDef, allowPrivateServices) {\n        var compView;\n        if (allowPrivateServices) {\n            compView = asElementData(view, elDef.nodeIndex).componentView;\n        }\n        else {\n            compView = view;\n            while (compView.parent && !isComponentView(compView)) {\n                compView = compView.parent;\n            }\n        }\n        return compView;\n    }\n    function updateProp(view, providerData, def, bindingIdx, value, changes) {\n        if (def.flags & 32768 /* Component */) {\n            var compView = asElementData(view, def.parent.nodeIndex).componentView;\n            if (compView.def.flags & 2 /* OnPush */) {\n                compView.state |= 8 /* ChecksEnabled */;\n            }\n        }\n        var binding = def.bindings[bindingIdx];\n        var propName = binding.name;\n        // Note: This is still safe with Closure Compiler as\n        // the user passed in the property name as an object has to `providerDef`,\n        // so Closure Compiler will have renamed the property correctly already.\n        providerData.instance[propName] = value;\n        if (def.flags & 524288 /* OnChanges */) {\n            changes = changes || {};\n            var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n            var binding_1 = def.bindings[bindingIdx];\n            changes[binding_1.nonMinifiedName] =\n                new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n        }\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return changes;\n    }\n    // This function calls the ngAfterContentCheck, ngAfterContentInit,\n    // ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n    // flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n    // called during a pre-order traversal of the view tree (that is calling the\n    // parent hooks before the child hooks) these events are sent in using a\n    // post-order traversal of the tree (children before parents). This changes the\n    // meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n    // expected nodeIndex which a ngOnInit should be called. When sending\n    // ngAfterContentInit and ngAfterViewInit it is the expected count of\n    // ngAfterContentInit or ngAfterViewInit methods that have been called. This\n    // ensure that despite being called recursively or after picking up after an\n    // exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n    // correct nodes. Consider for example, the following (where E is an element\n    // and D is a directive)\n    //  Tree:       pre-order index  post-order index\n    //    E1        0                6\n    //      E2      1                1\n    //       D3     2                0\n    //      E4      3                5\n    //       E5     4                4\n    //        E6    5                2\n    //        E7    6                3\n    // As can be seen, the post-order index has an unclear relationship to the\n    // pre-order index (postOrderIndex === preOrderIndex - parentCount +\n    // childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n    // are stable (will be the same for the same view regardless of exceptions or\n    // recursion) we just need to count them which will roughly correspond to the\n    // post-order index (it skips elements and directives that do not have\n    // lifecycle hooks).\n    //\n    // For example, if an exception is raised in the E6.onAfterViewInit() the\n    // initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n    // initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n    // not have their ngAfterViewInit() called but, starting with E7, the rest of\n    // the view will begin getting ngAfterViewInit() called until a check and\n    // pass is complete.\n    //\n    // This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n    // indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n    // initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n    // D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n    // When the recursion returns the initIndex will be 7 so E1 is skipped as it\n    // has already been called in the recursively called checkAnUpdateView().\n    function callLifecycleHooksChildrenFirst(view, lifecycles) {\n        if (!(view.def.nodeFlags & lifecycles)) {\n            return;\n        }\n        var nodes = view.def.nodes;\n        var initIndex = 0;\n        for (var i = 0; i < nodes.length; i++) {\n            var nodeDef = nodes[i];\n            var parent_1 = nodeDef.parent;\n            if (!parent_1 && nodeDef.flags & lifecycles) {\n                // matching root node (e.g. a pipe)\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            if ((nodeDef.childFlags & lifecycles) === 0) {\n                // no child matches one of the lifecycles\n                i += nodeDef.childCount;\n            }\n            while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n                i === parent_1.nodeIndex + parent_1.childCount) {\n                // last child of an element\n                if (parent_1.directChildFlags & lifecycles) {\n                    initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n                }\n                parent_1 = parent_1.parent;\n            }\n        }\n    }\n    function callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n        for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & lifecycles) {\n                callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n            }\n            // only visit direct children\n            i += nodeDef.childCount;\n        }\n        return initIndex;\n    }\n    function callProviderLifecycles(view, index, lifecycles, initIndex) {\n        var providerData = asProviderData(view, index);\n        if (!providerData) {\n            return;\n        }\n        var provider = providerData.instance;\n        if (!provider) {\n            return;\n        }\n        Services.setCurrentNode(view, index);\n        if (lifecycles & 1048576 /* AfterContentInit */ &&\n            shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n            provider.ngAfterContentInit();\n        }\n        if (lifecycles & 2097152 /* AfterContentChecked */) {\n            provider.ngAfterContentChecked();\n        }\n        if (lifecycles & 4194304 /* AfterViewInit */ &&\n            shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n            provider.ngAfterViewInit();\n        }\n        if (lifecycles & 8388608 /* AfterViewChecked */) {\n            provider.ngAfterViewChecked();\n        }\n        if (lifecycles & 131072 /* OnDestroy */) {\n            provider.ngOnDestroy();\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function queryDef(flags, id, bindings) {\n        var bindingDefs = [];\n        for (var propName in bindings) {\n            var bindingType = bindings[propName];\n            bindingDefs.push({ propName: propName, bindingType: bindingType });\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            // TODO(vicb): check\n            checkIndex: -1, flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            ngContentIndex: -1,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n            ngContent: null\n        };\n    }\n    function createQuery$1() {\n        return new QueryList$1();\n    }\n    function dirtyParentQueries(view) {\n        var queryIds = view.def.nodeMatchedQueries;\n        while (view.parent && isEmbeddedView(view)) {\n            var tplDef = view.parentNodeDef;\n            view = view.parent;\n            // content queries\n            var end = tplDef.nodeIndex + tplDef.childCount;\n            for (var i = 0; i <= end; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                    (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                    (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                    asQueryList(view, i).setDirty();\n                }\n                if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                    !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                    !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                    // skip elements that don't contain the template element or no query.\n                    i += nodeDef.childCount;\n                }\n            }\n        }\n        // view queries\n        if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n            for (var i = 0; i < view.def.nodes.length; i++) {\n                var nodeDef = view.def.nodes[i];\n                if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                    asQueryList(view, i).setDirty();\n                }\n                // only visit the root nodes\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (!queryList.dirty) {\n            return;\n        }\n        var directiveInstance;\n        var newValues = undefined;\n        if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n            var elementDef = nodeDef.parent.parent;\n            newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, nodeDef.query, []);\n            directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n        }\n        else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n            newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, nodeDef.query, []);\n            directiveInstance = view.component;\n        }\n        queryList.reset(newValues);\n        var bindings = nodeDef.query.bindings;\n        var notify = false;\n        for (var i = 0; i < bindings.length; i++) {\n            var binding = bindings[i];\n            var boundValue = void 0;\n            switch (binding.bindingType) {\n                case 0 /* First */:\n                    boundValue = queryList.first;\n                    break;\n                case 1 /* All */:\n                    boundValue = queryList;\n                    notify = true;\n                    break;\n            }\n            directiveInstance[binding.propName] = boundValue;\n        }\n        if (notify) {\n            queryList.notifyOnChanges();\n        }\n    }\n    function calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n        for (var i = startIndex; i <= endIndex; i++) {\n            var nodeDef = view.def.nodes[i];\n            var valueType = nodeDef.matchedQueries[queryDef.id];\n            if (valueType != null) {\n                values.push(getQueryValue(view, nodeDef, valueType));\n            }\n            if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n                (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                    queryDef.filterId) {\n                var elementData = asElementData(view, i);\n                // check embedded views that were attached at the place of their template,\n                // but process child nodes first if some match the query (see issue #16568)\n                if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                    calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                    i += nodeDef.childCount;\n                }\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    var embeddedViews = elementData.viewContainer._embeddedViews;\n                    for (var k = 0; k < embeddedViews.length; k++) {\n                        var embeddedView = embeddedViews[k];\n                        var dvc = declaredViewContainer(embeddedView);\n                        if (dvc && dvc === elementData) {\n                            calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                        }\n                    }\n                }\n                var projectedViews = elementData.template._projectedViews;\n                if (projectedViews) {\n                    for (var k = 0; k < projectedViews.length; k++) {\n                        var projectedView = projectedViews[k];\n                        calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n                // if no child matches the query, skip the children.\n                i += nodeDef.childCount;\n            }\n        }\n        return values;\n    }\n    function getQueryValue(view, nodeDef, queryValueType) {\n        if (queryValueType != null) {\n            // a match\n            switch (queryValueType) {\n                case 1 /* RenderElement */:\n                    return asElementData(view, nodeDef.nodeIndex).renderElement;\n                case 0 /* ElementRef */:\n                    return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n                case 2 /* TemplateRef */:\n                    return asElementData(view, nodeDef.nodeIndex).template;\n                case 3 /* ViewContainerRef */:\n                    return asElementData(view, nodeDef.nodeIndex).viewContainer;\n                case 4 /* Provider */:\n                    return asProviderData(view, nodeDef.nodeIndex).instance;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function ngContentDef(ngContentIndex, index) {\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: -1,\n            flags: 8 /* TypeNgContent */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0,\n            bindings: [],\n            bindingFlags: 0,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: { index: index }\n        };\n    }\n    function appendNgContent(view, renderHost, def) {\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (!parentEl) {\n            // Nothing to do if there is no parent element.\n            return;\n        }\n        var ngContentIndex = def.ngContent.index;\n        visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function purePipeDef(checkIndex, argCount) {\n        // argCount + 1 to include the pipe as first arg\n        return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n    }\n    function pureArrayDef(checkIndex, argCount) {\n        return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n    }\n    function pureObjectDef(checkIndex, propToIndex) {\n        var keys = Object.keys(propToIndex);\n        var nbKeys = keys.length;\n        var propertyNames = new Array(nbKeys);\n        for (var i = 0; i < nbKeys; i++) {\n            var key = keys[i];\n            var index = propToIndex[key];\n            propertyNames[index] = key;\n        }\n        return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n    }\n    function _pureExpressionDef(flags, checkIndex, propertyNames) {\n        var bindings = new Array(propertyNames.length);\n        for (var i = 0; i < propertyNames.length; i++) {\n            var prop = propertyNames[i];\n            bindings[i] = {\n                flags: 8 /* TypeProperty */,\n                name: prop,\n                ns: null,\n                nonMinifiedName: prop,\n                securityContext: null,\n                suffix: null\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: flags,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {},\n            ngContentIndex: -1,\n            childCount: 0, bindings: bindings,\n            bindingFlags: calcBindingFlags(bindings),\n            outputs: [],\n            element: null,\n            provider: null,\n            text: null,\n            query: null,\n            ngContent: null\n        };\n    }\n    function createPureExpression(view, def) {\n        return { value: undefined };\n    }\n    function checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindings = def.bindings;\n        var changed = false;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = new Array(bindings.length);\n                    if (bindLen > 0)\n                        value[0] = v0;\n                    if (bindLen > 1)\n                        value[1] = v1;\n                    if (bindLen > 2)\n                        value[2] = v2;\n                    if (bindLen > 3)\n                        value[3] = v3;\n                    if (bindLen > 4)\n                        value[4] = v4;\n                    if (bindLen > 5)\n                        value[5] = v5;\n                    if (bindLen > 6)\n                        value[6] = v6;\n                    if (bindLen > 7)\n                        value[7] = v7;\n                    if (bindLen > 8)\n                        value[8] = v8;\n                    if (bindLen > 9)\n                        value[9] = v9;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    if (bindLen > 0)\n                        value[bindings[0].name] = v0;\n                    if (bindLen > 1)\n                        value[bindings[1].name] = v1;\n                    if (bindLen > 2)\n                        value[bindings[2].name] = v2;\n                    if (bindLen > 3)\n                        value[bindings[3].name] = v3;\n                    if (bindLen > 4)\n                        value[bindings[4].name] = v4;\n                    if (bindLen > 5)\n                        value[bindings[5].name] = v5;\n                    if (bindLen > 6)\n                        value[bindings[6].name] = v6;\n                    if (bindLen > 7)\n                        value[bindings[7].name] = v7;\n                    if (bindLen > 8)\n                        value[bindings[8].name] = v8;\n                    if (bindLen > 9)\n                        value[bindings[9].name] = v9;\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = v0;\n                    switch (bindLen) {\n                        case 1:\n                            value = pipe.transform(v0);\n                            break;\n                        case 2:\n                            value = pipe.transform(v1);\n                            break;\n                        case 3:\n                            value = pipe.transform(v1, v2);\n                            break;\n                        case 4:\n                            value = pipe.transform(v1, v2, v3);\n                            break;\n                        case 5:\n                            value = pipe.transform(v1, v2, v3, v4);\n                            break;\n                        case 6:\n                            value = pipe.transform(v1, v2, v3, v4, v5);\n                            break;\n                        case 7:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                            break;\n                        case 8:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                            break;\n                        case 9:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                            break;\n                        case 10:\n                            value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                            break;\n                    }\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n    function checkAndUpdatePureExpressionDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var data = asPureExpressionData(view, def.nodeIndex);\n            var value = void 0;\n            switch (def.flags & 201347067 /* Types */) {\n                case 32 /* TypePureArray */:\n                    value = values;\n                    break;\n                case 64 /* TypePureObject */:\n                    value = {};\n                    for (var i = 0; i < values.length; i++) {\n                        value[bindings[i].name] = values[i];\n                    }\n                    break;\n                case 128 /* TypePurePipe */:\n                    var pipe = values[0];\n                    var params = values.slice(1);\n                    value = pipe.transform.apply(pipe, __spread(params));\n                    break;\n            }\n            data.value = value;\n        }\n        return changed;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function textDef(checkIndex, ngContentIndex, staticText) {\n        var bindings = new Array(staticText.length - 1);\n        for (var i = 1; i < staticText.length; i++) {\n            bindings[i - 1] = {\n                flags: 8 /* TypeProperty */,\n                name: null,\n                ns: null,\n                nonMinifiedName: null,\n                securityContext: null,\n                suffix: staticText[i],\n            };\n        }\n        return {\n            // will bet set by the view definition\n            nodeIndex: -1,\n            parent: null,\n            renderParent: null,\n            bindingIndex: -1,\n            outputIndex: -1,\n            // regular values\n            checkIndex: checkIndex,\n            flags: 2 /* TypeText */,\n            childFlags: 0,\n            directChildFlags: 0,\n            childMatchedQueries: 0,\n            matchedQueries: {},\n            matchedQueryIds: 0,\n            references: {}, ngContentIndex: ngContentIndex,\n            childCount: 0, bindings: bindings,\n            bindingFlags: 8 /* TypeProperty */,\n            outputs: [],\n            element: null,\n            provider: null,\n            text: { prefix: staticText[0] },\n            query: null,\n            ngContent: null,\n        };\n    }\n    function createText(view, renderHost, def) {\n        var renderNode$$1;\n        var renderer = view.renderer;\n        renderNode$$1 = renderer.createText(def.text.prefix);\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, renderNode$$1);\n        }\n        return { renderText: renderNode$$1 };\n    }\n    function checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var changed = false;\n        var bindings = def.bindings;\n        var bindLen = bindings.length;\n        if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n            changed = true;\n        if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n            changed = true;\n        if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n            changed = true;\n        if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n            changed = true;\n        if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n            changed = true;\n        if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n            changed = true;\n        if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n            changed = true;\n        if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n            changed = true;\n        if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n            changed = true;\n        if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n            changed = true;\n        if (changed) {\n            var value = def.text.prefix;\n            if (bindLen > 0)\n                value += _addInterpolationPart(v0, bindings[0]);\n            if (bindLen > 1)\n                value += _addInterpolationPart(v1, bindings[1]);\n            if (bindLen > 2)\n                value += _addInterpolationPart(v2, bindings[2]);\n            if (bindLen > 3)\n                value += _addInterpolationPart(v3, bindings[3]);\n            if (bindLen > 4)\n                value += _addInterpolationPart(v4, bindings[4]);\n            if (bindLen > 5)\n                value += _addInterpolationPart(v5, bindings[5]);\n            if (bindLen > 6)\n                value += _addInterpolationPart(v6, bindings[6]);\n            if (bindLen > 7)\n                value += _addInterpolationPart(v7, bindings[7]);\n            if (bindLen > 8)\n                value += _addInterpolationPart(v8, bindings[8]);\n            if (bindLen > 9)\n                value += _addInterpolationPart(v9, bindings[9]);\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function checkAndUpdateTextDynamic(view, def, values) {\n        var bindings = def.bindings;\n        var changed = false;\n        for (var i = 0; i < values.length; i++) {\n            // Note: We need to loop over all values, so that\n            // the old values are updates as well!\n            if (checkAndUpdateBinding(view, def, i, values[i])) {\n                changed = true;\n            }\n        }\n        if (changed) {\n            var value = '';\n            for (var i = 0; i < values.length; i++) {\n                value = value + _addInterpolationPart(values[i], bindings[i]);\n            }\n            value = def.text.prefix + value;\n            var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n            view.renderer.setValue(renderNode$$1, value);\n        }\n        return changed;\n    }\n    function _addInterpolationPart(value, binding) {\n        var valueStr = value != null ? value.toString() : '';\n        return valueStr + binding.suffix;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function viewDef(flags, nodes, updateDirectives, updateRenderer) {\n        // clone nodes and set auto calculated values\n        var viewBindingCount = 0;\n        var viewDisposableCount = 0;\n        var viewNodeFlags = 0;\n        var viewRootNodeFlags = 0;\n        var viewMatchedQueries = 0;\n        var currentParent = null;\n        var currentRenderParent = null;\n        var currentElementHasPublicProviders = false;\n        var currentElementHasPrivateProviders = false;\n        var lastRenderRootNode = null;\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            node.nodeIndex = i;\n            node.parent = currentParent;\n            node.bindingIndex = viewBindingCount;\n            node.outputIndex = viewDisposableCount;\n            node.renderParent = currentRenderParent;\n            viewNodeFlags |= node.flags;\n            viewMatchedQueries |= node.matchedQueryIds;\n            if (node.element) {\n                var elDef = node.element;\n                elDef.publicProviders =\n                    currentParent ? currentParent.element.publicProviders : Object.create(null);\n                elDef.allProviders = elDef.publicProviders;\n                // Note: We assume that all providers of an element are before any child element!\n                currentElementHasPublicProviders = false;\n                currentElementHasPrivateProviders = false;\n                if (node.element.template) {\n                    viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            validateNode(currentParent, node, nodes.length);\n            viewBindingCount += node.bindings.length;\n            viewDisposableCount += node.outputs.length;\n            if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n                lastRenderRootNode = node;\n            }\n            if (node.flags & 20224 /* CatProvider */) {\n                if (!currentElementHasPublicProviders) {\n                    currentElementHasPublicProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.publicProviders =\n                        Object.create(currentParent.element.publicProviders);\n                    currentParent.element.allProviders = currentParent.element.publicProviders;\n                }\n                var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n                var isComponent = (node.flags & 32768 /* Component */) !== 0;\n                if (!isPrivateService || isComponent) {\n                    currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n                }\n                else {\n                    if (!currentElementHasPrivateProviders) {\n                        currentElementHasPrivateProviders = true;\n                        // Use prototypical inheritance to not get O(n^2) complexity...\n                        currentParent.element.allProviders =\n                            Object.create(currentParent.element.publicProviders);\n                    }\n                    currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n                }\n                if (isComponent) {\n                    currentParent.element.componentProvider = node;\n                }\n            }\n            if (currentParent) {\n                currentParent.childFlags |= node.flags;\n                currentParent.directChildFlags |= node.flags;\n                currentParent.childMatchedQueries |= node.matchedQueryIds;\n                if (node.element && node.element.template) {\n                    currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n                }\n            }\n            else {\n                viewRootNodeFlags |= node.flags;\n            }\n            if (node.childCount > 0) {\n                currentParent = node;\n                if (!isNgContainer(node)) {\n                    currentRenderParent = node;\n                }\n            }\n            else {\n                // When the current node has no children, check if it is the last children of its parent.\n                // When it is, propagate the flags up.\n                // The loop is required because an element could be the last transitive children of several\n                // elements. We loop to either the root or the highest opened element (= with remaining\n                // children)\n                while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                    var newParent = currentParent.parent;\n                    if (newParent) {\n                        newParent.childFlags |= currentParent.childFlags;\n                        newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                    }\n                    currentParent = newParent;\n                    // We also need to update the render parent & account for ng-container\n                    if (currentParent && isNgContainer(currentParent)) {\n                        currentRenderParent = currentParent.renderParent;\n                    }\n                    else {\n                        currentRenderParent = currentParent;\n                    }\n                }\n            }\n        }\n        var handleEvent = function (view, nodeIndex, eventName, event) {\n            return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n        };\n        return {\n            // Will be filled later...\n            factory: null,\n            nodeFlags: viewNodeFlags,\n            rootNodeFlags: viewRootNodeFlags,\n            nodeMatchedQueries: viewMatchedQueries, flags: flags,\n            nodes: nodes,\n            updateDirectives: updateDirectives || NOOP,\n            updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n            bindingCount: viewBindingCount,\n            outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n        };\n    }\n    function isNgContainer(node) {\n        return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n    }\n    function validateNode(parent, node, nodeCount) {\n        var template = node.element && node.element.template;\n        if (template) {\n            if (!template.lastRenderRootNode) {\n                throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n            }\n            if (template.lastRenderRootNode &&\n                template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n                throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            var parentFlags = parent ? parent.flags : 0;\n            if ((parentFlags & 1 /* TypeElement */) === 0) {\n                throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.query) {\n            if (node.flags & 67108864 /* TypeContentQuery */ &&\n                (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n                throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n            }\n            if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n                throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n        if (node.childCount) {\n            var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n            if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n                throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n            }\n        }\n    }\n    function createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n        // embedded views are seen as siblings to the anchor, so we need\n        // to get the parent of the anchor and use it as parentIndex.\n        var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n        initView(view, parent.component, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createRootView(root, def, context) {\n        var view = createView(root, root.renderer, null, null, def);\n        initView(view, context, context);\n        createViewNodes(view);\n        return view;\n    }\n    function createComponentView(parentView, nodeDef, viewDef, hostElement) {\n        var rendererType = nodeDef.element.componentRendererType;\n        var compRenderer;\n        if (!rendererType) {\n            compRenderer = parentView.root.renderer;\n        }\n        else {\n            compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n        }\n        return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n    }\n    function createView(root, renderer, parent, parentNodeDef, def) {\n        var nodes = new Array(def.nodes.length);\n        var disposables = def.outputCount ? new Array(def.outputCount) : null;\n        var view = {\n            def: def,\n            parent: parent,\n            viewContainerParent: null, parentNodeDef: parentNodeDef,\n            context: null,\n            component: null, nodes: nodes,\n            state: 13 /* CatInit */, root: root, renderer: renderer,\n            oldValues: new Array(def.bindingCount), disposables: disposables,\n            initIndex: -1\n        };\n        return view;\n    }\n    function initView(view, component, context) {\n        view.component = component;\n        view.context = context;\n    }\n    function createViewNodes(view) {\n        var renderHost;\n        if (isComponentView(view)) {\n            var hostDef = view.parentNodeDef;\n            renderHost = asElementData(view.parent, hostDef.parent.nodeIndex).renderElement;\n        }\n        var def = view.def;\n        var nodes = view.nodes;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            Services.setCurrentNode(view, i);\n            var nodeData = void 0;\n            switch (nodeDef.flags & 201347067 /* Types */) {\n                case 1 /* TypeElement */:\n                    var el = createElement(view, renderHost, nodeDef);\n                    var componentView = undefined;\n                    if (nodeDef.flags & 33554432 /* ComponentView */) {\n                        var compViewDef = resolveDefinition(nodeDef.element.componentView);\n                        componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                    }\n                    listenToElementOutputs(view, componentView, nodeDef, el);\n                    nodeData = {\n                        renderElement: el,\n                        componentView: componentView,\n                        viewContainer: null,\n                        template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                    };\n                    if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                        nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                    }\n                    break;\n                case 2 /* TypeText */:\n                    nodeData = createText(view, renderHost, nodeDef);\n                    break;\n                case 512 /* TypeClassProvider */:\n                case 1024 /* TypeFactoryProvider */:\n                case 2048 /* TypeUseExistingProvider */:\n                case 256 /* TypeValueProvider */: {\n                    nodeData = nodes[i];\n                    if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                        var instance = createProviderInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    break;\n                }\n                case 16 /* TypePipe */: {\n                    var instance = createPipeInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                    break;\n                }\n                case 16384 /* TypeDirective */: {\n                    nodeData = nodes[i];\n                    if (!nodeData) {\n                        var instance = createDirectiveInstance(view, nodeDef);\n                        nodeData = { instance: instance };\n                    }\n                    if (nodeDef.flags & 32768 /* Component */) {\n                        var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                        initView(compView, nodeData.instance, nodeData.instance);\n                    }\n                    break;\n                }\n                case 32 /* TypePureArray */:\n                case 64 /* TypePureObject */:\n                case 128 /* TypePurePipe */:\n                    nodeData = createPureExpression(view, nodeDef);\n                    break;\n                case 67108864 /* TypeContentQuery */:\n                case 134217728 /* TypeViewQuery */:\n                    nodeData = createQuery$1();\n                    break;\n                case 8 /* TypeNgContent */:\n                    appendNgContent(view, renderHost, nodeDef);\n                    // no runtime data needed for NgContent...\n                    nodeData = undefined;\n                    break;\n            }\n            nodes[i] = nodeData;\n        }\n        // Create the ViewData.nodes of component views after we created everything else,\n        // so that e.g. ng-content works\n        execComponentViewsAction(view, ViewAction.CreateViewNodes);\n        // fill static content and view queries\n        execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n    }\n    function checkNoChangesView(view) {\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 1 /* CheckNoChanges */);\n        execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n        Services.updateRenderer(view, 1 /* CheckNoChanges */);\n        execComponentViewsAction(view, ViewAction.CheckNoChanges);\n        // Note: We don't check queries for changes as we didn't do this in v2.x.\n        // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    }\n    function checkAndUpdateView(view) {\n        if (view.state & 1 /* BeforeFirstCheck */) {\n            view.state &= ~1 /* BeforeFirstCheck */;\n            view.state |= 2 /* FirstCheck */;\n        }\n        else {\n            view.state &= ~2 /* FirstCheck */;\n        }\n        shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n        markProjectedViewsForCheck(view);\n        Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n        execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n        callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n        Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n        execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n        execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n        callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n        callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n        if (view.def.flags & 2 /* OnPush */) {\n            view.state &= ~8 /* ChecksEnabled */;\n        }\n        view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n        shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n    }\n    function checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n        }\n    }\n    function markProjectedViewsForCheck(view) {\n        var def = view.def;\n        if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n                var projectedViews = asElementData(view, i).template._projectedViews;\n                if (projectedViews) {\n                    for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                        var projectedView = projectedViews[i_1];\n                        projectedView.state |= 32 /* CheckProjectedView */;\n                        markParentViewsForCheckProjectedViews(projectedView, view);\n                    }\n                }\n            }\n            else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkAndUpdateNodeDynamic(view, nodeDef, values) {\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                return checkAndUpdateElementDynamic(view, nodeDef, values);\n            case 2 /* TypeText */:\n                return checkAndUpdateTextDynamic(view, nodeDef, values);\n            case 16384 /* TypeDirective */:\n                return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n            default:\n                throw 'unreachable';\n        }\n    }\n    function checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        if (argStyle === 0 /* Inline */) {\n            checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        }\n        else {\n            checkNoChangesNodeDynamic(view, nodeDef, v0);\n        }\n        // Returning false is ok here as we would have thrown in case of a change.\n        return false;\n    }\n    function checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var bindLen = nodeDef.bindings.length;\n        if (bindLen > 0)\n            checkBindingNoChanges(view, nodeDef, 0, v0);\n        if (bindLen > 1)\n            checkBindingNoChanges(view, nodeDef, 1, v1);\n        if (bindLen > 2)\n            checkBindingNoChanges(view, nodeDef, 2, v2);\n        if (bindLen > 3)\n            checkBindingNoChanges(view, nodeDef, 3, v3);\n        if (bindLen > 4)\n            checkBindingNoChanges(view, nodeDef, 4, v4);\n        if (bindLen > 5)\n            checkBindingNoChanges(view, nodeDef, 5, v5);\n        if (bindLen > 6)\n            checkBindingNoChanges(view, nodeDef, 6, v6);\n        if (bindLen > 7)\n            checkBindingNoChanges(view, nodeDef, 7, v7);\n        if (bindLen > 8)\n            checkBindingNoChanges(view, nodeDef, 8, v8);\n        if (bindLen > 9)\n            checkBindingNoChanges(view, nodeDef, 9, v9);\n    }\n    function checkNoChangesNodeDynamic(view, nodeDef, values) {\n        for (var i = 0; i < values.length; i++) {\n            checkBindingNoChanges(view, nodeDef, i, values[i]);\n        }\n    }\n    /**\n     * Workaround https://github.com/angular/tsickle/issues/497\n     * @suppress {misplacedTypeAnnotation}\n     */\n    function checkNoChangesQuery(view, nodeDef) {\n        var queryList = asQueryList(view, nodeDef.nodeIndex);\n        if (queryList.dirty) {\n            throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n        }\n    }\n    function destroyView(view) {\n        if (view.state & 128 /* Destroyed */) {\n            return;\n        }\n        execEmbeddedViewsAction(view, ViewAction.Destroy);\n        execComponentViewsAction(view, ViewAction.Destroy);\n        callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n        if (view.disposables) {\n            for (var i = 0; i < view.disposables.length; i++) {\n                view.disposables[i]();\n            }\n        }\n        detachProjectedView(view);\n        if (view.renderer.destroyNode) {\n            destroyViewNodes(view);\n        }\n        if (isComponentView(view)) {\n            view.renderer.destroy();\n        }\n        view.state |= 128 /* Destroyed */;\n    }\n    function destroyViewNodes(view) {\n        var len = view.def.nodes.length;\n        for (var i = 0; i < len; i++) {\n            var def = view.def.nodes[i];\n            if (def.flags & 1 /* TypeElement */) {\n                view.renderer.destroyNode(asElementData(view, i).renderElement);\n            }\n            else if (def.flags & 2 /* TypeText */) {\n                view.renderer.destroyNode(asTextData(view, i).renderText);\n            }\n            else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n                asQueryList(view, i).destroy();\n            }\n        }\n    }\n    var ViewAction;\n    (function (ViewAction) {\n        ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n        ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n        ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n        ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n        ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n        ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n    })(ViewAction || (ViewAction = {}));\n    function execComponentViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 33554432 /* ComponentView */) {\n                // a leaf\n                callViewAction(asElementData(view, i).componentView, action);\n            }\n            else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function execEmbeddedViewsAction(view, action) {\n        var def = view.def;\n        if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n            return;\n        }\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                // a leaf\n                var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    callViewAction(embeddedViews[k], action);\n                }\n            }\n            else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n                // a parent with leafs\n                // no child is a component,\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    function callViewAction(view, action) {\n        var viewState = view.state;\n        switch (action) {\n            case ViewAction.CheckNoChanges:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckNoChangesProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkNoChangesView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdate:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                    }\n                }\n                break;\n            case ViewAction.CheckAndUpdateProjectedViews:\n                if ((viewState & 128 /* Destroyed */) === 0) {\n                    if (viewState & 32 /* CheckProjectedView */) {\n                        checkAndUpdateView(view);\n                    }\n                    else if (viewState & 64 /* CheckProjectedViews */) {\n                        execProjectedViewsAction(view, action);\n                    }\n                }\n                break;\n            case ViewAction.Destroy:\n                // Note: destroyView recurses over all views,\n                // so we don't need to special case projected views here.\n                destroyView(view);\n                break;\n            case ViewAction.CreateViewNodes:\n                createViewNodes(view);\n                break;\n        }\n    }\n    function execProjectedViewsAction(view, action) {\n        execEmbeddedViewsAction(view, action);\n        execComponentViewsAction(view, action);\n    }\n    function execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n        if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n            return;\n        }\n        var nodeCount = view.def.nodes.length;\n        for (var i = 0; i < nodeCount; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n                Services.setCurrentNode(view, nodeDef.nodeIndex);\n                switch (checkType) {\n                    case 0 /* CheckAndUpdate */:\n                        checkAndUpdateQuery(view, nodeDef);\n                        break;\n                    case 1 /* CheckNoChanges */:\n                        checkNoChangesQuery(view, nodeDef);\n                        break;\n                }\n            }\n            if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n                // no child has a matching query\n                // then skip the children\n                i += nodeDef.childCount;\n            }\n        }\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var initialized = false;\n    function initServicesIfNeeded() {\n        if (initialized) {\n            return;\n        }\n        initialized = true;\n        var services = isDevMode() ? createDebugServices() : createProdServices();\n        Services.setCurrentNode = services.setCurrentNode;\n        Services.createRootView = services.createRootView;\n        Services.createEmbeddedView = services.createEmbeddedView;\n        Services.createComponentView = services.createComponentView;\n        Services.createNgModuleRef = services.createNgModuleRef;\n        Services.overrideProvider = services.overrideProvider;\n        Services.overrideComponentView = services.overrideComponentView;\n        Services.clearOverrides = services.clearOverrides;\n        Services.checkAndUpdateView = services.checkAndUpdateView;\n        Services.checkNoChangesView = services.checkNoChangesView;\n        Services.destroyView = services.destroyView;\n        Services.resolveDep = resolveDep;\n        Services.createDebugContext = services.createDebugContext;\n        Services.handleEvent = services.handleEvent;\n        Services.updateDirectives = services.updateDirectives;\n        Services.updateRenderer = services.updateRenderer;\n        Services.dirtyParentQueries = dirtyParentQueries;\n    }\n    function createProdServices() {\n        return {\n            setCurrentNode: function () { },\n            createRootView: createProdRootView,\n            createEmbeddedView: createEmbeddedView,\n            createComponentView: createComponentView,\n            createNgModuleRef: createNgModuleRef,\n            overrideProvider: NOOP,\n            overrideComponentView: NOOP,\n            clearOverrides: NOOP,\n            checkAndUpdateView: checkAndUpdateView,\n            checkNoChangesView: checkNoChangesView,\n            destroyView: destroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: function (view, nodeIndex, eventName, event) {\n                return view.def.handleEvent(view, nodeIndex, eventName, event);\n            },\n            updateDirectives: function (view, checkType) { return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n            updateRenderer: function (view, checkType) { return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view); },\n        };\n    }\n    function createDebugServices() {\n        return {\n            setCurrentNode: debugSetCurrentNode,\n            createRootView: debugCreateRootView,\n            createEmbeddedView: debugCreateEmbeddedView,\n            createComponentView: debugCreateComponentView,\n            createNgModuleRef: debugCreateNgModuleRef,\n            overrideProvider: debugOverrideProvider,\n            overrideComponentView: debugOverrideComponentView,\n            clearOverrides: debugClearOverrides,\n            checkAndUpdateView: debugCheckAndUpdateView,\n            checkNoChangesView: debugCheckNoChangesView,\n            destroyView: debugDestroyView,\n            createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n            handleEvent: debugHandleEvent,\n            updateDirectives: debugUpdateDirectives,\n            updateRenderer: debugUpdateRenderer,\n        };\n    }\n    function createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n    }\n    function debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n        var rendererFactory = ngModule.injector.get(RendererFactory2);\n        var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n        var defWithOverride = applyProviderOverridesToView(def);\n        return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n    }\n    function createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n        var sanitizer = ngModule.injector.get(Sanitizer);\n        var errorHandler = ngModule.injector.get(ErrorHandler);\n        var renderer = rendererFactory.createRenderer(null, null);\n        return {\n            ngModule: ngModule,\n            injector: elInjector, projectableNodes: projectableNodes,\n            selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n        };\n    }\n    function debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n        var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n        return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n    }\n    function debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n        var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n        if (overrideComponentView) {\n            viewDef$$1 = overrideComponentView;\n        }\n        else {\n            viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n        }\n        return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n    }\n    function debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n        var defWithOverride = applyProviderOverridesToNgModule(def);\n        return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n    }\n    var providerOverrides = new Map();\n    var providerOverridesWithScope = new Map();\n    var viewDefOverrides = new Map();\n    function debugOverrideProvider(override) {\n        providerOverrides.set(override.token, override);\n        var injectableDef;\n        if (typeof override.token === 'function' && (injectableDef = getInjectableDef(override.token)) &&\n            typeof injectableDef.providedIn === 'function') {\n            providerOverridesWithScope.set(override.token, override);\n        }\n    }\n    function debugOverrideComponentView(comp, compFactory) {\n        var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n        var compViewDef = resolveDefinition(hostViewDef.nodes[0].element.componentView);\n        viewDefOverrides.set(comp, compViewDef);\n    }\n    function debugClearOverrides() {\n        providerOverrides.clear();\n        providerOverridesWithScope.clear();\n        viewDefOverrides.clear();\n    }\n    // Notes about the algorithm:\n    // 1) Locate the providers of an element and check if one of them was overwritten\n    // 2) Change the providers of that element\n    //\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToView(def) {\n        if (providerOverrides.size === 0) {\n            return def;\n        }\n        var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n        if (elementIndicesWithOverwrittenProviders.length === 0) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n            applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n        }\n        return def;\n        function findElementIndicesWithOverwrittenProviders(def) {\n            var elIndicesWithOverwrittenProviders = [];\n            var lastElementDef = null;\n            for (var i = 0; i < def.nodes.length; i++) {\n                var nodeDef = def.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    lastElementDef = nodeDef;\n                }\n                if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                    providerOverrides.has(nodeDef.provider.token)) {\n                    elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                    lastElementDef = null;\n                }\n            }\n            return elIndicesWithOverwrittenProviders;\n        }\n        function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n            for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n                var nodeDef = viewDef$$1.nodes[i];\n                if (nodeDef.flags & 1 /* TypeElement */) {\n                    // stop at the next element\n                    return;\n                }\n                if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                    var provider = nodeDef.provider;\n                    var override = providerOverrides.get(provider.token);\n                    if (override) {\n                        nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                        provider.deps = splitDepsDsl(override.deps);\n                        provider.value = override.value;\n                    }\n                }\n            }\n        }\n    }\n    // Notes about the algorithm:\n    // We only create new datastructures if we need to, to keep perf impact\n    // reasonable.\n    function applyProviderOverridesToNgModule(def) {\n        var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n        if (!hasOverrides) {\n            return def;\n        }\n        // clone the whole view definition,\n        // as it maintains references between the nodes that are hard to update.\n        def = def.factory(function () { return NOOP; });\n        applyProviderOverrides(def);\n        return def;\n        function calcHasOverrides(def) {\n            var hasOverrides = false;\n            var hasDeprecatedOverrides = false;\n            if (providerOverrides.size === 0) {\n                return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n            }\n            def.providers.forEach(function (node) {\n                var override = providerOverrides.get(node.token);\n                if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n            def.modules.forEach(function (module) {\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (getInjectableDef(token).providedIn === module) {\n                        hasOverrides = true;\n                        hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                    }\n                });\n            });\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        function applyProviderOverrides(def) {\n            for (var i = 0; i < def.providers.length; i++) {\n                var provider = def.providers[i];\n                if (hasDeprecatedOverrides) {\n                    // We had a bug where me made\n                    // all providers lazy. Keep this logic behind a flag\n                    // for migrating existing users.\n                    provider.flags |= 4096 /* LazyProvider */;\n                }\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n            if (providerOverridesWithScope.size > 0) {\n                var moduleSet_1 = new Set(def.modules);\n                providerOverridesWithScope.forEach(function (override, token) {\n                    if (moduleSet_1.has(getInjectableDef(token).providedIn)) {\n                        var provider = {\n                            token: token,\n                            flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                            deps: splitDepsDsl(override.deps),\n                            value: override.value,\n                            index: def.providers.length,\n                        };\n                        def.providers.push(provider);\n                        def.providersByKey[tokenKey(token)] = provider;\n                    }\n                });\n            }\n        }\n    }\n    function prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n        var nodeDef = view.def.nodes[checkIndex];\n        checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, checkIndex).value :\n            undefined;\n    }\n    function debugCheckAndUpdateView(view) {\n        return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n    }\n    function debugCheckNoChangesView(view) {\n        return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n    }\n    function debugDestroyView(view) {\n        return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n    }\n    var DebugAction;\n    (function (DebugAction) {\n        DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n        DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n        DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n        DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n        DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n    })(DebugAction || (DebugAction = {}));\n    var _currentAction;\n    var _currentView;\n    var _currentNodeIndex;\n    function debugSetCurrentNode(view, nodeIndex) {\n        _currentView = view;\n        _currentNodeIndex = nodeIndex;\n    }\n    function debugHandleEvent(view, nodeIndex, eventName, event) {\n        debugSetCurrentNode(view, nodeIndex);\n        return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n    }\n    function debugUpdateDirectives(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n        return view.def.updateDirectives(debugCheckDirectivesFn, view);\n        function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugUpdateRenderer(view, checkType) {\n        if (view.state & 128 /* Destroyed */) {\n            throw viewDestroyedError(DebugAction[_currentAction]);\n        }\n        debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n        return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n        function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n            var values = [];\n            for (var _i = 3; _i < arguments.length; _i++) {\n                values[_i - 3] = arguments[_i];\n            }\n            var nodeDef = view.def.nodes[nodeIndex];\n            if (checkType === 0 /* CheckAndUpdate */) {\n                debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n            }\n            else {\n                debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n            }\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n            }\n            return (nodeDef.flags & 224 /* CatPureExpression */) ?\n                asPureExpressionData(view, nodeDef.nodeIndex).value :\n                undefined;\n        }\n    }\n    function debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n        var changed = checkAndUpdateNode.apply(void 0, __spread([view, nodeDef, argStyle], givenValues));\n        if (changed) {\n            var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n            if (nodeDef.flags & 16384 /* TypeDirective */) {\n                var bindingValues = {};\n                for (var i = 0; i < nodeDef.bindings.length; i++) {\n                    var binding = nodeDef.bindings[i];\n                    var value = values[i];\n                    if (binding.flags & 8 /* TypeProperty */) {\n                        bindingValues[normalizeDebugBindingName(binding.nonMinifiedName)] =\n                            normalizeDebugBindingValue(value);\n                    }\n                }\n                var elDef = nodeDef.parent;\n                var el = asElementData(view, elDef.nodeIndex).renderElement;\n                if (!elDef.element.name) {\n                    // a comment.\n                    view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n                }\n                else {\n                    // a regular element.\n                    for (var attr in bindingValues) {\n                        var value = bindingValues[attr];\n                        if (value != null) {\n                            view.renderer.setAttribute(el, attr, value);\n                        }\n                        else {\n                            view.renderer.removeAttribute(el, attr);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n        checkNoChangesNode.apply(void 0, __spread([view, nodeDef, argStyle], values));\n    }\n    function nextDirectiveWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    function nextRenderNodeWithBinding(view, nodeIndex) {\n        for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n                return i;\n            }\n        }\n        return null;\n    }\n    var DebugContext_ = /** @class */ (function () {\n        function DebugContext_(view, nodeIndex) {\n            this.view = view;\n            this.nodeIndex = nodeIndex;\n            if (nodeIndex == null) {\n                this.nodeIndex = nodeIndex = 0;\n            }\n            this.nodeDef = view.def.nodes[nodeIndex];\n            var elDef = this.nodeDef;\n            var elView = view;\n            while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n                elDef = elDef.parent;\n            }\n            if (!elDef) {\n                while (!elDef && elView) {\n                    elDef = viewParentEl(elView);\n                    elView = elView.parent;\n                }\n            }\n            this.elDef = elDef;\n            this.elView = elView;\n        }\n        Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n            get: function () {\n                // Has to be done lazily as we use the DebugContext also during creation of elements...\n                return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"injector\", {\n            get: function () { return createInjector$1(this.elView, this.elDef); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"component\", {\n            get: function () { return this.elOrCompView.component; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"context\", {\n            get: function () { return this.elOrCompView.context; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n            get: function () {\n                var tokens = [];\n                if (this.elDef) {\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            tokens.push(childDef.provider.token);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return tokens;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"references\", {\n            get: function () {\n                var references = {};\n                if (this.elDef) {\n                    collectReferences(this.elView, this.elDef, references);\n                    for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                        var childDef = this.elView.def.nodes[i];\n                        if (childDef.flags & 20224 /* CatProvider */) {\n                            collectReferences(this.elView, childDef, references);\n                        }\n                        i += childDef.childCount;\n                    }\n                }\n                return references;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n            get: function () {\n                var elData = findHostElement(this.elOrCompView);\n                return elData ? elData.renderElement : undefined;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n            get: function () {\n                return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                    renderNode(this.elView, this.elDef);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DebugContext_.prototype.logError = function (console) {\n            var values = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                values[_i - 1] = arguments[_i];\n            }\n            var logViewDef;\n            var logNodeIndex;\n            if (this.nodeDef.flags & 2 /* TypeText */) {\n                logViewDef = this.view.def;\n                logNodeIndex = this.nodeDef.nodeIndex;\n            }\n            else {\n                logViewDef = this.elView.def;\n                logNodeIndex = this.elDef.nodeIndex;\n            }\n            // Note: we only generate a log function for text and element nodes\n            // to make the generated code as small as possible.\n            var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n            var currRenderNodeIndex = -1;\n            var nodeLogger = function () {\n                var _a;\n                currRenderNodeIndex++;\n                if (currRenderNodeIndex === renderNodeIndex) {\n                    return (_a = console.error).bind.apply(_a, __spread([console], values));\n                }\n                else {\n                    return NOOP;\n                }\n            };\n            logViewDef.factory(nodeLogger);\n            if (currRenderNodeIndex < renderNodeIndex) {\n                console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n                console.error.apply(console, __spread(values));\n            }\n        };\n        return DebugContext_;\n    }());\n    function getRenderNodeIndex(viewDef$$1, nodeIndex) {\n        var renderNodeIndex = -1;\n        for (var i = 0; i <= nodeIndex; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 3 /* CatRenderNode */) {\n                renderNodeIndex++;\n            }\n        }\n        return renderNodeIndex;\n    }\n    function findHostElement(view) {\n        while (view && !isComponentView(view)) {\n            view = view.parent;\n        }\n        if (view.parent) {\n            return asElementData(view.parent, viewParentEl(view).nodeIndex);\n        }\n        return null;\n    }\n    function collectReferences(view, nodeDef, references) {\n        for (var refName in nodeDef.references) {\n            references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n        }\n    }\n    function callWithDebugContext(action, fn, self, args) {\n        var oldAction = _currentAction;\n        var oldView = _currentView;\n        var oldNodeIndex = _currentNodeIndex;\n        try {\n            _currentAction = action;\n            var result = fn.apply(self, args);\n            _currentView = oldView;\n            _currentNodeIndex = oldNodeIndex;\n            _currentAction = oldAction;\n            return result;\n        }\n        catch (e) {\n            if (isViewDebugError(e) || !_currentView) {\n                throw e;\n            }\n            throw viewWrappedDebugError(e, getCurrentDebugContext());\n        }\n    }\n    function getCurrentDebugContext() {\n        return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n    }\n    var DebugRendererFactory2 = /** @class */ (function () {\n        function DebugRendererFactory2(delegate) {\n            this.delegate = delegate;\n        }\n        DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n            return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n        };\n        DebugRendererFactory2.prototype.begin = function () {\n            if (this.delegate.begin) {\n                this.delegate.begin();\n            }\n        };\n        DebugRendererFactory2.prototype.end = function () {\n            if (this.delegate.end) {\n                this.delegate.end();\n            }\n        };\n        DebugRendererFactory2.prototype.whenRenderingDone = function () {\n            if (this.delegate.whenRenderingDone) {\n                return this.delegate.whenRenderingDone();\n            }\n            return Promise.resolve(null);\n        };\n        return DebugRendererFactory2;\n    }());\n    var DebugRenderer2 = /** @class */ (function () {\n        function DebugRenderer2(delegate) {\n            this.delegate = delegate;\n            /**\n             * Factory function used to create a `DebugContext` when a node is created.\n             *\n             * The `DebugContext` allows to retrieve information about the nodes that are useful in tests.\n             *\n             * The factory is configurable so that the `DebugRenderer2` could instantiate either a View Engine\n             * or a Render context.\n             */\n            this.debugContextFactory = getCurrentDebugContext;\n            this.data = this.delegate.data;\n        }\n        DebugRenderer2.prototype.createDebugContext = function (nativeElement) { return this.debugContextFactory(nativeElement); };\n        DebugRenderer2.prototype.destroyNode = function (node) {\n            removeDebugNodeFromIndex(getDebugNode(node));\n            if (this.delegate.destroyNode) {\n                this.delegate.destroyNode(node);\n            }\n        };\n        DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n        DebugRenderer2.prototype.createElement = function (name, namespace) {\n            var el = this.delegate.createElement(name, namespace);\n            var debugCtx = this.createDebugContext(el);\n            if (debugCtx) {\n                var debugEl = new DebugElement__PRE_R3__(el, null, debugCtx);\n                debugEl.name = name;\n                indexDebugNode(debugEl);\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.createComment = function (value) {\n            var comment = this.delegate.createComment(value);\n            var debugCtx = this.createDebugContext(comment);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(comment, null, debugCtx));\n            }\n            return comment;\n        };\n        DebugRenderer2.prototype.createText = function (value) {\n            var text = this.delegate.createText(value);\n            var debugCtx = this.createDebugContext(text);\n            if (debugCtx) {\n                indexDebugNode(new DebugNode__PRE_R3__(text, null, debugCtx));\n            }\n            return text;\n        };\n        DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.addChild(debugChildEl);\n            }\n            this.delegate.appendChild(parent, newChild);\n        };\n        DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(newChild);\n            var debugRefEl = getDebugNode(refChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.insertBefore(debugRefEl, debugChildEl);\n            }\n            this.delegate.insertBefore(parent, newChild, refChild);\n        };\n        DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n            var debugEl = getDebugNode(parent);\n            var debugChildEl = getDebugNode(oldChild);\n            if (debugEl && debugChildEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.removeChild(debugChildEl);\n            }\n            this.delegate.removeChild(parent, oldChild);\n        };\n        DebugRenderer2.prototype.selectRootElement = function (selectorOrNode, preserveContent) {\n            var el = this.delegate.selectRootElement(selectorOrNode, preserveContent);\n            var debugCtx = getCurrentDebugContext();\n            if (debugCtx) {\n                indexDebugNode(new DebugElement__PRE_R3__(el, null, debugCtx));\n            }\n            return el;\n        };\n        DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = value;\n            }\n            this.delegate.setAttribute(el, name, value, namespace);\n        };\n        DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                var fullName = namespace ? namespace + ':' + name : name;\n                debugEl.attributes[fullName] = null;\n            }\n            this.delegate.removeAttribute(el, name, namespace);\n        };\n        DebugRenderer2.prototype.addClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = true;\n            }\n            this.delegate.addClass(el, name);\n        };\n        DebugRenderer2.prototype.removeClass = function (el, name) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.classes[name] = false;\n            }\n            this.delegate.removeClass(el, name);\n        };\n        DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = value;\n            }\n            this.delegate.setStyle(el, style, value, flags);\n        };\n        DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.styles[style] = null;\n            }\n            this.delegate.removeStyle(el, style, flags);\n        };\n        DebugRenderer2.prototype.setProperty = function (el, name, value) {\n            var debugEl = getDebugNode(el);\n            if (debugEl && debugEl instanceof DebugElement__PRE_R3__) {\n                debugEl.properties[name] = value;\n            }\n            this.delegate.setProperty(el, name, value);\n        };\n        DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n            if (typeof target !== 'string') {\n                var debugEl = getDebugNode(target);\n                if (debugEl) {\n                    debugEl.listeners.push(new EventListener(eventName, callback));\n                }\n            }\n            return this.delegate.listen(target, eventName, callback);\n        };\n        DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n        DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n        DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n        return DebugRenderer2;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function overrideProvider(override) {\n        initServicesIfNeeded();\n        return Services.overrideProvider(override);\n    }\n    function overrideComponentView(comp, componentFactory) {\n        initServicesIfNeeded();\n        return Services.overrideComponentView(comp, componentFactory);\n    }\n    function clearOverrides() {\n        initServicesIfNeeded();\n        return Services.clearOverrides();\n    }\n    // Attention: this function is called as top level function.\n    // Putting any logic in here will destroy closure tree shaking!\n    function createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n        return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n    }\n    function cloneNgModuleDefinition(def) {\n        var providers = Array.from(def.providers);\n        var modules = Array.from(def.modules);\n        var providersByKey = {};\n        for (var key in def.providersByKey) {\n            providersByKey[key] = def.providersByKey[key];\n        }\n        return {\n            factory: def.factory,\n            isRoot: def.isRoot, providers: providers, modules: modules, providersByKey: providersByKey,\n        };\n    }\n    var NgModuleFactory_ = /** @class */ (function (_super) {\n        __extends(NgModuleFactory_, _super);\n        function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n            var _this = \n            // Attention: this ctor is called as top level function.\n            // Putting any logic in here will destroy closure tree shaking!\n            _super.call(this) || this;\n            _this.moduleType = moduleType;\n            _this._bootstrapComponents = _bootstrapComponents;\n            _this._ngModuleDefFactory = _ngModuleDefFactory;\n            return _this;\n        }\n        NgModuleFactory_.prototype.create = function (parentInjector) {\n            initServicesIfNeeded();\n            // Clone the NgModuleDefinition so that any tree shakeable provider definition\n            // added to this instance of the NgModuleRef doesn't affect the cached copy.\n            // See https://github.com/angular/angular/issues/25018.\n            var def = cloneNgModuleDefinition(resolveDefinition(this._ngModuleDefFactory));\n            return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n        };\n        return NgModuleFactory_;\n    }(NgModuleFactory));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // clang-format on\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    // This file only reexports content of the `src` folder. Keep it that way.\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_core_core_s = APPLICATION_MODULE_PROVIDERS;\n    exports.ɵangular_packages_core_core_p = _iterableDiffersFactory;\n    exports.ɵangular_packages_core_core_q = _keyValueDiffersFactory;\n    exports.ɵangular_packages_core_core_r = _localeFactory;\n    exports.ɵangular_packages_core_core_g = _appIdRandomProviderFactory;\n    exports.ɵangular_packages_core_core_n = DefaultIterableDifferFactory;\n    exports.ɵangular_packages_core_core_o = DefaultKeyValueDifferFactory;\n    exports.ɵangular_packages_core_core_m = DebugElement__PRE_R3__;\n    exports.ɵangular_packages_core_core_l = DebugNode__PRE_R3__;\n    exports.ɵangular_packages_core_core_c = injectInjectorOnly;\n    exports.ɵangular_packages_core_core_d = ReflectiveInjector_;\n    exports.ɵangular_packages_core_core_e = ReflectiveDependency;\n    exports.ɵangular_packages_core_core_f = resolveReflectiveProviders;\n    exports.ɵangular_packages_core_core_k = getModuleFactory__PRE_R3__;\n    exports.ɵangular_packages_core_core_t = wtfEnabled;\n    exports.ɵangular_packages_core_core_v = createScope;\n    exports.ɵangular_packages_core_core_u = detectWTF;\n    exports.ɵangular_packages_core_core_y = endTimeRange;\n    exports.ɵangular_packages_core_core_w = leave;\n    exports.ɵangular_packages_core_core_x = startTimeRange;\n    exports.ɵangular_packages_core_core_bb = injectAttributeImpl;\n    exports.ɵangular_packages_core_core_bi = NG_INJECTABLE_DEF;\n    exports.ɵangular_packages_core_core_bc = getLView;\n    exports.ɵangular_packages_core_core_bd = getPreviousOrParentTNode;\n    exports.ɵangular_packages_core_core_be = nextContextImpl;\n    exports.ɵangular_packages_core_core_bh = BoundPlayerFactory;\n    exports.ɵangular_packages_core_core_bl = loadInternal;\n    exports.ɵangular_packages_core_core_h = createElementRef;\n    exports.ɵangular_packages_core_core_i = createTemplateRef;\n    exports.ɵangular_packages_core_core_j = createViewRef;\n    exports.ɵangular_packages_core_core_a = makeParamDecorator;\n    exports.ɵangular_packages_core_core_b = makePropDecorator;\n    exports.ɵangular_packages_core_core_bj = getClosureSafeProperty;\n    exports.ɵangular_packages_core_core_z = _def;\n    exports.ɵangular_packages_core_core_ba = DebugContext;\n    exports.createPlatform = createPlatform;\n    exports.assertPlatform = assertPlatform;\n    exports.destroyPlatform = destroyPlatform;\n    exports.getPlatform = getPlatform;\n    exports.PlatformRef = PlatformRef;\n    exports.ApplicationRef = ApplicationRef;\n    exports.createPlatformFactory = createPlatformFactory;\n    exports.NgProbeToken = NgProbeToken;\n    exports.enableProdMode = enableProdMode;\n    exports.isDevMode = isDevMode;\n    exports.APP_ID = APP_ID;\n    exports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\n    exports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\n    exports.PLATFORM_ID = PLATFORM_ID;\n    exports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\n    exports.APP_INITIALIZER = APP_INITIALIZER;\n    exports.ApplicationInitStatus = ApplicationInitStatus;\n    exports.DebugElement = DebugElement;\n    exports.DebugNode = DebugNode;\n    exports.asNativeElements = asNativeElements;\n    exports.getDebugNode = getDebugNode;\n    exports.Testability = Testability;\n    exports.TestabilityRegistry = TestabilityRegistry;\n    exports.setTestabilityGetter = setTestabilityGetter;\n    exports.TRANSLATIONS = TRANSLATIONS;\n    exports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\n    exports.LOCALE_ID = LOCALE_ID;\n    exports.ApplicationModule = ApplicationModule;\n    exports.wtfCreateScope = wtfCreateScope;\n    exports.wtfLeave = wtfLeave;\n    exports.wtfStartTimeRange = wtfStartTimeRange;\n    exports.wtfEndTimeRange = wtfEndTimeRange;\n    exports.Type = Type;\n    exports.EventEmitter = EventEmitter;\n    exports.ErrorHandler = ErrorHandler;\n    exports.Sanitizer = Sanitizer;\n    exports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\n    exports.Attribute = Attribute;\n    exports.ContentChild = ContentChild;\n    exports.ContentChildren = ContentChildren;\n    exports.Query = Query;\n    exports.ViewChild = ViewChild;\n    exports.ViewChildren = ViewChildren;\n    exports.Component = Component;\n    exports.Directive = Directive;\n    exports.HostBinding = HostBinding;\n    exports.HostListener = HostListener;\n    exports.Input = Input;\n    exports.Output = Output;\n    exports.Pipe = Pipe;\n    exports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\n    exports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\n    exports.NgModule = NgModule;\n    exports.Version = Version;\n    exports.VERSION = VERSION;\n    exports.defineInjectable = defineInjectable;\n    exports.defineInjector = defineInjector;\n    exports.forwardRef = forwardRef;\n    exports.resolveForwardRef = resolveForwardRef;\n    exports.Injectable = Injectable;\n    exports.INJECTOR = INJECTOR$1;\n    exports.Injector = Injector;\n    exports.inject = inject;\n    exports.ɵinject = inject;\n    exports.ReflectiveInjector = ReflectiveInjector;\n    exports.createInjector = createInjector;\n    exports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\n    exports.ReflectiveKey = ReflectiveKey;\n    exports.InjectionToken = InjectionToken;\n    exports.Inject = Inject;\n    exports.Optional = Optional;\n    exports.Self = Self;\n    exports.SkipSelf = SkipSelf;\n    exports.Host = Host;\n    exports.NgZone = NgZone;\n    exports.ɵNoopNgZone = NoopNgZone;\n    exports.RenderComponentType = RenderComponentType;\n    exports.Renderer = Renderer;\n    exports.Renderer2 = Renderer2;\n    exports.RendererFactory2 = RendererFactory2;\n    exports.RootRenderer = RootRenderer;\n    exports.COMPILER_OPTIONS = COMPILER_OPTIONS;\n    exports.Compiler = Compiler;\n    exports.CompilerFactory = CompilerFactory;\n    exports.ModuleWithComponentFactories = ModuleWithComponentFactories;\n    exports.ComponentFactory = ComponentFactory;\n    exports.ɵComponentFactory = ComponentFactory;\n    exports.ComponentRef = ComponentRef;\n    exports.ComponentFactoryResolver = ComponentFactoryResolver;\n    exports.ElementRef = ElementRef;\n    exports.NgModuleFactory = NgModuleFactory;\n    exports.NgModuleRef = NgModuleRef;\n    exports.NgModuleFactoryLoader = NgModuleFactoryLoader;\n    exports.getModuleFactory = getModuleFactory;\n    exports.QueryList = QueryList$1;\n    exports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\n    exports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\n    exports.TemplateRef = TemplateRef;\n    exports.ViewContainerRef = ViewContainerRef;\n    exports.EmbeddedViewRef = EmbeddedViewRef;\n    exports.ViewRef = ViewRef$1;\n    exports.ChangeDetectorRef = ChangeDetectorRef;\n    exports.DefaultIterableDiffer = DefaultIterableDiffer;\n    exports.IterableDiffers = IterableDiffers;\n    exports.KeyValueDiffers = KeyValueDiffers;\n    exports.SimpleChange = SimpleChange;\n    exports.WrappedValue = WrappedValue;\n    exports.platformCore = platformCore;\n    exports.ɵALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\n    exports.ɵAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\n    exports.ɵdefaultIterableDiffers = defaultIterableDiffers;\n    exports.ɵdefaultKeyValueDiffers = defaultKeyValueDiffers;\n    exports.ɵdevModeEqual = devModeEqual;\n    exports.ɵisListLikeIterable = isListLikeIterable;\n    exports.ɵisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\n    exports.ɵConsole = Console;\n    exports.ɵgetInjectableDef = getInjectableDef;\n    exports.ɵsetCurrentInjector = setCurrentInjector;\n    exports.ɵAPP_ROOT = APP_ROOT;\n    exports.ɵivyEnabled = ivyEnabled;\n    exports.ɵCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\n    exports.ɵresolveComponentResources = resolveComponentResources;\n    exports.ɵReflectionCapabilities = ReflectionCapabilities;\n    exports.ɵRenderDebugInfo = RenderDebugInfo;\n    exports.ɵ_sanitizeHtml = _sanitizeHtml;\n    exports.ɵ_sanitizeStyle = _sanitizeStyle;\n    exports.ɵ_sanitizeUrl = _sanitizeUrl;\n    exports.ɵglobal = _global;\n    exports.ɵlooseIdentical = looseIdentical;\n    exports.ɵstringify = stringify;\n    exports.ɵmakeDecorator = makeDecorator;\n    exports.ɵisObservable = isObservable;\n    exports.ɵisPromise = isPromise;\n    exports.ɵclearOverrides = clearOverrides;\n    exports.ɵinitServicesIfNeeded = initServicesIfNeeded;\n    exports.ɵoverrideComponentView = overrideComponentView;\n    exports.ɵoverrideProvider = overrideProvider;\n    exports.ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR$1;\n    exports.ɵdefineBase = defineBase;\n    exports.ɵdefineComponent = defineComponent;\n    exports.ɵdefineDirective = defineDirective;\n    exports.ɵdefinePipe = definePipe;\n    exports.ɵdefineNgModule = defineNgModule;\n    exports.ɵdetectChanges = detectChanges;\n    exports.ɵrenderComponent = renderComponent;\n    exports.ɵRender3ComponentFactory = ComponentFactory$1;\n    exports.ɵRender3ComponentRef = ComponentRef$1;\n    exports.ɵdirectiveInject = directiveInject;\n    exports.ɵinjectAttribute = injectAttribute;\n    exports.ɵgetFactoryOf = getFactoryOf;\n    exports.ɵgetInheritedFactory = getInheritedFactory;\n    exports.ɵtemplateRefExtractor = templateRefExtractor;\n    exports.ɵProvidersFeature = ProvidersFeature;\n    exports.ɵInheritDefinitionFeature = InheritDefinitionFeature;\n    exports.ɵNgOnChangesFeature = NgOnChangesFeature;\n    exports.ɵLifecycleHooksFeature = LifecycleHooksFeature;\n    exports.ɵRender3NgModuleRef = NgModuleRef$1;\n    exports.ɵmarkDirty = markDirty;\n    exports.ɵNgModuleFactory = NgModuleFactory$1;\n    exports.ɵNO_CHANGE = NO_CHANGE;\n    exports.ɵcontainer = container;\n    exports.ɵnextContext = nextContext;\n    exports.ɵelementStart = elementStart;\n    exports.ɵnamespaceHTML = namespaceHTML;\n    exports.ɵnamespaceMathML = namespaceMathML;\n    exports.ɵnamespaceSVG = namespaceSVG;\n    exports.ɵelement = element;\n    exports.ɵlistener = listener;\n    exports.ɵtext = text;\n    exports.ɵembeddedViewStart = embeddedViewStart;\n    exports.ɵquery = query;\n    exports.ɵregisterContentQuery = registerContentQuery;\n    exports.ɵprojection = projection;\n    exports.ɵbind = bind;\n    exports.ɵinterpolation1 = interpolation1;\n    exports.ɵinterpolation2 = interpolation2;\n    exports.ɵinterpolation3 = interpolation3;\n    exports.ɵinterpolation4 = interpolation4;\n    exports.ɵinterpolation5 = interpolation5;\n    exports.ɵinterpolation6 = interpolation6;\n    exports.ɵinterpolation7 = interpolation7;\n    exports.ɵinterpolation8 = interpolation8;\n    exports.ɵinterpolationV = interpolationV;\n    exports.ɵpipeBind1 = pipeBind1;\n    exports.ɵpipeBind2 = pipeBind2;\n    exports.ɵpipeBind3 = pipeBind3;\n    exports.ɵpipeBind4 = pipeBind4;\n    exports.ɵpipeBindV = pipeBindV;\n    exports.ɵpureFunction0 = pureFunction0;\n    exports.ɵpureFunction1 = pureFunction1;\n    exports.ɵpureFunction2 = pureFunction2;\n    exports.ɵpureFunction3 = pureFunction3;\n    exports.ɵpureFunction4 = pureFunction4;\n    exports.ɵpureFunction5 = pureFunction5;\n    exports.ɵpureFunction6 = pureFunction6;\n    exports.ɵpureFunction7 = pureFunction7;\n    exports.ɵpureFunction8 = pureFunction8;\n    exports.ɵpureFunctionV = pureFunctionV;\n    exports.ɵgetCurrentView = getCurrentView;\n    exports.ɵgetHostElement = getHostElement;\n    exports.ɵrestoreView = restoreView;\n    exports.ɵcontainerRefreshStart = containerRefreshStart;\n    exports.ɵcontainerRefreshEnd = containerRefreshEnd;\n    exports.ɵqueryRefresh = queryRefresh;\n    exports.ɵloadQueryList = loadQueryList;\n    exports.ɵelementEnd = elementEnd;\n    exports.ɵelementProperty = elementProperty;\n    exports.ɵcomponentHostSyntheticProperty = componentHostSyntheticProperty;\n    exports.ɵprojectionDef = projectionDef;\n    exports.ɵreference = reference;\n    exports.ɵenableBindings = enableBindings;\n    exports.ɵdisableBindings = disableBindings;\n    exports.ɵallocHostVars = allocHostVars;\n    exports.ɵelementAttribute = elementAttribute;\n    exports.ɵelementContainerStart = elementContainerStart;\n    exports.ɵelementContainerEnd = elementContainerEnd;\n    exports.ɵelementStyling = elementStyling;\n    exports.ɵelementHostAttrs = elementHostAttrs;\n    exports.ɵelementStylingMap = elementStylingMap;\n    exports.ɵelementStyleProp = elementStyleProp;\n    exports.ɵelementStylingApply = elementStylingApply;\n    exports.ɵelementClassProp = elementClassProp;\n    exports.ɵtextBinding = textBinding;\n    exports.ɵtemplate = template;\n    exports.ɵembeddedViewEnd = embeddedViewEnd;\n    exports.ɵstore = store;\n    exports.ɵload = load;\n    exports.ɵpipe = pipe;\n    exports.ɵwhenRendered = whenRendered;\n    exports.ɵi18n = i18n;\n    exports.ɵi18nAttributes = i18nAttributes;\n    exports.ɵi18nExp = i18nExp;\n    exports.ɵi18nStart = i18nStart;\n    exports.ɵi18nEnd = i18nEnd;\n    exports.ɵi18nApply = i18nApply;\n    exports.ɵi18nPostprocess = i18nPostprocess;\n    exports.ɵsetClassMetadata = setClassMetadata;\n    exports.ɵcompileComponent = compileComponent;\n    exports.ɵcompileDirective = compileDirective;\n    exports.ɵcompileNgModule = compileNgModule;\n    exports.ɵcompileNgModuleDefs = compileNgModuleDefs;\n    exports.ɵpatchComponentDefWithScope = patchComponentDefWithScope;\n    exports.ɵresetCompiledComponents = resetCompiledComponents;\n    exports.ɵcompilePipe = compilePipe;\n    exports.ɵsanitizeHtml = sanitizeHtml;\n    exports.ɵsanitizeStyle = sanitizeStyle;\n    exports.ɵsanitizeUrl = sanitizeUrl;\n    exports.ɵsanitizeResourceUrl = sanitizeResourceUrl;\n    exports.ɵbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\n    exports.ɵbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\n    exports.ɵbypassSanitizationTrustScript = bypassSanitizationTrustScript;\n    exports.ɵbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\n    exports.ɵbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\n    exports.ɵgetLContext = getLContext;\n    exports.ɵbindPlayerFactory = bindPlayerFactory;\n    exports.ɵaddPlayer = addPlayer;\n    exports.ɵgetPlayers = getPlayers;\n    exports.ɵcompileNgModuleFactory__POST_R3__ = compileNgModuleFactory__POST_R3__;\n    exports.ɵSWITCH_COMPILE_COMPONENT__POST_R3__ = SWITCH_COMPILE_COMPONENT__POST_R3__;\n    exports.ɵSWITCH_COMPILE_DIRECTIVE__POST_R3__ = SWITCH_COMPILE_DIRECTIVE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_PIPE__POST_R3__ = SWITCH_COMPILE_PIPE__POST_R3__;\n    exports.ɵSWITCH_COMPILE_NGMODULE__POST_R3__ = SWITCH_COMPILE_NGMODULE__POST_R3__;\n    exports.ɵgetDebugNode__POST_R3__ = getDebugNode__POST_R3__;\n    exports.ɵSWITCH_COMPILE_INJECTABLE__POST_R3__ = SWITCH_COMPILE_INJECTABLE__POST_R3__;\n    exports.ɵSWITCH_IVY_ENABLED__POST_R3__ = SWITCH_IVY_ENABLED__POST_R3__;\n    exports.ɵSWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__ = SWITCH_CHANGE_DETECTOR_REF_FACTORY__POST_R3__;\n    exports.ɵCompiler_compileModuleSync__POST_R3__ = Compiler_compileModuleSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAsync__POST_R3__ = Compiler_compileModuleAsync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsSync__POST_R3__ = Compiler_compileModuleAndAllComponentsSync__POST_R3__;\n    exports.ɵCompiler_compileModuleAndAllComponentsAsync__POST_R3__ = Compiler_compileModuleAndAllComponentsAsync__POST_R3__;\n    exports.ɵSWITCH_ELEMENT_REF_FACTORY__POST_R3__ = SWITCH_ELEMENT_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_TEMPLATE_REF_FACTORY__POST_R3__ = SWITCH_TEMPLATE_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__ = SWITCH_VIEW_CONTAINER_REF_FACTORY__POST_R3__;\n    exports.ɵSWITCH_RENDERER2_FACTORY__POST_R3__ = SWITCH_RENDERER2_FACTORY__POST_R3__;\n    exports.ɵgetModuleFactory__POST_R3__ = getModuleFactory__POST_R3__;\n    exports.ɵpublishGlobalUtil = publishGlobalUtil;\n    exports.ɵpublishDefaultGlobalUtils = publishDefaultGlobalUtils;\n    exports.ɵSWITCH_INJECTOR_FACTORY__POST_R3__ = SWITCH_INJECTOR_FACTORY__POST_R3__;\n    exports.ɵregisterModuleFactory = registerModuleFactory;\n    exports.ɵEMPTY_ARRAY = EMPTY_ARRAY$4;\n    exports.ɵEMPTY_MAP = EMPTY_MAP;\n    exports.ɵand = anchorDef;\n    exports.ɵccf = createComponentFactory;\n    exports.ɵcmf = createNgModuleFactory;\n    exports.ɵcrt = createRendererType2;\n    exports.ɵdid = directiveDef;\n    exports.ɵeld = elementDef;\n    exports.ɵelementEventFullName = elementEventFullName;\n    exports.ɵgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\n    exports.ɵinlineInterpolate = inlineInterpolate;\n    exports.ɵinterpolate = interpolate;\n    exports.ɵmod = moduleDef;\n    exports.ɵmpd = moduleProvideDef;\n    exports.ɵncd = ngContentDef;\n    exports.ɵnov = nodeValue;\n    exports.ɵpid = pipeDef;\n    exports.ɵprd = providerDef;\n    exports.ɵpad = pureArrayDef;\n    exports.ɵpod = pureObjectDef;\n    exports.ɵppd = purePipeDef;\n    exports.ɵqud = queryDef;\n    exports.ɵted = textDef;\n    exports.ɵunv = unwrapValue$1;\n    exports.ɵvid = viewDef;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=core.umd.js.map\n"]}